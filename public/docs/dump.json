[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/History.js",
    "memberof": null,
    "longname": "src/core/History.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { OperationType } from \"../volume/csg/OperationType.js\";\r\n\r\n/**\r\n * An operation history.\r\n */\r\n\r\nexport class History {\r\n\r\n\t/**\r\n\t * Constructs a new operation history.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * The elements that have been executed during the current session.\r\n\t\t *\r\n\t\t * @type {SignedDistanceFunction[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.elements = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an SDF to the operation history.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t * @return {Number} The new length of the history list.\r\n\t */\r\n\r\n\tpush(sdf) {\r\n\r\n\t\treturn this.elements.push(sdf);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the SDF that was last added to the history and returns it.\r\n\t *\r\n\t * @return {SignedDistanceFunction} An SDF.\r\n\t */\r\n\r\n\tpop() {\r\n\r\n\t\treturn this.elements.pop();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Combines all operations into one.\r\n\t *\r\n\t * @return {SignedDistanceFunction} An SDF consisting of all past operations, or null if there are none.\r\n\t */\r\n\r\n\tcombine() {\r\n\r\n\t\tconst elements = this.elements;\r\n\r\n\t\tlet a = null;\r\n\t\tlet b = null;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tfor(i = 0, l = elements.length; i < l; ++i) {\r\n\r\n\t\t\tb = elements[i];\r\n\r\n\t\t\tif(a !== null) {\r\n\r\n\t\t\t\tswitch(b.operation) {\r\n\r\n\t\t\t\t\tcase OperationType.UNION:\r\n\t\t\t\t\t\ta.union(b);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase OperationType.DIFFERENCE:\r\n\t\t\t\t\t\ta.subtract(b);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase OperationType.INTERSECTION:\r\n\t\t\t\t\t\ta.intersect(b);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ta = b;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this history.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tthis.elements = [];\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "History",
    "memberof": "src/core/History.js",
    "longname": "src/core/History.js~History",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/History.js",
    "importStyle": "{History}",
    "description": "An operation history.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#constructor",
    "access": null,
    "description": "Constructs a new operation history.",
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#elements",
    "access": "private",
    "description": "The elements that have been executed during the current session.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#push",
    "access": null,
    "description": "Adds an SDF to the operation history.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The new length of the history list."
    },
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pop",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#pop",
    "access": null,
    "description": "Removes the SDF that was last added to the history and returns it.",
    "lineNumber": 45,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "An SDF."
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "combine",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#combine",
    "access": null,
    "description": "Combines all operations into one.",
    "lineNumber": 57,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "An SDF consisting of all past operations, or null if there are none."
    },
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#clear",
    "access": null,
    "description": "Clears this history.",
    "lineNumber": 104,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/core/History.js~History",
    "longname": "src/core/History.js~History#elements",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/index.js",
    "memberof": null,
    "longname": "src/core/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Core components.\r\n *\r\n * @module rabbit-hole/core\r\n */\r\n\r\nexport { History } from \"./History.js\";\r\nexport { PriorityQueue } from \"./PriorityQueue.js\";\r\nexport { Queue } from \"./Queue.js\";\r\nexport { RunLengthEncoder } from \"./RunLengthEncoder.js\";\r\nexport { Scheduler } from \"./Scheduler.js\";\r\nexport { Task } from \"./Task.js\";\r\nexport { Terrain } from \"./Terrain.js\";\r\n"
  },
  {
    "__docId__": 10,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/PriorityQueue.js",
    "memberof": null,
    "longname": "src/core/PriorityQueue.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Queue } from \"./Queue.js\";\r\n\r\n/**\r\n * A queue that maintains elements in a hierarchy. Elements with a high priority\r\n * will be served before elements with a lower priority.\r\n */\r\n\r\nexport class PriorityQueue extends Queue {\r\n\r\n\t/**\r\n\t * Constructs a new priority queue.\r\n\t *\r\n\t * @param {Number} [tiers=1] - The number of priority tiers. The lowest tier represents the lowest priority.\r\n\t */\r\n\r\n\tconstructor(tiers = 1) {\r\n\r\n\t\tsuper();\r\n\r\n\t\ttiers = Math.max(1, tiers);\r\n\r\n\t\twhile(tiers-- > 0) {\r\n\r\n\t\t\tthis.elements.push(new Queue());\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of priority tiers.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tget tiers() { return this.elements.length; }\r\n\r\n\t/**\r\n\t * Adds an element.\r\n\t *\r\n\t * @param {Object} element - The element.\r\n\t * @param {Number} [priority] - The priority of the element.\r\n\t * @return {Number} The index of the added element.\r\n\t */\r\n\r\n\tadd(element, priority) {\r\n\r\n\t\tlet index = -1;\r\n\r\n\t\tif(priority >= 0 && priority < this.elements.length) {\r\n\r\n\t\t\tindex = this.elements[priority].add(element);\r\n\r\n\t\t\tif(priority > this.head) {\r\n\r\n\t\t\t\tthis.head = priority;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++this.size;\r\n\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes an element.\r\n\t *\r\n\t * @param {Object} index - The index of the element.\r\n\t * @param {Number} [priority] - The priority of the element.\r\n\t * @return {Object} The removed element or null if there was none.\r\n\t */\r\n\r\n\tremove(index, priority) {\r\n\r\n\t\tlet element = null;\r\n\r\n\t\tif(priority >= 0 && priority < this.elements.length) {\r\n\r\n\t\t\telement = this.elements[priority].remove(index);\r\n\r\n\t\t\tif(element !== null) {\r\n\r\n\t\t\t\t--this.size;\r\n\r\n\t\t\t\twhile(this.head > 0 && this.elements[this.head].size === 0) {\r\n\r\n\t\t\t\t\t--this.head;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves, but does not remove, the head of the queue, or returns null if\r\n\t * the queue is empty.\r\n\t *\r\n\t * @return {Object} The head of the queue.\r\n\t */\r\n\r\n\tpeek() {\r\n\r\n\t\treturn (this.size > 0) ? this.elements[this.head].peek() : null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the head of the queue, or returns null if the queue is empty.\r\n\t *\r\n\t * @return {Object} The head of the queue.\r\n\t */\r\n\r\n\tpoll() {\r\n\r\n\t\tlet element = null;\r\n\r\n\t\tif(this.size > 0) {\r\n\r\n\t\t\telement = this.elements[this.head].poll();\r\n\r\n\t\t\t--this.size;\r\n\r\n\t\t\twhile(this.head > 0 && this.elements[this.head].size === 0) {\r\n\r\n\t\t\t\t--this.head;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this queue.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tlet i;\r\n\r\n\t\tfor(i = this.elements.length - 1; i >= 0; --i) {\r\n\r\n\t\t\tthis.elements[i].clear();\r\n\r\n\t\t}\r\n\r\n\t\tthis.head = 0;\r\n\t\tthis.size = 0;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 11,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PriorityQueue",
    "memberof": "src/core/PriorityQueue.js",
    "longname": "src/core/PriorityQueue.js~PriorityQueue",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/PriorityQueue.js",
    "importStyle": "{PriorityQueue}",
    "description": "A queue that maintains elements in a hierarchy. Elements with a high priority\nwill be served before elements with a lower priority.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/core/Queue.js~Queue"
    ]
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#constructor",
    "access": null,
    "description": "Constructs a new priority queue.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "tiers",
        "description": "The number of priority tiers. The lowest tier represents the lowest priority."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "tiers",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#tiers",
    "access": null,
    "description": "The amount of priority tiers.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#add",
    "access": null,
    "description": "Adds an element.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "priority",
        "description": "The priority of the element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the added element."
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#head",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#remove",
    "access": null,
    "description": "Deletes an element.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the element."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "priority",
        "description": "The priority of the element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The removed element or null if there was none."
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "peek",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#peek",
    "access": null,
    "description": "Retrieves, but does not remove, the head of the queue, or returns null if\nthe queue is empty.",
    "lineNumber": 109,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The head of the queue."
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "poll",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#poll",
    "access": null,
    "description": "Retrieves the head of the queue, or returns null if the queue is empty.",
    "lineNumber": 121,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The head of the queue."
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#clear",
    "access": null,
    "description": "Clears this queue.",
    "lineNumber": 147,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#head",
    "access": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/core/PriorityQueue.js~PriorityQueue",
    "longname": "src/core/PriorityQueue.js~PriorityQueue#size",
    "access": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Queue.js",
    "memberof": null,
    "longname": "src/core/Queue.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * A basic object queue.\r\n */\r\n\r\nexport class Queue {\r\n\r\n\t/**\r\n\t * Constructs a new queue.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * A list of elements.\r\n\t\t *\r\n\t\t * @type {Object[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.elements = [];\r\n\r\n\t\t/**\r\n\t\t * The head of the queue.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.head = 0;\r\n\r\n\t\t/**\r\n\t\t * The current size of the queue.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.size = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to the queue.\r\n\t *\r\n\t * @param {Object} element - An arbitrary object.\r\n\t * @return {Number} The index of the added element.\r\n\t */\r\n\r\n\tadd(element) {\r\n\r\n\t\tconst index = this.elements.length;\r\n\r\n\t\tthis.elements.push(element);\r\n\r\n\t\t++this.size;\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an element from the queue.\r\n\t *\r\n\t * @param {Number} index - The index of the element.\r\n\t * @return {Object} The removed element or null if there was none.\r\n\t */\r\n\r\n\tremove(index) {\r\n\r\n\t\tconst elements = this.elements;\r\n\t\tconst length = elements.length;\r\n\r\n\t\tlet element = null;\r\n\r\n\t\tif(this.size > 0 && index >= 0 && index < length) {\r\n\r\n\t\t\telement = elements[index];\r\n\r\n\t\t\tif(element !== null) {\r\n\r\n\t\t\t\telements[index] = null;\r\n\r\n\t\t\t\t--this.size;\r\n\r\n\t\t\t\tif(this.size > 0) {\r\n\r\n\t\t\t\t\twhile(this.head < length && elements[this.head] === null) {\r\n\r\n\t\t\t\t\t\t++this.head;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(this.head === length) {\r\n\r\n\t\t\t\t\t\tthis.clear();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.clear();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves, but does not remove, the head of the queue, or returns null if\r\n\t * the queue is empty.\r\n\t *\r\n\t * @return {Object} The head of the queue.\r\n\t */\r\n\r\n\tpeek() {\r\n\r\n\t\treturn (this.size > 0) ? this.elements[this.head] : null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves and removes the head of the queue, or returns null if the queue\r\n\t * is empty.\r\n\t *\r\n\t * @return {Object} The head of the queue.\r\n\t */\r\n\r\n\tpoll() {\r\n\r\n\t\tconst elements = this.elements;\r\n\t\tconst length = elements.length;\r\n\r\n\t\tlet element = null;\r\n\r\n\t\tif(this.size > 0) {\r\n\r\n\t\t\telement = elements[this.head++];\r\n\r\n\t\t\twhile(this.head < length && elements[this.head] === null) {\r\n\r\n\t\t\t\t++this.head;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(this.head === length) {\r\n\r\n\t\t\t\tthis.clear();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t--this.size;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this queue.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tthis.elements = [];\r\n\t\tthis.head = 0;\r\n\t\tthis.size = 0;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 23,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Queue",
    "memberof": "src/core/Queue.js",
    "longname": "src/core/Queue.js~Queue",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/Queue.js",
    "importStyle": "{Queue}",
    "description": "A basic object queue.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 24,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#constructor",
    "access": null,
    "description": "Constructs a new queue.",
    "lineNumber": 11,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#elements",
    "access": "private",
    "description": "A list of elements.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#head",
    "access": "private",
    "description": "The head of the queue.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#size",
    "access": null,
    "description": "The current size of the queue.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#add",
    "access": null,
    "description": "Adds an element to the queue.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "An arbitrary object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the added element."
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#remove",
    "access": null,
    "description": "Removes an element from the queue.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The removed element or null if there was none."
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "peek",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#peek",
    "access": null,
    "description": "Retrieves, but does not remove, the head of the queue, or returns null if\nthe queue is empty.",
    "lineNumber": 119,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The head of the queue."
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "poll",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#poll",
    "access": null,
    "description": "Retrieves and removes the head of the queue, or returns null if the queue\nis empty.",
    "lineNumber": 132,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The head of the queue."
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#clear",
    "access": null,
    "description": "Clears this queue.",
    "lineNumber": 169,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "elements",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#elements",
    "access": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#head",
    "access": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/core/Queue.js~Queue",
    "longname": "src/core/Queue.js~Queue#size",
    "access": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/RunLengthEncoder.js",
    "memberof": null,
    "longname": "src/core/RunLengthEncoder.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * Run-Length Encoding for numerical data.\r\n */\r\n\r\nexport class RunLengthEncoder {\r\n\r\n\t/**\r\n\t * Encodes the given data.\r\n\t *\r\n\t * @param {Number[]} array - The data to encode.\r\n\t * @return {Object} The run-lengths and the encoded data.\r\n\t */\r\n\r\n\tstatic encode(array) {\r\n\r\n\t\tconst runLengths = [];\r\n\t\tconst data = [];\r\n\r\n\t\tlet previous = array[0];\r\n\t\tlet count = 1;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tfor(i = 1, l = array.length; i < l; ++i) {\r\n\r\n\t\t\tif(previous !== array[i]) {\r\n\r\n\t\t\t\trunLengths.push(count);\r\n\t\t\t\tdata.push(previous);\r\n\r\n\t\t\t\tprevious = array[i];\r\n\t\t\t\tcount = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t++count;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\trunLengths.push(count);\r\n\t\tdata.push(previous);\r\n\r\n\t\treturn {\r\n\t\t\trunLengths,\r\n\t\t\tdata\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decodes the given data.\r\n\t *\r\n\t * @param {Number[]} runLengths - The run-lengths.\r\n\t * @param {Number[]} data - The data to decode.\r\n\t * @param {Array} [array] - An optional target.\r\n\t * @return {Array} The decoded data.\r\n\t */\r\n\r\n\tstatic decode(runLengths, data, array = []) {\r\n\r\n\t\tlet element;\r\n\r\n\t\tlet i, j, il, jl;\r\n\t\tlet k = 0;\r\n\r\n\t\tfor(i = 0, il = data.length; i < il; ++i) {\r\n\r\n\t\t\telement = data[i];\r\n\r\n\t\t\tfor(j = 0, jl = runLengths[i]; j < jl; ++j) {\r\n\r\n\t\t\t\tarray[k++] = element;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 37,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RunLengthEncoder",
    "memberof": "src/core/RunLengthEncoder.js",
    "longname": "src/core/RunLengthEncoder.js~RunLengthEncoder",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/RunLengthEncoder.js",
    "importStyle": "{RunLengthEncoder}",
    "description": "Run-Length Encoding for numerical data.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "encode",
    "memberof": "src/core/RunLengthEncoder.js~RunLengthEncoder",
    "longname": "src/core/RunLengthEncoder.js~RunLengthEncoder.encode",
    "access": null,
    "description": "Encodes the given data.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "The data to encode."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The run-lengths and the encoded data."
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "decode",
    "memberof": "src/core/RunLengthEncoder.js~RunLengthEncoder",
    "longname": "src/core/RunLengthEncoder.js~RunLengthEncoder.decode",
    "access": null,
    "description": "Decodes the given data.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "runLengths",
        "description": "The run-lengths."
      },
      {
        "nullable": null,
        "types": [
          "Number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to decode."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "array",
        "description": "An optional target."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "The decoded data."
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Scheduler.js",
    "memberof": null,
    "longname": "src/core/Scheduler.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { PriorityQueue } from \"./PriorityQueue.js\";\r\n\r\n/**\r\n * A task scheduler.\r\n */\r\n\r\nexport class Scheduler extends PriorityQueue {\r\n\r\n\t/**\r\n\t * Constructs a new task.\r\n\t *\r\n\t * @param {Number} tiers - The number of priority tiers.\r\n\t */\r\n\r\n\tconstructor(tiers) {\r\n\r\n\t\tsuper(tiers);\r\n\r\n\t\t/**\r\n\t\t * Keeps track of associations between elements and tasks.\r\n\t\t *\r\n\t\t * @type {WeakMap}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.registry = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * The highest priority.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.maxPriority = this.tiers - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels the task that is currently scheduled for the given element.\r\n\t *\r\n\t * @param {Object} element - The element.\r\n\t * @return {Boolean} Whether the cancellation succeeded.\r\n\t */\r\n\r\n\tcancel(element) {\r\n\r\n\t\tconst result = this.registry.has(element);\r\n\r\n\t\tlet task;\r\n\r\n\t\tif(result) {\r\n\r\n\t\t\ttask = this.registry.get(element);\r\n\r\n\t\t\tthis.remove(task.index, task.priority);\r\n\t\t\tthis.registry.delete(element);\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Schedules a task for the given element. Other tasks that are scheduled for\r\n\t * that element will be cancelled.\r\n\t *\r\n\t * @param {Object} element - The element.\r\n\t * @param {Task} task - The task.\r\n\t * @return {Boolean} Whether the task was scheduled.\r\n\t */\r\n\r\n\tschedule(element, task) {\r\n\r\n\t\tconst result = !this.registry.has(element);\r\n\r\n\t\tif(result) {\r\n\r\n\t\t\tif(task !== null) {\r\n\r\n\t\t\t\tthis.remove(task.index, task.priority);\r\n\t\t\t\tthis.registry.delete(element);\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttask.index = this.add(task, task.priority);\r\n\t\t\tthis.registry.set(element, task);\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a task is scheduled for the given element.\r\n\t *\r\n\t * @param {Object} element - The element.\r\n\t * @return {Boolean} Whether a task is currently scheduled.\r\n\t */\r\n\r\n\thasTask(element) {\r\n\r\n\t\treturn this.registry.has(element);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the task for the given element.\r\n\t *\r\n\t * @param {Object} element - The element.\r\n\t * @return {Task} The task or undefined if there is none.\r\n\t */\r\n\r\n\tgetTask(element) {\r\n\r\n\t\treturn this.registry.get(element);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the head of the queue, or returns null if the queue is empty.\r\n\t *\r\n\t * @return {Task} The task with the highest priority or null if there is none.\r\n\t */\r\n\r\n\tpoll() {\r\n\r\n\t\tconst element = super.poll();\r\n\r\n\t\tif(element !== null) {\r\n\r\n\t\t\tthis.registry.delete(element.chunk);\r\n\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all tasks.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tsuper.clear();\r\n\r\n\t\tthis.registry = new WeakMap();\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 41,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Scheduler",
    "memberof": "src/core/Scheduler.js",
    "longname": "src/core/Scheduler.js~Scheduler",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/Scheduler.js",
    "importStyle": "{Scheduler}",
    "description": "A task scheduler.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/core/PriorityQueue.js~PriorityQueue"
    ]
  },
  {
    "__docId__": 42,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#constructor",
    "access": null,
    "description": "Constructs a new task.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tiers",
        "description": "The number of priority tiers."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "registry",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#registry",
    "access": "private",
    "description": "Keeps track of associations between elements and tasks.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "maxPriority",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#maxPriority",
    "access": null,
    "description": "The highest priority.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#cancel",
    "access": null,
    "description": "Cancels the task that is currently scheduled for the given element.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the cancellation succeeded."
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "schedule",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#schedule",
    "access": null,
    "description": "Schedules a task for the given element. Other tasks that are scheduled for\nthat element will be cancelled.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element."
      },
      {
        "nullable": null,
        "types": [
          "Task"
        ],
        "spread": false,
        "optional": false,
        "name": "task",
        "description": "The task."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the task was scheduled."
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasTask",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#hasTask",
    "access": null,
    "description": "Checks if a task is scheduled for the given element.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether a task is currently scheduled."
    },
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTask",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#getTask",
    "access": null,
    "description": "Retrieves the task for the given element.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task"
      ],
      "spread": false,
      "description": "The task or undefined if there is none."
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "poll",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#poll",
    "access": null,
    "description": "Retrieves the head of the queue, or returns null if the queue is empty.",
    "lineNumber": 127,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Task"
      ],
      "spread": false,
      "description": "The task with the highest priority or null if there is none."
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#clear",
    "access": null,
    "description": "Removes all tasks.",
    "lineNumber": 145,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "registry",
    "memberof": "src/core/Scheduler.js~Scheduler",
    "longname": "src/core/Scheduler.js~Scheduler#registry",
    "access": null,
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Task.js",
    "memberof": null,
    "longname": "src/core/Task.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * A task.\r\n */\r\n\r\nexport class Task {\r\n\r\n\t/**\r\n\t * Constructs a new task.\r\n\t *\r\n\t * @param {Number} [priority=0] - The priority.\r\n\t */\r\n\r\n\tconstructor(priority = 0) {\r\n\r\n\t\t/**\r\n\t\t * The priority of this task.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t */\r\n\r\n\t\tthis.priority = priority;\r\n\r\n\t\t/**\r\n\t\t * The index of this task.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default -1\r\n\t\t */\r\n\r\n\t\tthis.index = -1;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 53,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Task",
    "memberof": "src/core/Task.js",
    "longname": "src/core/Task.js~Task",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/Task.js",
    "importStyle": "{Task}",
    "description": "A task.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Task.js~Task",
    "longname": "src/core/Task.js~Task#constructor",
    "access": null,
    "description": "Constructs a new task.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "priority",
        "description": "The priority."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "priority",
    "memberof": "src/core/Task.js~Task",
    "longname": "src/core/Task.js~Task#priority",
    "access": null,
    "description": "The priority of this task.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "index",
    "memberof": "src/core/Task.js~Task",
    "longname": "src/core/Task.js~Task#index",
    "access": null,
    "description": "The index of this task.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/terrain-events.js",
    "memberof": null,
    "longname": "src/core/terrain-events.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { TerrainEvent } from \"../events/TerrainEvent.js\";\r\n\r\n/**\r\n * Signals the start of a modification task.\r\n *\r\n * This event is dispatched by {@link Terrain}.\r\n *\r\n * @type {TerrainEvent}\r\n * @example terrain.addEventListener(\"modificationstart\", myListener);\r\n */\r\n\r\nexport const modificationstart = new TerrainEvent(\"modificationstart\");\r\n\r\n/**\r\n * Signals the end of a modification task.\r\n *\r\n * This event is dispatched by {@link Terrain}.\r\n *\r\n * @type {TerrainEvent}\r\n * @example terrain.addEventListener(\"modificationend\", myListener);\r\n */\r\n\r\nexport const modificationend = new TerrainEvent(\"modificationend\");\r\n\r\n/**\r\n * Signals the start of an extraction task.\r\n *\r\n * This event is dispatched by {@link Terrain}.\r\n *\r\n * @type {TerrainEvent}\r\n * @example terrain.addEventListener(\"extractionstart\", myListener);\r\n */\r\n\r\nexport const extractionstart = new TerrainEvent(\"extractionstart\");\r\n\r\n/**\r\n * Signals the end of an extraction task.\r\n *\r\n * This event is dispatched by {@link Terrain}.\r\n *\r\n * @type {TerrainEvent}\r\n * @example terrain.addEventListener(\"extractionend\", myListener);\r\n */\r\n\r\nexport const extractionend = new TerrainEvent(\"extractionend\");\r\n"
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "modificationstart",
    "memberof": "src/core/terrain-events.js",
    "longname": "src/core/terrain-events.js~modificationstart",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/terrain-events.js",
    "importStyle": "{modificationstart}",
    "description": "Signals the start of a modification task.\n\nThis event is dispatched by {@link Terrain}.",
    "examples": [
      "terrain.addEventListener(\"modificationstart\", myListener);"
    ],
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "TerrainEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "modificationend",
    "memberof": "src/core/terrain-events.js",
    "longname": "src/core/terrain-events.js~modificationend",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/terrain-events.js",
    "importStyle": "{modificationend}",
    "description": "Signals the end of a modification task.\n\nThis event is dispatched by {@link Terrain}.",
    "examples": [
      "terrain.addEventListener(\"modificationend\", myListener);"
    ],
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "TerrainEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "extractionstart",
    "memberof": "src/core/terrain-events.js",
    "longname": "src/core/terrain-events.js~extractionstart",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/terrain-events.js",
    "importStyle": "{extractionstart}",
    "description": "Signals the start of an extraction task.\n\nThis event is dispatched by {@link Terrain}.",
    "examples": [
      "terrain.addEventListener(\"extractionstart\", myListener);"
    ],
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "TerrainEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "extractionend",
    "memberof": "src/core/terrain-events.js",
    "longname": "src/core/terrain-events.js~extractionend",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/terrain-events.js",
    "importStyle": "{extractionend}",
    "description": "Signals the end of an extraction task.\n\nThis event is dispatched by {@link Terrain}.",
    "examples": [
      "terrain.addEventListener(\"extractionend\", myListener);"
    ],
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "TerrainEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Terrain.js",
    "memberof": null,
    "longname": "src/core/Terrain.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, BufferAttribute, BufferGeometry, Frustum, Mesh, Matrix4, Object3D } from \"three\";\r\nimport { EventTarget } from \"synthetic-event\";\r\nimport { MeshTriplanarPhysicalMaterial } from \"../materials\";\r\nimport { Volume } from \"../volume/octree/Volume.js\";\r\nimport { OperationType } from \"../volume/csg/OperationType.js\";\r\nimport { SDFReviver } from \"../volume/sdf/SDFReviver.js\";\r\nimport { Action } from \"../worker/Action.js\";\r\nimport { ThreadPool } from \"../worker/ThreadPool.js\";\r\nimport { WorkerTask } from \"../worker/WorkerTask.js\";\r\nimport { History } from \"./History.js\";\r\nimport { Scheduler } from \"./Scheduler.js\";\r\nimport { Queue } from \"./Queue.js\";\r\nimport * as events from \"./terrain-events.js\";\r\n\r\n/**\r\n * A 3D box.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst box3 = new Box3();\r\n\r\n/**\r\n * A 4x4 matrix.\r\n *\r\n * @type {Matrix4}\r\n * @private\r\n */\r\n\r\nconst matrix4 = new Matrix4();\r\n\r\n/**\r\n * The terrain system.\r\n *\r\n * @implements {EventListener}\r\n */\r\n\r\nexport class Terrain extends EventTarget {\r\n\r\n\t/**\r\n\t * Constructs a new terrain.\r\n\t *\r\n\t * @param {Object} [options] - The options.\r\n\t * @param {Number} [options.chunkSize=32] - The world size of a volume chunk. Will be rounded up to the next power of two.\r\n\t * @param {Number} [options.resolution=32] - The resolution of a volume chunk. Will be rounded up to the next power of two.\r\n\t * @param {Number} [options.workers] - Limits the amount of active workers. The default limit is the amount of logical processors which is also the maximum.\r\n\t * @param {Number} [options.levels] - The amount of detail levels. The default number of levels is derived from the resolution.\r\n\t * @param {Number} [options.iterations] - Limits the amount of volume chunks that are being processed during each update.\r\n\t */\r\n\r\n\tconstructor(options = {}) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The terrain object. Add this to your scene.\r\n\t\t *\r\n\t\t * @type {Object3D}\r\n\t\t */\r\n\r\n\t\tthis.object = new Object3D();\r\n\t\tthis.object.name = \"Terrain\";\r\n\r\n\t\t/**\r\n\t\t * The volume of this terrain.\r\n\t\t *\r\n\t\t * @type {Volume}\r\n\t\t */\r\n\r\n\t\tthis.volume = new Volume(options.chunkSize, options.resolution);\r\n\r\n\t\t/**\r\n\t\t * A volume chunk iterator.\r\n\t\t *\r\n\t\t * @type {Iterator}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.iterator = this.volume.leaves(new Frustum());\r\n\r\n\t\t/**\r\n\t\t * The number of detail levels.\r\n\t\t *\r\n\t\t * Terrain chunks that are further away from the camera will be rendered\r\n\t\t * with less vertices.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default log2(resolution)\r\n\t\t */\r\n\r\n\t\tthis.levels = (options.levels !== undefined) ? Math.max(1, options.levels) : Math.log2(this.volume.resolution);\r\n\r\n\t\t/**\r\n\t\t * The maximum amount of chunk iterations per update.\r\n\t\t *\r\n\t\t * Volume chunks that lie in the field of view will be processed over the\r\n\t\t * course of several update calls.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default 1000\r\n\t\t */\r\n\r\n\t\tthis.iterations = (options.iterations !== undefined) ? Math.max(1, options.iterations) : 1000;\r\n\r\n\t\t/**\r\n\t\t * A thread pool.\r\n\t\t *\r\n\t\t * @type {ThreadPool}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.threadPool = new ThreadPool(options.workers);\r\n\t\tthis.threadPool.addEventListener(\"message\", this);\r\n\r\n\t\t/**\r\n\t\t * Manages pending tasks.\r\n\t\t *\r\n\t\t * @type {Scheduler}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.scheduler = new Scheduler(this.levels + 1);\r\n\r\n\t\t/**\r\n\t\t * A chronological sequence of CSG operations that have been executed during\r\n\t\t * this session.\r\n\t\t *\r\n\t\t * @type {History}\r\n\t\t */\r\n\r\n\t\tthis.history = new History();\r\n\r\n\t\t/**\r\n\t\t * Keeps track of chunks that are currently being used by a worker. The\r\n\t\t * amount of neutered chunks cannot exceed the amount of worker threads.\r\n\t\t *\r\n\t\t * @type {WeakSet}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.neutered = new WeakSet();\r\n\r\n\t\t/**\r\n\t\t * Keeps track of associations between workers and chunks.\r\n\t\t *\r\n\t\t * @type {WeakMap}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.chunks = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * Keeps track of associations between chunks and meshes.\r\n\t\t *\r\n\t\t * @type {WeakMap}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.meshes = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * The terrain material.\r\n\t\t *\r\n\t\t * @type {MeshTriplanarPhysicalMaterial}\r\n\t\t */\r\n\r\n\t\tthis.material = new MeshTriplanarPhysicalMaterial();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Lifts the connection of a given chunk to its mesh and removes the geometry.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} chunk - A volume chunk.\r\n\t */\r\n\r\n\tunlinkMesh(chunk) {\r\n\r\n\t\tlet mesh;\r\n\r\n\t\tif(this.meshes.has(chunk)) {\r\n\r\n\t\t\tmesh = this.meshes.get(chunk);\r\n\t\t\tmesh.geometry.dispose();\r\n\r\n\t\t\tthis.meshes.delete(chunk);\r\n\t\t\tthis.object.remove(mesh);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles worker events.\r\n\t *\r\n\t * @private\r\n\t * @param {WorkerEvent} event - A worker message event.\r\n\t */\r\n\r\n\thandleEvent(event) {\r\n\r\n\t\tconst worker = event.worker;\r\n\t\tconst data = event.data;\r\n\r\n\t\t// Find the chunk that has been processed by this worker.\r\n\t\tconst chunk = this.chunks.get(worker);\r\n\r\n\t\tthis.neutered.delete(chunk);\r\n\t\tthis.chunks.delete(worker);\r\n\r\n\t\t// Reclaim ownership of the chunk data.\r\n\t\tchunk.deserialise(data.chunk);\r\n\r\n\t\tif(chunk.data === null && chunk.csg === null) {\r\n\r\n\t\t\t// The chunk has become empty. Remove it.\r\n\t\t\tthis.scheduler.cancel(chunk);\r\n\t\t\tthis.volume.prune(chunk);\r\n\t\t\tthis.unlinkMesh(chunk);\r\n\r\n\t\t} else if(chunk.csg !== null) {\r\n\r\n\t\t\t// Drain the CSG queue as fast as possible.\r\n\t\t\tthis.scheduler.schedule(chunk, new WorkerTask(Action.MODIFY, chunk, this.scheduler.maxPriority));\r\n\r\n\t\t}\r\n\r\n\t\tif(data.action !== Action.CLOSE) {\r\n\r\n\t\t\tif(data.action === Action.EXTRACT) {\r\n\r\n\t\t\t\tevent = events.extractionend;\r\n\r\n\t\t\t\tthis.consolidate(chunk, data);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tevent = events.modificationend;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.chunk = chunk;\r\n\r\n\t\t\tthis.dispatchEvent(event);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error(data.error);\r\n\r\n\t\t}\r\n\r\n\t\t// Kick off a pending task.\r\n\t\tthis.runNextTask();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates geometry chunks with extracted data.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} chunk - The associated volume chunk.\r\n\t * @param {Object} data - An object containing the extracted geometry data.\r\n\t */\r\n\r\n\tconsolidate(chunk, data) {\r\n\r\n\t\tconst positions = data.positions;\r\n\t\tconst normals = data.normals;\r\n\t\tconst indices = data.indices;\r\n\r\n\t\tlet geometry, mesh;\r\n\r\n\t\t// Only create a new mesh if the worker generated data.\r\n\t\tif(positions !== null && normals !== null && indices !== null) {\r\n\r\n\t\t\tthis.unlinkMesh(chunk);\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\r\n\t\t\tgeometry.addAttribute(\"position\", new BufferAttribute(positions, 3));\r\n\t\t\tgeometry.addAttribute(\"normal\", new BufferAttribute(normals, 3));\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\tmesh = new Mesh(geometry, this.material);\r\n\r\n\t\t\tthis.meshes.set(chunk, mesh);\r\n\t\t\tthis.object.add(mesh);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs a pending task if a worker is available.\r\n\t *\r\n\t * @private\r\n\t */\r\n\r\n\trunNextTask() {\r\n\r\n\t\tlet task, worker, chunk, event;\r\n\r\n\t\tif(this.scheduler.peek() !== null) {\r\n\r\n\t\t\tworker = this.threadPool.getWorker();\r\n\r\n\t\t\tif(worker !== null) {\r\n\r\n\t\t\t\ttask = this.scheduler.poll();\r\n\t\t\t\tchunk = task.chunk;\r\n\r\n\t\t\t\tif(task.action === Action.MODIFY) {\r\n\r\n\t\t\t\t\tevent = events.modificationstart;\r\n\r\n\t\t\t\t\tworker.postMessage({\r\n\r\n\t\t\t\t\t\taction: task.action,\r\n\t\t\t\t\t\tchunk: chunk.serialise(),\r\n\t\t\t\t\t\tsdf: chunk.csg.poll().serialise()\r\n\r\n\t\t\t\t\t}, chunk.createTransferList());\r\n\r\n\t\t\t\t\tif(chunk.csg.size === 0) {\r\n\r\n\t\t\t\t\t\tchunk.csg = null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tevent = events.extractionstart;\r\n\r\n\t\t\t\t\tworker.postMessage({\r\n\r\n\t\t\t\t\t\taction: task.action,\r\n\t\t\t\t\t\tchunk: chunk.serialise()\r\n\r\n\t\t\t\t\t}, chunk.createTransferList());\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tevent.chunk = chunk;\r\n\r\n\t\t\t\tthis.neutered.add(chunk);\r\n\t\t\t\tthis.chunks.set(worker, chunk);\r\n\t\t\t\tthis.dispatchEvent(event);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Edits the terrain volume data.\r\n\t *\r\n\t * @private\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tedit(sdf) {\r\n\r\n\t\tconst chunks = this.volume.edit(sdf);\r\n\r\n\t\tlet chunk;\r\n\r\n\t\tfor(chunk of chunks) {\r\n\r\n\t\t\tif(chunk.csg === null) {\r\n\r\n\t\t\t\tchunk.csg = new Queue();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tchunk.csg.add(sdf);\r\n\r\n\t\t}\r\n\r\n\t\tthis.iterator.reset();\r\n\t\tthis.history.push(sdf);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the given SDF and adds the generated data to the volume.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tunion(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.UNION;\r\n\r\n\t\tthis.edit(sdf);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the given SDF and subtracts the generated data from the volume.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tsubtract(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.DIFFERENCE;\r\n\r\n\t\tthis.edit(sdf);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the given SDF and discards the volume data that doesn't overlap\r\n\t * with the generated data.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tintersect(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.INTERSECTION;\r\n\r\n\t\tthis.edit(sdf);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the terrain geometry. This method should be called each frame.\r\n\t *\r\n\t * @param {PerspectiveCamera} camera - A camera.\r\n\t */\r\n\r\n\tupdate(camera) {\r\n\r\n\t\tconst iterator = this.iterator;\r\n\t\tconst scheduler = this.scheduler;\r\n\t\tconst maxPriority = scheduler.maxPriority;\r\n\t\tconst levels = this.levels;\r\n\t\tconst maxLevel = levels - 1;\r\n\r\n\t\tlet i = this.iterations;\r\n\r\n\t\tlet chunk, data, csg, task;\r\n\t\tlet distance, lod;\r\n\t\tlet result;\r\n\r\n\t\titerator.region.setFromMatrix(\r\n\t\t\tmatrix4.multiplyMatrices(\r\n\t\t\t\tcamera.projectionMatrix,\r\n\t\t\t\tcamera.matrixWorldInverse\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tresult = iterator.next();\r\n\r\n\t\twhile(!result.done) {\r\n\r\n\t\t\tchunk = result.value;\r\n\t\t\tdata = chunk.data;\r\n\t\t\tcsg = chunk.csg;\r\n\r\n\t\t\tif(!this.neutered.has(chunk)) {\r\n\r\n\t\t\t\ttask = scheduler.getTask(chunk);\r\n\r\n\t\t\t\tif(task === undefined || task.priority < maxPriority) {\r\n\r\n\t\t\t\t\t// Modifications take precedence.\r\n\t\t\t\t\tif(csg !== null) {\r\n\r\n\t\t\t\t\t\tscheduler.schedule(chunk, new WorkerTask(Action.MODIFY, chunk, maxPriority));\r\n\r\n\t\t\t\t\t\tthis.runNextTask();\r\n\r\n\t\t\t\t\t} else if(data !== null) {\r\n\r\n\t\t\t\t\t\tdistance = box3.copy(chunk).distanceToPoint(camera.position);\r\n\t\t\t\t\t\tlod = Math.min(maxLevel, Math.trunc(distance / camera.far * levels));\r\n\r\n\t\t\t\t\t\tif(data.lod !== lod) {\r\n\r\n\t\t\t\t\t\t\tdata.lod = lod;\r\n\r\n\t\t\t\t\t\t\tscheduler.schedule(chunk, new WorkerTask(Action.EXTRACT, chunk, maxLevel - data.lod));\r\n\r\n\t\t\t\t\t\t\tthis.runNextTask();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(--i > 0) {\r\n\r\n\t\t\t\tresult = iterator.next();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(result.done) {\r\n\r\n\t\t\tthis.iterator.reset();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the terrain chunks that intersect with the given ray and raycasts the\r\n\t * associated meshes.\r\n\t *\r\n\t * Intersections are sorted by distance, closest first.\r\n\t *\r\n\t * @param {Raycaster} raycaster - A raycaster.\r\n\t * @return {Array} A list of terrain intersections.\r\n\t */\r\n\r\n\traycast(raycaster) {\r\n\r\n\t\tconst meshes = this.meshes;\r\n\t\tconst chunks = [];\r\n\r\n\t\tlet intersects = [];\r\n\t\tlet chunk;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tthis.volume.raycast(raycaster, chunks);\r\n\r\n\t\tfor(i = 0, l = chunks.length; i < l; ++i) {\r\n\r\n\t\t\tchunk = chunks[i];\r\n\r\n\t\t\tif(meshes.has(chunk)) {\r\n\r\n\t\t\t\tintersects = intersects.concat(\r\n\t\t\t\t\traycaster.intersectObject(meshes.get(chunk))\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all child meshes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\r\n\tclearMeshes() {\r\n\r\n\t\tconst object = this.object;\r\n\r\n\t\tlet child;\r\n\r\n\t\twhile(object.children.length > 0) {\r\n\r\n\t\t\tchild = object.children[0];\r\n\t\t\tchild.geometry.dispose();\r\n\t\t\tchild.material.dispose();\r\n\t\t\tobject.remove(child);\r\n\r\n\t\t}\r\n\r\n\t\tthis.meshes = new WeakMap();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets this terrain by removing data and closing active worker threads.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tthis.clearMeshes();\r\n\r\n\t\tthis.volume = new Volume(this.volume.chunkSize, this.volume.resolution);\r\n\t\tthis.iterator = this.volume.leaves(new Frustum());\r\n\r\n\t\tthis.neutered = new WeakSet();\r\n\t\tthis.chunks = new WeakMap();\r\n\r\n\t\tthis.threadPool.clear();\r\n\t\tthis.scheduler.clear();\r\n\t\tthis.history.clear();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this terrain and frees internal resources.\r\n\t */\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.clearMeshes();\r\n\t\tthis.threadPool.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Saves a description of the current volume data.\r\n\t *\r\n\t * @return {String} A URL to the exported save data, or null if there is no data.\r\n\t */\r\n\r\n\tsave() {\r\n\r\n\t\tconst sdf = this.history.combine();\r\n\r\n\t\treturn (sdf === null) ? null : URL.createObjectURL(\r\n\r\n\t\t\tnew Blob([JSON.stringify(sdf.serialise())], {\r\n\t\t\t\ttype: \"text/json\"\r\n\t\t\t})\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a volume.\r\n\t *\r\n\t * @param {String} data - The volume description to load.\r\n\t */\r\n\r\n\tload(data) {\r\n\r\n\t\tthis.clear();\r\n\r\n\t\tthis.edit(\r\n\t\t\tSDFReviver.reviveSDF(\r\n\t\t\t\tJSON.parse(data)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "box3",
    "memberof": "src/core/Terrain.js",
    "longname": "src/core/Terrain.js~box3",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/core/Terrain.js",
    "importStyle": null,
    "description": "A 3D box.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "matrix4",
    "memberof": "src/core/Terrain.js",
    "longname": "src/core/Terrain.js~matrix4",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/core/Terrain.js",
    "importStyle": null,
    "description": "A 4x4 matrix.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Terrain",
    "memberof": "src/core/Terrain.js",
    "longname": "src/core/Terrain.js~Terrain",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/core/Terrain.js",
    "importStyle": "{Terrain}",
    "description": "The terrain system.",
    "lineNumber": 39,
    "interface": false,
    "extends": [
      "synthetic-event~EventTarget"
    ],
    "implements": [
      "EventListener"
    ]
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#constructor",
    "access": null,
    "description": "Constructs a new terrain.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "options.chunkSize",
        "description": "The world size of a volume chunk. Will be rounded up to the next power of two."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "options.resolution",
        "description": "The resolution of a volume chunk. Will be rounded up to the next power of two."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.workers",
        "description": "Limits the amount of active workers. The default limit is the amount of logical processors which is also the maximum."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.levels",
        "description": "The amount of detail levels. The default number of levels is derived from the resolution."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.iterations",
        "description": "Limits the amount of volume chunks that are being processed during each update."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "object",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#object",
    "access": null,
    "description": "The terrain object. Add this to your scene.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "Object3D"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volume",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#volume",
    "access": null,
    "description": "The volume of this terrain.",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Volume"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "iterator",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#iterator",
    "access": "private",
    "description": "A volume chunk iterator.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Iterator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "levels",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#levels",
    "access": "private",
    "description": "The number of detail levels.\n\nTerrain chunks that are further away from the camera will be rendered\nwith less vertices.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "log2(resolution)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "iterations",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#iterations",
    "access": "private",
    "description": "The maximum amount of chunk iterations per update.\n\nVolume chunks that lie in the field of view will be processed over the\ncourse of several update calls.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "1000"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "threadPool",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#threadPool",
    "access": "private",
    "description": "A thread pool.",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "ThreadPool"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scheduler",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#scheduler",
    "access": "private",
    "description": "Manages pending tasks.",
    "lineNumber": 125,
    "type": {
      "nullable": null,
      "types": [
        "Scheduler"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "history",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#history",
    "access": null,
    "description": "A chronological sequence of CSG operations that have been executed during\nthis session.",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "History"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#neutered",
    "access": "private",
    "description": "Keeps track of chunks that are currently being used by a worker. The\namount of neutered chunks cannot exceed the amount of worker threads.",
    "lineNumber": 144,
    "type": {
      "nullable": null,
      "types": [
        "WeakSet"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunks",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#chunks",
    "access": "private",
    "description": "Keeps track of associations between workers and chunks.",
    "lineNumber": 153,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "meshes",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#meshes",
    "access": "private",
    "description": "Keeps track of associations between chunks and meshes.",
    "lineNumber": 162,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "material",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#material",
    "access": null,
    "description": "The terrain material.",
    "lineNumber": 170,
    "type": {
      "nullable": null,
      "types": [
        "MeshTriplanarPhysicalMaterial"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlinkMesh",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#unlinkMesh",
    "access": "private",
    "description": "Lifts the connection of a given chunk to its mesh and removes the geometry.",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleEvent",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#handleEvent",
    "access": "private",
    "description": "Handles worker events.",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "WorkerEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "A worker message event."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "consolidate",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#consolidate",
    "access": "private",
    "description": "Updates geometry chunks with extracted data.",
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "The associated volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object containing the extracted geometry data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "runNextTask",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#runNextTask",
    "access": "private",
    "description": "Runs a pending task if a worker is available.",
    "lineNumber": 303,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "edit",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#edit",
    "access": "private",
    "description": "Edits the terrain volume data.",
    "lineNumber": 366,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "union",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#union",
    "access": null,
    "description": "Executes the given SDF and adds the generated data to the volume.",
    "lineNumber": 395,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "subtract",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#subtract",
    "access": null,
    "description": "Executes the given SDF and subtracts the generated data from the volume.",
    "lineNumber": 409,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "intersect",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#intersect",
    "access": null,
    "description": "Executes the given SDF and discards the volume data that doesn't overlap\nwith the generated data.",
    "lineNumber": 424,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#update",
    "access": null,
    "description": "Updates the terrain geometry. This method should be called each frame.",
    "lineNumber": 438,
    "params": [
      {
        "nullable": null,
        "types": [
          "PerspectiveCamera"
        ],
        "spread": false,
        "optional": false,
        "name": "camera",
        "description": "A camera."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "raycast",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#raycast",
    "access": null,
    "description": "Finds the terrain chunks that intersect with the given ray and raycasts the\nassociated meshes.\n\nIntersections are sorted by distance, closest first.",
    "lineNumber": 531,
    "params": [
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "A raycaster."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "A list of terrain intersections."
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clearMeshes",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#clearMeshes",
    "access": "private",
    "description": "Removes all child meshes.",
    "lineNumber": 567,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "meshes",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#meshes",
    "access": null,
    "description": null,
    "lineNumber": 582,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#clear",
    "access": null,
    "description": "Resets this terrain by removing data and closing active worker threads.",
    "lineNumber": 590,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volume",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#volume",
    "access": null,
    "description": null,
    "lineNumber": 594,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "iterator",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#iterator",
    "access": null,
    "description": null,
    "lineNumber": 595,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#neutered",
    "access": null,
    "description": null,
    "lineNumber": 597,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunks",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#chunks",
    "access": null,
    "description": null,
    "lineNumber": 598,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispose",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#dispose",
    "access": null,
    "description": "Destroys this terrain and frees internal resources.",
    "lineNumber": 610,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#save",
    "access": null,
    "description": "Saves a description of the current volume data.",
    "lineNumber": 623,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "A URL to the exported save data, or null if there is no data."
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/core/Terrain.js~Terrain",
    "longname": "src/core/Terrain.js~Terrain#load",
    "access": null,
    "description": "Loads a volume.",
    "lineNumber": 643,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The volume description to load."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/events/index.js",
    "memberof": null,
    "longname": "src/events/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * A collection of events.\r\n *\r\n * @module rabbit-hole/events\r\n */\r\n\r\nexport { TerrainEvent } from \"./TerrainEvent.js\";\r\nexport { WorkerEvent } from \"./WorkerEvent.js\";\r\n"
  },
  {
    "__docId__": 100,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/events/TerrainEvent.js",
    "memberof": null,
    "longname": "src/events/TerrainEvent.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Event } from \"synthetic-event\";\r\n\r\n/**\r\n * A terrain event.\r\n */\r\n\r\nexport class TerrainEvent extends Event {\r\n\r\n\t/**\r\n\t * Constructs a new terrain event.\r\n\t *\r\n\t * @param {String} type - The name of the event.\r\n\t */\r\n\r\n\tconstructor(type) {\r\n\r\n\t\tsuper(type);\r\n\r\n\t\t/**\r\n\t\t * A volume chunk.\r\n\t\t *\r\n\t\t * @type {Chunk}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.chunk = null;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 101,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TerrainEvent",
    "memberof": "src/events/TerrainEvent.js",
    "longname": "src/events/TerrainEvent.js~TerrainEvent",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/events/TerrainEvent.js",
    "importStyle": "{TerrainEvent}",
    "description": "A terrain event.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "synthetic-event~Event"
    ]
  },
  {
    "__docId__": 102,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/events/TerrainEvent.js~TerrainEvent",
    "longname": "src/events/TerrainEvent.js~TerrainEvent#constructor",
    "access": null,
    "description": "Constructs a new terrain event.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The name of the event."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunk",
    "memberof": "src/events/TerrainEvent.js~TerrainEvent",
    "longname": "src/events/TerrainEvent.js~TerrainEvent#chunk",
    "access": null,
    "description": "A volume chunk.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Chunk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/events/WorkerEvent.js",
    "memberof": null,
    "longname": "src/events/WorkerEvent.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Event } from \"synthetic-event\";\r\n\r\n/**\r\n * A worker event.\r\n */\r\n\r\nexport class WorkerEvent extends Event {\r\n\r\n\t/**\r\n\t * Constructs a new worker event.\r\n\t *\r\n\t * @param {String} type - The name of the event.\r\n\t */\r\n\r\n\tconstructor(type) {\r\n\r\n\t\tsuper(type);\r\n\r\n\t\t/**\r\n\t\t * A worker.\r\n\t\t *\r\n\t\t * @type {Worker}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.worker = null;\r\n\r\n\t\t/**\r\n\t\t * A message.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.data = null;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 105,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WorkerEvent",
    "memberof": "src/events/WorkerEvent.js",
    "longname": "src/events/WorkerEvent.js~WorkerEvent",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/events/WorkerEvent.js",
    "importStyle": "{WorkerEvent}",
    "description": "A worker event.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "synthetic-event~Event"
    ]
  },
  {
    "__docId__": 106,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/events/WorkerEvent.js~WorkerEvent",
    "longname": "src/events/WorkerEvent.js~WorkerEvent#constructor",
    "access": null,
    "description": "Constructs a new worker event.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The name of the event."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "worker",
    "memberof": "src/events/WorkerEvent.js~WorkerEvent",
    "longname": "src/events/WorkerEvent.js~WorkerEvent#worker",
    "access": null,
    "description": "A worker.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Worker"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/events/WorkerEvent.js~WorkerEvent",
    "longname": "src/events/WorkerEvent.js~WorkerEvent#data",
    "access": null,
    "description": "A message.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/helpers/ChunkHelper.js",
    "memberof": null,
    "longname": "src/helpers/ChunkHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {\r\n\tBufferAttribute,\r\n\tBufferGeometry,\r\n\tLineBasicMaterial,\r\n\tLineSegments,\r\n\tObject3D,\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tVector3,\r\n\tVertexColors\r\n} from \"three\";\r\n\r\nimport { PATTERN } from \"sparse-octree\";\r\nimport { Material } from \"../volume/Material.js\";\r\nimport { Edge } from \"../volume/Edge.js\";\r\n\r\n/**\r\n * A chunk helper.\r\n *\r\n * @param {Chunk} [chunk=null] - A volume data chunk.\r\n * @param {Boolean} [useMaterialIndices] - Whether points should be created for solid material indices.\r\n * @param {Boolean} [useEdgeData] - Whether edges with intersection points and normals should be created.\r\n */\r\n\r\nexport class ChunkHelper extends Object3D {\r\n\r\n\t/**\r\n\t * Constructs a new chunk helper.\r\n\t *\r\n\t * @param {Chunk} [chunk=null] - A volume data chunk.\r\n\t * @param {Boolean} [useMaterialIndices] - Whether points should be created for solid material indices.\r\n\t * @param {Boolean} [useEdgeData] - Whether edges with intersection points and normals should be created.\r\n\t */\r\n\r\n\tconstructor(chunk = null, useMaterialIndices, useEdgeData) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The name of this object.\r\n\t\t */\r\n\r\n\t\tthis.name = \"ChunkHelper\";\r\n\r\n\t\t/**\r\n\t\t * The volume data chunk.\r\n\t\t *\r\n\t\t * @type {Chunk}\r\n\t\t */\r\n\r\n\t\tthis.chunk = chunk;\r\n\r\n\t\t// Create groups for grid points, edges and normals.\r\n\t\tthis.add(new Object3D());\r\n\t\tthis.add(new Object3D());\r\n\t\tthis.add(new Object3D());\r\n\r\n\t\tthis.gridPoints.name = \"GridPoints\";\r\n\t\tthis.edges.name = \"Edges\";\r\n\t\tthis.normals.name = \"Normals\";\r\n\r\n\t\tthis.update(useMaterialIndices, useEdgeData);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The grid points.\r\n\t *\r\n\t * @type {Object3D}\r\n\t */\r\n\r\n\tget gridPoints() { return this.children[0]; }\r\n\r\n\t/**\r\n\t * The edges.\r\n\t *\r\n\t * @type {Object3D}\r\n\t */\r\n\r\n\tget edges() { return this.children[1]; }\r\n\r\n\t/**\r\n\t * The normals.\r\n\t *\r\n\t * @type {Object3D}\r\n\t */\r\n\r\n\tget normals() { return this.children[2]; }\r\n\r\n\t/**\r\n\t * Creates the helper geometry.\r\n\t *\r\n\t * @param {Boolean} [useMaterialIndices=false] - Whether points should be created for solid material indices.\r\n\t * @param {Boolean} [useEdgeData=true] - Whether edges with intersection points and normals should be created.\r\n\t */\r\n\r\n\tupdate(useMaterialIndices = false, useEdgeData = true) {\r\n\r\n\t\tconst chunk = this.chunk;\r\n\r\n\t\t// Remove existing geometry.\r\n\t\tthis.dispose();\r\n\r\n\t\tif(chunk !== null && chunk.data !== null) {\r\n\r\n\t\t\tchunk.data.decompress();\r\n\r\n\t\t\tif(useMaterialIndices) { this.createPoints(chunk); }\r\n\t\t\tif(useEdgeData) { this.createEdges(chunk); }\r\n\r\n\t\t\tchunk.data.compress();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates points for solid material indices.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} chunk - A volume data chunk.\r\n\t */\r\n\r\n\tcreatePoints(chunk) {\r\n\r\n\t\tconst s = chunk.size;\r\n\t\tconst n = chunk.resolution;\r\n\r\n\t\tconst materialIndices = chunk.data.materialIndices;\r\n\r\n\t\tconst base = chunk.min;\r\n\t\tconst offset = new Vector3();\r\n\t\tconst position = new Vector3();\r\n\r\n\t\tconst color = new Float32Array([0.0, 0.0, 0.0]);\r\n\r\n\t\tconst pointsMaterial = new PointsMaterial({\r\n\t\t\tvertexColors: VertexColors,\r\n\t\t\tsizeAttenuation: false,\r\n\t\t\tsize: 3\r\n\t\t});\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tconst vertexCount = chunk.data.materials;\r\n\t\tconst positions = new Float32Array(vertexCount * 3);\r\n\t\tconst colors = new Float32Array(vertexCount * 3);\r\n\r\n\t\tlet x, y, z;\r\n\t\tlet i, j;\r\n\r\n\t\tfor(i = 0, j = 0, z = 0; z <= n; ++z) {\r\n\r\n\t\t\toffset.z = z * s / n;\r\n\r\n\t\t\tfor(y = 0; y <= n; ++y) {\r\n\r\n\t\t\t\toffset.y = y * s / n;\r\n\r\n\t\t\t\tfor(x = 0; x <= n; ++x) {\r\n\r\n\t\t\t\t\toffset.x = x * s / n;\r\n\r\n\t\t\t\t\tif(materialIndices[i++] !== Material.AIR) {\r\n\r\n\t\t\t\t\t\tposition.addVectors(base, offset);\r\n\r\n\t\t\t\t\t\tpositions[j] = position.x; colors[j++] = color[0];\r\n\t\t\t\t\t\tpositions[j] = position.y; colors[j++] = color[1];\r\n\t\t\t\t\t\tpositions[j] = position.z; colors[j++] = color[2];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute(\"position\", new BufferAttribute(positions, 3));\r\n\t\tgeometry.addAttribute(\"color\", new BufferAttribute(colors, 3));\r\n\r\n\t\tthis.gridPoints.add(new Points(geometry, pointsMaterial));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates edges with intersection points and normals.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} chunk - A volume data chunk.\r\n\t */\r\n\r\n\tcreateEdges(chunk) {\r\n\r\n\t\tconst s = chunk.size;\r\n\t\tconst n = chunk.resolution;\r\n\t\tconst m = n + 1;\r\n\t\tconst mm = m * m;\r\n\r\n\t\tconst edgeData = chunk.data.edgeData;\r\n\r\n\t\tconst base = chunk.min;\r\n\t\tconst offsetA = new Vector3();\r\n\t\tconst offsetB = new Vector3();\r\n\t\tconst normalA = new Vector3();\r\n\t\tconst normalB = new Vector3();\r\n\t\tconst edge = new Edge();\r\n\r\n\t\tconst axisColors = [\r\n\t\t\tnew Float32Array([0.6, 0.0, 0.0]),\r\n\t\t\tnew Float32Array([0.0, 0.6, 0.0]),\r\n\t\t\tnew Float32Array([0.0, 0.0, 0.6])\r\n\t\t];\r\n\r\n\t\tconst normalColor = new Float32Array([0.0, 1.0, 1.0]);\r\n\r\n\t\tconst lineSegmentsMaterial = new LineBasicMaterial({\r\n\t\t\tvertexColors: VertexColors\r\n\t\t});\r\n\r\n\t\tlet edges, zeroCrossings, normals;\r\n\r\n\t\tlet edgePositions, edgeColors;\r\n\t\tlet normalPositions, normalColors;\r\n\t\tlet vertexCount, edgeColor, geometry;\r\n\t\tlet axis, index;\r\n\r\n\t\tlet d, a, i, j, k, l;\r\n\t\tlet x, y, z;\r\n\r\n\t\tfor(a = 4, d = 0; d < 3; ++d, a >>= 1) {\r\n\r\n\t\t\taxis = PATTERN[a];\r\n\r\n\t\t\tedges = edgeData.edges[d];\r\n\t\t\tzeroCrossings = edgeData.zeroCrossings[d];\r\n\t\t\tnormals = edgeData.normals[d];\r\n\t\t\tedgeColor = axisColors[d];\r\n\r\n\t\t\tvertexCount = edges.length * 2;\r\n\t\t\tedgePositions = new Float32Array(vertexCount * 3);\r\n\t\t\tedgeColors = new Float32Array(vertexCount * 3);\r\n\t\t\tnormalPositions = new Float32Array(vertexCount * 3);\r\n\t\t\tnormalColors = new Float32Array(vertexCount * 3);\r\n\r\n\t\t\tfor(i = 0, j = 0, k = 0, l = edges.length; i < l; ++i) {\r\n\r\n\t\t\t\tindex = edges[i];\r\n\r\n\t\t\t\tx = index % m;\r\n\t\t\t\ty = Math.trunc((index % mm) / m);\r\n\t\t\t\tz = Math.trunc(index / mm);\r\n\r\n\t\t\t\toffsetA.set(\r\n\t\t\t\t\tx * s / n,\r\n\t\t\t\t\ty * s / n,\r\n\t\t\t\t\tz * s / n\r\n\t\t\t\t);\r\n\r\n\t\t\t\toffsetB.set(\r\n\t\t\t\t\t(x + axis[0]) * s / n,\r\n\t\t\t\t\t(y + axis[1]) * s / n,\r\n\t\t\t\t\t(z + axis[2]) * s / n\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Edge.\r\n\t\t\t\tedge.a.addVectors(base, offsetA);\r\n\t\t\t\tedge.b.addVectors(base, offsetB);\r\n\r\n\t\t\t\tedgePositions[j] = edge.a.x; edgeColors[j++] = edgeColor[0];\r\n\t\t\t\tedgePositions[j] = edge.a.y; edgeColors[j++] = edgeColor[1];\r\n\t\t\t\tedgePositions[j] = edge.a.z; edgeColors[j++] = edgeColor[2];\r\n\r\n\t\t\t\tedgePositions[j] = edge.b.x; edgeColors[j++] = edgeColor[0];\r\n\t\t\t\tedgePositions[j] = edge.b.y; edgeColors[j++] = edgeColor[1];\r\n\t\t\t\tedgePositions[j] = edge.b.z; edgeColors[j++] = edgeColor[2];\r\n\r\n\t\t\t\t// Normal at Zero Crossing.\r\n\t\t\t\tedge.t = zeroCrossings[i];\r\n\t\t\t\tedge.n.fromArray(normals, i * 3);\r\n\r\n\t\t\t\tnormalA.copy(edge.computeZeroCrossingPosition());\r\n\t\t\t\tnormalB.copy(normalA).addScaledVector(edge.n, 0.25 * s / n);\r\n\r\n\t\t\t\tnormalPositions[k] = normalA.x; normalColors[k++] = normalColor[0];\r\n\t\t\t\tnormalPositions[k] = normalA.y; normalColors[k++] = normalColor[1];\r\n\t\t\t\tnormalPositions[k] = normalA.z; normalColors[k++] = normalColor[2];\r\n\r\n\t\t\t\tnormalPositions[k] = normalB.x; normalColors[k++] = normalColor[0];\r\n\t\t\t\tnormalPositions[k] = normalB.y; normalColors[k++] = normalColor[1];\r\n\t\t\t\tnormalPositions[k] = normalB.z; normalColors[k++] = normalColor[2];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\t\t\tgeometry.addAttribute(\"position\", new BufferAttribute(edgePositions, 3));\r\n\t\t\tgeometry.addAttribute(\"color\", new BufferAttribute(edgeColors, 3));\r\n\r\n\t\t\tthis.edges.add(new LineSegments(geometry, lineSegmentsMaterial));\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\t\t\tgeometry.addAttribute(\"position\", new BufferAttribute(normalPositions, 3));\r\n\t\t\tgeometry.addAttribute(\"color\", new BufferAttribute(normalColors, 3));\r\n\r\n\t\t\tthis.normals.add(new LineSegments(geometry, lineSegmentsMaterial));\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the current helper geometry.\r\n\t */\r\n\r\n\tdispose() {\r\n\r\n\t\tlet child, children;\r\n\t\tlet i, j, il, jl;\r\n\r\n\t\tfor(i = 0, il = this.children.length; i < il; ++i) {\r\n\r\n\t\t\tchild = this.children[i];\r\n\t\t\tchildren = child.children;\r\n\r\n\t\t\tfor(j = 0, jl = children.length; j < jl; ++j) {\r\n\r\n\t\t\t\tchildren[j].geometry.dispose();\r\n\t\t\t\tchildren[j].material.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile(children.length > 0) {\r\n\r\n\t\t\t\tchild.remove(children[0]);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 110,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChunkHelper",
    "memberof": "src/helpers/ChunkHelper.js",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/helpers/ChunkHelper.js",
    "importStyle": "{ChunkHelper}",
    "description": "A chunk helper.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "chunk",
        "description": "A volume data chunk."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "useMaterialIndices",
        "description": "Whether points should be created for solid material indices."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "useEdgeData",
        "description": "Whether edges with intersection points and normals should be created."
      }
    ],
    "interface": false,
    "extends": [
      "three~Object3D"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#constructor",
    "access": null,
    "description": "Constructs a new chunk helper.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "chunk",
        "description": "A volume data chunk."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "useMaterialIndices",
        "description": "Whether points should be created for solid material indices."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "useEdgeData",
        "description": "Whether edges with intersection points and normals should be created."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#name",
    "access": null,
    "description": "The name of this object.",
    "lineNumber": 43,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunk",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#chunk",
    "access": null,
    "description": "The volume data chunk.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "Chunk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "gridPoints",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#gridPoints",
    "access": null,
    "description": "The grid points.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Object3D"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "edges",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#edges",
    "access": null,
    "description": "The edges.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Object3D"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "normals",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#normals",
    "access": null,
    "description": "The normals.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "Object3D"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 117,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#update",
    "access": null,
    "description": "Creates the helper geometry.",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "useMaterialIndices",
        "description": "Whether points should be created for solid material indices."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "useEdgeData",
        "description": "Whether edges with intersection points and normals should be created."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPoints",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#createPoints",
    "access": "private",
    "description": "Creates points for solid material indices.",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume data chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createEdges",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#createEdges",
    "access": "private",
    "description": "Creates edges with intersection points and normals.",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume data chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispose",
    "memberof": "src/helpers/ChunkHelper.js~ChunkHelper",
    "longname": "src/helpers/ChunkHelper.js~ChunkHelper#dispose",
    "access": null,
    "description": "Destroys the current helper geometry.",
    "lineNumber": 316,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/helpers/index.js",
    "memberof": null,
    "longname": "src/helpers/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * A collection of helpers.\r\n *\r\n * @module rabbit-hole/helpers\r\n */\r\n\r\nexport { ChunkHelper } from \"./ChunkHelper.js\";\r\n"
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Exposure of the library components.\r\n *\r\n * @module rabbit-hole\r\n */\r\n\r\nexport {\r\n\tHistory,\r\n\tPriorityQueue,\r\n\tQueue,\r\n\tRunLengthEncoder,\r\n\tScheduler,\r\n\tTask,\r\n\tTerrain\r\n} from \"./core\";\r\n\r\nexport {\r\n\tTerrainEvent,\r\n\tWorkerEvent\r\n} from \"./events\";\r\n\r\nexport {\r\n\tChunkHelper\r\n} from \"./helpers\";\r\n\r\nexport {\r\n\tMeshTriplanarPhysicalMaterial\r\n} from \"./materials\";\r\n\r\nexport {\r\n\tGivens,\r\n\tQEFSolver,\r\n\tQEFData,\r\n\tSchur,\r\n\tSingularValueDecomposition\r\n} from \"./math\";\r\n\r\nexport {\r\n\tEdge,\r\n\tEdgeData,\r\n\tHermiteData,\r\n\tMaterial,\r\n\tVoxel,\r\n\tChunk,\r\n\tVolume,\r\n\tVoxelBlock,\r\n\tVoxelCell,\r\n\tSignedDistanceFunction,\r\n\tHeightfield,\r\n\tSphere,\r\n\tTorus,\r\n\tPlane,\r\n\tBox,\r\n\tConstructiveSolidGeometry,\r\n\tIntersection,\r\n\tDifference,\r\n\tUnion\r\n} from \"./volume\";\r\n"
  },
  {
    "__docId__": 123,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/isosurface/dual-contouring/DualContouring.js",
    "memberof": null,
    "longname": "src/isosurface/dual-contouring/DualContouring.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { EDGES } from \"sparse-octree\";\r\nimport { Material } from \"../../volume/Material.js\";\r\nimport { VoxelBlock } from \"../../volume/octree/VoxelBlock.js\";\r\nimport * as tables from \"./tables.js\";\r\n\r\n/**\r\n * An edge contouring sub-procedure.\r\n *\r\n * @private\r\n * @param {Array} octants - Four leaf octants.\r\n * @param {Number} dir - A direction index.\r\n * @param {Array} indexBuffer - An output list for vertex indices.\r\n */\r\n\r\nfunction contourProcessEdge(octants, dir, indexBuffer) {\r\n\r\n\tconst indices = [-1, -1, -1, -1];\r\n\tconst signChange = [false, false, false, false];\r\n\r\n\tlet minSize = Infinity;\r\n\tlet minIndex = 0;\r\n\tlet flip = false;\r\n\r\n\tlet c1, c2, m1, m2;\r\n\tlet octant, edge;\r\n\tlet i;\r\n\r\n\tfor(i = 0; i < 4; ++i) {\r\n\r\n\t\toctant = octants[i];\r\n\t\tedge = tables.PROC_EDGE_MASK[dir][i];\r\n\r\n\t\tc1 = EDGES[edge][0];\r\n\t\tc2 = EDGES[edge][1];\r\n\r\n\t\tm1 = (octant.voxel.materials >> c1) & 1;\r\n\t\tm2 = (octant.voxel.materials >> c2) & 1;\r\n\r\n\t\tif(octant.size < minSize) {\r\n\r\n\t\t\tminSize = octant.size;\r\n\t\t\tminIndex = i;\r\n\t\t\tflip = (m1 !== Material.AIR);\r\n\r\n\t\t}\r\n\r\n\t\tindices[i] = octant.voxel.index;\r\n\t\tsignChange[i] = (m1 !== m2);\r\n\r\n\t}\r\n\r\n\tif(signChange[minIndex]) {\r\n\r\n\t\tif(!flip) {\r\n\r\n\t\t\tindexBuffer.push(indices[0]);\r\n\t\t\tindexBuffer.push(indices[1]);\r\n\t\t\tindexBuffer.push(indices[3]);\r\n\r\n\t\t\tindexBuffer.push(indices[0]);\r\n\t\t\tindexBuffer.push(indices[3]);\r\n\t\t\tindexBuffer.push(indices[2]);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tindexBuffer.push(indices[0]);\r\n\t\t\tindexBuffer.push(indices[3]);\r\n\t\t\tindexBuffer.push(indices[1]);\r\n\r\n\t\t\tindexBuffer.push(indices[0]);\r\n\t\t\tindexBuffer.push(indices[2]);\r\n\t\t\tindexBuffer.push(indices[3]);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An edge contouring procedure.\r\n *\r\n * @private\r\n * @param {Array} octants - Four edge octants.\r\n * @param {Number} dir - A direction index.\r\n * @param {Array} indexBuffer - An output list for vertex indices.\r\n */\r\n\r\nfunction contourEdgeProc(octants, dir, indexBuffer) {\r\n\r\n\tconst c = [0, 0, 0, 0];\r\n\r\n\tlet edgeOctants;\r\n\tlet octant;\r\n\tlet i, j;\r\n\r\n\tif(octants[0].voxel !== null && octants[1].voxel !== null &&\r\n\t\toctants[2].voxel !== null && octants[3].voxel !== null) {\r\n\r\n\t\tcontourProcessEdge(octants, dir, indexBuffer);\r\n\r\n\t} else {\r\n\r\n\t\tfor(i = 0; i < 2; ++i) {\r\n\r\n\t\t\tc[0] = tables.EDGE_PROC_EDGE_MASK[dir][i][0];\r\n\t\t\tc[1] = tables.EDGE_PROC_EDGE_MASK[dir][i][1];\r\n\t\t\tc[2] = tables.EDGE_PROC_EDGE_MASK[dir][i][2];\r\n\t\t\tc[3] = tables.EDGE_PROC_EDGE_MASK[dir][i][3];\r\n\r\n\t\t\tedgeOctants = [];\r\n\r\n\t\t\tfor(j = 0; j < 4; ++j) {\r\n\r\n\t\t\t\toctant = octants[j];\r\n\r\n\t\t\t\tif(octant.voxel !== null) {\r\n\r\n\t\t\t\t\tedgeOctants[j] = octant;\r\n\r\n\t\t\t\t} else if(octant.children !== null) {\r\n\r\n\t\t\t\t\tedgeOctants[j] = octant.children[c[j]];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(j === 4) {\r\n\r\n\t\t\t\tcontourEdgeProc(edgeOctants, tables.EDGE_PROC_EDGE_MASK[dir][i][4], indexBuffer);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A face contouring procedure.\r\n *\r\n * @private\r\n * @param {Array} octants - Two face octants.\r\n * @param {Number} dir - A direction index.\r\n * @param {Array} indexBuffer - An output list for vertex indices.\r\n */\r\n\r\nfunction contourFaceProc(octants, dir, indexBuffer) {\r\n\r\n\tconst c = [0, 0, 0, 0];\r\n\r\n\tconst orders = [\r\n\t\t[0, 0, 1, 1],\r\n\t\t[0, 1, 0, 1]\r\n\t];\r\n\r\n\tlet faceOctants, edgeOctants;\r\n\tlet order, octant;\r\n\tlet i, j;\r\n\r\n\tif(octants[0].children !== null || octants[1].children !== null) {\r\n\r\n\t\tfor(i = 0; i < 4; ++i) {\r\n\r\n\t\t\tc[0] = tables.FACE_PROC_FACE_MASK[dir][i][0];\r\n\t\t\tc[1] = tables.FACE_PROC_FACE_MASK[dir][i][1];\r\n\r\n\t\t\tfaceOctants = [\r\n\t\t\t\t(octants[0].children === null) ? octants[0] : octants[0].children[c[0]],\r\n\t\t\t\t(octants[1].children === null) ? octants[1] : octants[1].children[c[1]]\r\n\t\t\t];\r\n\r\n\t\t\tcontourFaceProc(faceOctants, tables.FACE_PROC_FACE_MASK[dir][i][2], indexBuffer);\r\n\r\n\t\t}\r\n\r\n\t\tfor(i = 0; i < 4; ++i) {\r\n\r\n\t\t\tc[0] = tables.FACE_PROC_EDGE_MASK[dir][i][1];\r\n\t\t\tc[1] = tables.FACE_PROC_EDGE_MASK[dir][i][2];\r\n\t\t\tc[2] = tables.FACE_PROC_EDGE_MASK[dir][i][3];\r\n\t\t\tc[3] = tables.FACE_PROC_EDGE_MASK[dir][i][4];\r\n\r\n\t\t\torder = orders[tables.FACE_PROC_EDGE_MASK[dir][i][0]];\r\n\r\n\t\t\tedgeOctants = [];\r\n\r\n\t\t\tfor(j = 0; j < 4; ++j) {\r\n\r\n\t\t\t\toctant = octants[order[j]];\r\n\r\n\t\t\t\tif(octant.voxel !== null) {\r\n\r\n\t\t\t\t\tedgeOctants[j] = octant;\r\n\r\n\t\t\t\t} else if(octant.children !== null) {\r\n\r\n\t\t\t\t\tedgeOctants[j] = octant.children[c[j]];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(j === 4) {\r\n\r\n\t\t\t\tcontourEdgeProc(edgeOctants, tables.FACE_PROC_EDGE_MASK[dir][i][5], indexBuffer);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * The main contouring procedure.\r\n *\r\n * @private\r\n * @param {Octant} octant - An octant.\r\n * @param {Array} indexBuffer - An output list for vertex indices.\r\n */\r\n\r\nfunction contourCellProc(octant, indexBuffer) {\r\n\r\n\tconst children = octant.children;\r\n\tconst c = [0, 0, 0, 0];\r\n\r\n\tlet faceOctants, edgeOctants;\r\n\tlet i;\r\n\r\n\tif(children !== null) {\r\n\r\n\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\tcontourCellProc(children[i], indexBuffer);\r\n\r\n\t\t}\r\n\r\n\t\tfor(i = 0; i < 12; ++i) {\r\n\r\n\t\t\tc[0] = tables.CELL_PROC_FACE_MASK[i][0];\r\n\t\t\tc[1] = tables.CELL_PROC_FACE_MASK[i][1];\r\n\r\n\t\t\tfaceOctants = [\r\n\t\t\t\tchildren[c[0]],\r\n\t\t\t\tchildren[c[1]]\r\n\t\t\t];\r\n\r\n\t\t\tcontourFaceProc(faceOctants, tables.CELL_PROC_FACE_MASK[i][2], indexBuffer);\r\n\r\n\t\t}\r\n\r\n\t\tfor(i = 0; i < 6; ++i) {\r\n\r\n\t\t\tc[0] = tables.CELL_PROC_EDGE_MASK[i][0];\r\n\t\t\tc[1] = tables.CELL_PROC_EDGE_MASK[i][1];\r\n\t\t\tc[2] = tables.CELL_PROC_EDGE_MASK[i][2];\r\n\t\t\tc[3] = tables.CELL_PROC_EDGE_MASK[i][3];\r\n\r\n\t\t\tedgeOctants = [\r\n\t\t\t\tchildren[c[0]],\r\n\t\t\t\tchildren[c[1]],\r\n\t\t\t\tchildren[c[2]],\r\n\t\t\t\tchildren[c[3]]\r\n\t\t\t];\r\n\r\n\t\t\tcontourEdgeProc(edgeOctants, tables.CELL_PROC_EDGE_MASK[i][4], indexBuffer);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Collects positions and normals from the voxel information of the given octant\r\n * and its children. The generated vertex indices are stored in the respective\r\n * voxels during the octree traversal.\r\n *\r\n * @private\r\n * @param {Octant} octant - An octant.\r\n * @param {Array} vertexBuffer - An array to be filled with vertices.\r\n * @param {Array} normalBuffer - An array to be filled with normals.\r\n * @param {Number} index - The next vertex index.\r\n */\r\n\r\nfunction generateVertexIndices(octant, positions, normals, index) {\r\n\r\n\tlet i, voxel;\r\n\r\n\tif(octant.children !== null) {\r\n\r\n\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\tindex = generateVertexIndices(octant.children[i], positions, normals, index);\r\n\r\n\t\t}\r\n\r\n\t} else if(octant.voxel !== null) {\r\n\r\n\t\tvoxel = octant.voxel;\r\n\t\tvoxel.index = index;\r\n\r\n\t\tpositions[index * 3] = voxel.position.x;\r\n\t\tpositions[index * 3 + 1] = voxel.position.y;\r\n\t\tpositions[index * 3 + 2] = voxel.position.z;\r\n\r\n\t\tnormals[index * 3] = voxel.normal.x;\r\n\t\tnormals[index * 3 + 1] = voxel.normal.y;\r\n\t\tnormals[index * 3 + 2] = voxel.normal.z;\r\n\r\n\t\t++index;\r\n\r\n\t}\r\n\r\n\treturn index;\r\n\r\n}\r\n\r\n/**\r\n * Dual Contouring is an isosurface extraction technique that was originally\r\n * presented by Tao Ju in 2002:\r\n *  http://www.cs.wustl.edu/~taoju/research/dualContour.pdf\r\n */\r\n\r\nexport class DualContouring {\r\n\r\n\t/**\r\n\t * Contours the given chunk of volume data and generates vertices, normals\r\n\t * and vertex indices.\r\n\t *\r\n\t * @param {Chunk} chunk - A chunk of volume data.\r\n\t * @return {Object} The generated indices, positions and normals, or null if no data was generated.\r\n\t */\r\n\r\n\tstatic run(chunk) {\r\n\r\n\t\tconst indexBuffer = [];\r\n\r\n\t\tconst voxelBlock = new VoxelBlock(chunk);\r\n\r\n\t\t// Each voxel contains one vertex.\r\n\t\tconst vertexCount = voxelBlock.voxelCount;\r\n\r\n\t\tlet result = null;\r\n\t\tlet indices = null;\r\n\t\tlet positions = null;\r\n\t\tlet normals = null;\r\n\r\n\t\tif(vertexCount > 65536) {\r\n\r\n\t\t\tconsole.warn(\r\n\t\t\t\t\"Could not create geometry for chunk at position\", this.chunk.min,\r\n\t\t\t\t\"with lod\", this.chunk.data.lod, \"(vertex count of\", vertexCount,\r\n\t\t\t\t\"exceeds limit of 65536)\"\r\n\t\t\t);\r\n\r\n\t\t} else if(vertexCount > 0) {\r\n\r\n\t\t\tpositions = new Float32Array(vertexCount * 3);\r\n\t\t\tnormals = new Float32Array(vertexCount * 3);\r\n\r\n\t\t\tgenerateVertexIndices(voxelBlock.root, positions, normals, 0);\r\n\t\t\tcontourCellProc(voxelBlock.root, indexBuffer);\r\n\r\n\t\t\tindices = new Uint16Array(indexBuffer);\r\n\r\n\t\t\tresult = { indices, positions, normals };\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 124,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "contourProcessEdge",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~contourProcessEdge",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": null,
    "description": "An edge contouring sub-procedure.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "Four leaf octants."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "A direction index."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "indexBuffer",
        "description": "An output list for vertex indices."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "contourEdgeProc",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~contourEdgeProc",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": null,
    "description": "An edge contouring procedure.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "Four edge octants."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "A direction index."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "indexBuffer",
        "description": "An output list for vertex indices."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "contourFaceProc",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~contourFaceProc",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": null,
    "description": "A face contouring procedure.",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "Two face octants."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "A direction index."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "indexBuffer",
        "description": "An output list for vertex indices."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "contourCellProc",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~contourCellProc",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": null,
    "description": "The main contouring procedure.",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "indexBuffer",
        "description": "An output list for vertex indices."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "generateVertexIndices",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~generateVertexIndices",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": null,
    "description": "Collects positions and normals from the voxel information of the given octant\nand its children. The generated vertex indices are stored in the respective\nvoxels during the octree traversal.",
    "lineNumber": 298,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "vertexBuffer",
        "description": "An array to be filled with vertices."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "normalBuffer",
        "description": "An array to be filled with normals."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The next vertex index."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DualContouring",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~DualContouring",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/DualContouring.js",
    "importStyle": "{DualContouring}",
    "description": "Dual Contouring is an isosurface extraction technique that was originally\npresented by Tao Ju in 2002:\n http://www.cs.wustl.edu/~taoju/research/dualContour.pdf",
    "lineNumber": 337,
    "interface": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "run",
    "memberof": "src/isosurface/dual-contouring/DualContouring.js~DualContouring",
    "longname": "src/isosurface/dual-contouring/DualContouring.js~DualContouring.run",
    "access": null,
    "description": "Contours the given chunk of volume data and generates vertices, normals\nand vertex indices.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A chunk of volume data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The generated indices, positions and normals, or null if no data was generated."
    },
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/isosurface/dual-contouring/tables.js",
    "memberof": null,
    "longname": "src/isosurface/dual-contouring/tables.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * An edge mask.\r\n *\r\n * @type {Uint8Array}\r\n */\r\n\r\nexport const EDGE_MASK = new Uint8Array([5, 3, 6]);\r\n\r\n/**\r\n * A face map.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const FACE_MAP = [\r\n\r\n\tnew Uint8Array([4, 8, 5, 9]),\r\n\tnew Uint8Array([6, 10, 7, 11]),\r\n\tnew Uint8Array([0, 8, 1, 10]),\r\n\tnew Uint8Array([2, 9, 3, 11]),\r\n\tnew Uint8Array([0, 4, 2, 6]),\r\n\tnew Uint8Array([1, 5, 3, 7])\r\n\r\n];\r\n\r\n/**\r\n * A face mask for cell processing.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const CELL_PROC_FACE_MASK = [\r\n\r\n\tnew Uint8Array([0, 4, 0]),\r\n\tnew Uint8Array([1, 5, 0]),\r\n\tnew Uint8Array([2, 6, 0]),\r\n\tnew Uint8Array([3, 7, 0]),\r\n\tnew Uint8Array([0, 2, 1]),\r\n\tnew Uint8Array([4, 6, 1]),\r\n\tnew Uint8Array([1, 3, 1]),\r\n\tnew Uint8Array([5, 7, 1]),\r\n\tnew Uint8Array([0, 1, 2]),\r\n\tnew Uint8Array([2, 3, 2]),\r\n\tnew Uint8Array([4, 5, 2]),\r\n\tnew Uint8Array([6, 7, 2])\r\n\r\n];\r\n\r\n/**\r\n * An edge mask for cell processing.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const CELL_PROC_EDGE_MASK = [\r\n\r\n\tnew Uint8Array([0, 1, 2, 3, 0]),\r\n\tnew Uint8Array([4, 5, 6, 7, 0]),\r\n\tnew Uint8Array([0, 4, 1, 5, 1]),\r\n\tnew Uint8Array([2, 6, 3, 7, 1]),\r\n\tnew Uint8Array([0, 2, 4, 6, 2]),\r\n\tnew Uint8Array([1, 3, 5, 7, 2])\r\n\r\n];\r\n\r\n/**\r\n * A face mask for face processing.\r\n *\r\n * @type {Array<Uint8Array[]>}\r\n */\r\n\r\nexport const FACE_PROC_FACE_MASK = [[\r\n\r\n\t\tnew Uint8Array([4, 0, 0]),\r\n\t\tnew Uint8Array([5, 1, 0]),\r\n\t\tnew Uint8Array([6, 2, 0]),\r\n\t\tnew Uint8Array([7, 3, 0])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([2, 0, 1]),\r\n\t\tnew Uint8Array([6, 4, 1]),\r\n\t\tnew Uint8Array([3, 1, 1]),\r\n\t\tnew Uint8Array([7, 5, 1])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([1, 0, 2]),\r\n\t\tnew Uint8Array([3, 2, 2]),\r\n\t\tnew Uint8Array([5, 4, 2]),\r\n\t\tnew Uint8Array([7, 6, 2])\r\n\r\n]];\r\n\r\n/**\r\n * An edge mask for face processing.\r\n *\r\n * @type {Array<Uint8Array[]>}\r\n */\r\n\r\nexport const FACE_PROC_EDGE_MASK = [[\r\n\r\n\t\tnew Uint8Array([1, 4, 0, 5, 1, 1]),\r\n\t\tnew Uint8Array([1, 6, 2, 7, 3, 1]),\r\n\t\tnew Uint8Array([0, 4, 6, 0, 2, 2]),\r\n\t\tnew Uint8Array([0, 5, 7, 1, 3, 2])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([0, 2, 3, 0, 1, 0]),\r\n\t\tnew Uint8Array([0, 6, 7, 4, 5, 0]),\r\n\t\tnew Uint8Array([1, 2, 0, 6, 4, 2]),\r\n\t\tnew Uint8Array([1, 3, 1, 7, 5, 2])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([1, 1, 0, 3, 2, 0]),\r\n\t\tnew Uint8Array([1, 5, 4, 7, 6, 0]),\r\n\t\tnew Uint8Array([0, 1, 5, 0, 4, 1]),\r\n\t\tnew Uint8Array([0, 3, 7, 2, 6, 1])\r\n\r\n]];\r\n\r\n/**\r\n * An edge mask for edge processing.\r\n *\r\n * @type {Array<Uint8Array[]>}\r\n */\r\n\r\nexport const EDGE_PROC_EDGE_MASK = [[\r\n\r\n\t\tnew Uint8Array([3, 2, 1, 0, 0]),\r\n\t\tnew Uint8Array([7, 6, 5, 4, 0])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([5, 1, 4, 0, 1]),\r\n\t\tnew Uint8Array([7, 3, 6, 2, 1])\r\n\r\n\t], [\r\n\r\n\t\tnew Uint8Array([6, 4, 2, 0, 2]),\r\n\t\tnew Uint8Array([7, 5, 3, 1, 2])\r\n\r\n]];\r\n\r\n/**\r\n * An edge mask.\r\n *\r\n * @type {Uint8Array[]}\r\n */\r\n\r\nexport const PROC_EDGE_MASK = [\r\n\r\n\tnew Uint8Array([3, 2, 1, 0]),\r\n\tnew Uint8Array([7, 5, 6, 4]),\r\n\tnew Uint8Array([11, 10, 9, 8])\r\n\r\n];\r\n"
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "EDGE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~EDGE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{EDGE_MASK}",
    "description": "An edge mask.",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "FACE_MAP",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~FACE_MAP",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{FACE_MAP}",
    "description": "A face map.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CELL_PROC_FACE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~CELL_PROC_FACE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{CELL_PROC_FACE_MASK}",
    "description": "A face mask for cell processing.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CELL_PROC_EDGE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~CELL_PROC_EDGE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{CELL_PROC_EDGE_MASK}",
    "description": "An edge mask for cell processing.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "FACE_PROC_FACE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~FACE_PROC_FACE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{FACE_PROC_FACE_MASK}",
    "description": "A face mask for face processing.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Array<Uint8Array[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "FACE_PROC_EDGE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~FACE_PROC_EDGE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{FACE_PROC_EDGE_MASK}",
    "description": "An edge mask for face processing.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "Array<Uint8Array[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "EDGE_PROC_EDGE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~EDGE_PROC_EDGE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{EDGE_PROC_EDGE_MASK}",
    "description": "An edge mask for edge processing.",
    "lineNumber": 130,
    "type": {
      "nullable": null,
      "types": [
        "Array<Uint8Array[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "PROC_EDGE_MASK",
    "memberof": "src/isosurface/dual-contouring/tables.js",
    "longname": "src/isosurface/dual-contouring/tables.js~PROC_EDGE_MASK",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/isosurface/dual-contouring/tables.js",
    "importStyle": "{PROC_EDGE_MASK}",
    "description": "An edge mask.",
    "lineNumber": 153,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/isosurface/index.js",
    "memberof": null,
    "longname": "src/isosurface/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Isosurface extraction algorithms.\r\n *\r\n * @module rabbit-hole/isosurface\r\n */\r\n\r\nexport { DualContouring } from \"./dual-contouring/DualContouring.js\";\r\n"
  },
  {
    "__docId__": 141,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/materials/index.js",
    "memberof": null,
    "longname": "src/materials/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * A collection of shader materials.\r\n *\r\n * @module rabbit-hole/materials\r\n */\r\n\r\nexport { MeshTriplanarPhysicalMaterial } from \"./MeshTriplanarPhysicalMaterial.js\";\r\n"
  },
  {
    "__docId__": 142,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/materials/MeshTriplanarPhysicalMaterial.js",
    "memberof": null,
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { ShaderLib, ShaderMaterial, Uniform } from \"three\";\r\n\r\nimport fragment from \"./glsl/triplanar-physical/shader.frag\";\r\nimport vertex from \"./glsl/triplanar-physical/shader.vert\";\r\n\r\n// Register custom shader chunks.\r\nimport \"./triplanar-physical-chunks.js\";\r\n\r\n/**\r\n * A physically based shader material that uses triplanar texture mapping.\r\n */\r\n\r\nexport class MeshTriplanarPhysicalMaterial extends ShaderMaterial {\r\n\r\n\t/**\r\n\t * Constructs a new mesh triplanar physical material.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper({\r\n\r\n\t\t\ttype: \"MeshTriplanarPhysicalMaterial\",\r\n\r\n\t\t\tdefines: { PHYSICAL: \"\" },\r\n\r\n\t\t\tuniforms: {\r\n\r\n\t\t\t\tmapY: new Uniform(null),\r\n\t\t\t\tmapZ: new Uniform(null),\r\n\r\n\t\t\t\tnormalMapY: new Uniform(null),\r\n\t\t\t\tnormalMapZ: new Uniform(null)\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfragmentShader: fragment,\r\n\t\t\tvertexShader: vertex,\r\n\r\n\t\t\tlights: true,\r\n\t\t\tfog: true\r\n\r\n\t\t});\r\n\r\n\t\t// Clone uniforms to avoid conflicts with built-in materials.\r\n\t\tconst source = ShaderLib.physical.uniforms;\r\n\t\tconst target = this.uniforms;\r\n\r\n\t\tObject.keys(source).forEach(function(key) {\r\n\r\n\t\t\tconst value = source[key].value;\r\n\t\t\tconst uniform = new Uniform(value);\r\n\r\n\t\t\tObject.defineProperty(target, key, {\r\n\r\n\t\t\t\tvalue: (value === null) ? uniform : uniform.clone()\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * An environment map.\r\n\t\t *\r\n\t\t * @type {Texture}\r\n\t\t */\r\n\r\n\t\tthis.envMap = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines up to three diffuse maps.\r\n\t *\r\n\t * @param {Texture} [mapX] - The map to use for the X plane.\r\n\t * @param {Texture} [mapY] - The map to use for the Y plane.\r\n\t * @param {Texture} [mapZ] - The map to use for the Z plane.\r\n\t */\r\n\r\n\tsetMaps(mapX, mapY, mapZ) {\r\n\r\n\t\tconst defines = this.defines;\r\n\t\tconst uniforms = this.uniforms;\r\n\r\n\t\tif(mapX !== undefined) {\r\n\r\n\t\t\tdefines.USE_MAP = \"\";\r\n\t\t\tuniforms.map.value = mapX;\r\n\r\n\t\t}\r\n\r\n\t\tif(mapY !== undefined) {\r\n\r\n\t\t\tdefines.USE_MAP_Y = \"\";\r\n\t\t\tuniforms.mapY.value = mapY;\r\n\r\n\t\t}\r\n\r\n\t\tif(mapZ !== undefined) {\r\n\r\n\t\t\tdefines.USE_MAP_Z = \"\";\r\n\t\t\tuniforms.mapZ.value = mapZ;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines up to three normal maps.\r\n\t *\r\n\t * @param {Texture} [mapX] - The map to use for the X plane.\r\n\t * @param {Texture} [mapY] - The map to use for the Y plane.\r\n\t * @param {Texture} [mapZ] - The map to use for the Z plane.\r\n\t */\r\n\r\n\tsetNormalMaps(mapX, mapY, mapZ) {\r\n\r\n\t\tconst defines = this.defines;\r\n\t\tconst uniforms = this.uniforms;\r\n\r\n\t\tif(mapX !== undefined) {\r\n\r\n\t\t\tdefines.USE_NORMALMAP = \"\";\r\n\t\t\tuniforms.normalMap.value = mapX;\r\n\r\n\t\t}\r\n\r\n\t\tif(mapY !== undefined) {\r\n\r\n\t\t\tdefines.USE_NORMALMAP_Y = \"\";\r\n\t\t\tuniforms.normalMapY.value = mapY;\r\n\r\n\t\t}\r\n\r\n\t\tif(mapZ !== undefined) {\r\n\r\n\t\t\tdefines.USE_NORMALMAP_Z = \"\";\r\n\t\t\tuniforms.normalMapZ.value = mapZ;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 143,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MeshTriplanarPhysicalMaterial",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/materials/MeshTriplanarPhysicalMaterial.js",
    "importStyle": "{MeshTriplanarPhysicalMaterial}",
    "description": "A physically based shader material that uses triplanar texture mapping.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "three~ShaderMaterial"
    ]
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#constructor",
    "access": null,
    "description": "Constructs a new mesh triplanar physical material.",
    "lineNumber": 19,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "envMap",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#envMap",
    "access": null,
    "description": "An environment map.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Texture"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setMaps",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#setMaps",
    "access": null,
    "description": "Defines up to three diffuse maps.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapX",
        "description": "The map to use for the X plane."
      },
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapY",
        "description": "The map to use for the Y plane."
      },
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapZ",
        "description": "The map to use for the Z plane."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "needsUpdate",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#needsUpdate",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setNormalMaps",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#setNormalMaps",
    "access": null,
    "description": "Defines up to three normal maps.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapX",
        "description": "The map to use for the X plane."
      },
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapY",
        "description": "The map to use for the Y plane."
      },
      {
        "nullable": null,
        "types": [
          "Texture"
        ],
        "spread": false,
        "optional": true,
        "name": "mapZ",
        "description": "The map to use for the Z plane."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "needsUpdate",
    "memberof": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial",
    "longname": "src/materials/MeshTriplanarPhysicalMaterial.js~MeshTriplanarPhysicalMaterial#needsUpdate",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/materials/triplanar-physical-chunks.js",
    "memberof": null,
    "longname": "src/materials/triplanar-physical-chunks.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { ShaderChunk } from \"three\";\r\n\r\nimport alphamapTriplanarFragment from \"./glsl/triplanar-physical/alphamap.triplanar.frag\";\r\nimport emissivemapTriplanarFragment from \"./glsl/triplanar-physical/emissivemap.triplanar.frag\";\r\nimport mapTriplanarParsFragment from \"./glsl/triplanar-physical/map.triplanar.pars.frag\";\r\nimport mapTriplanarFragment from \"./glsl/triplanar-physical/map.triplanar.frag\";\r\nimport metalnessmapTriplanarFragment from \"./glsl/triplanar-physical/metalnessmap.triplanar.frag\";\r\nimport normalTriplanarFragment from \"./glsl/triplanar-physical/normal.triplanar.frag\";\r\nimport normalmapTriplanarParsFragment from \"./glsl/triplanar-physical/normalmap.triplanar.pars.frag\";\r\nimport roughnessmapTriplanarFragment from \"./glsl/triplanar-physical/roughnessmap.triplanar.frag\";\r\nimport specularmapTriplanarFragment from \"./glsl/triplanar-physical/specularmap.triplanar.frag\";\r\nimport triplanarParsFragment from \"./glsl/triplanar-physical/triplanar.pars.frag\";\r\nimport triplanarParsVertex from \"./glsl/triplanar-physical/triplanar.pars.vert\";\r\nimport triplanarVertex from \"./glsl/triplanar-physical/triplanar.vert\";\r\n\r\nObject.assign(ShaderChunk, {\r\n\t\"alphamap_triplanar_fragment\": alphamapTriplanarFragment,\r\n\t\"emissivemap_triplanar_fragment\": emissivemapTriplanarFragment,\r\n\t\"map_triplanar_pars_fragment\": mapTriplanarParsFragment,\r\n\t\"map_triplanar_fragment\": mapTriplanarFragment,\r\n\t\"metalnessmap_triplanar_fragment\": metalnessmapTriplanarFragment,\r\n\t\"normal_triplanar_fragment\": normalTriplanarFragment,\r\n\t\"normalmap_triplanar_pars_fragment\": normalmapTriplanarParsFragment,\r\n\t\"roughnessmap_triplanar_fragment\": roughnessmapTriplanarFragment,\r\n\t\"specularmap_triplanar_fragment\": specularmapTriplanarFragment,\r\n\t\"triplanar_pars_fragment\": triplanarParsFragment,\r\n\t\"triplanar_pars_vertex\": triplanarParsVertex,\r\n\t\"triplanar_vertex\": triplanarVertex\r\n});\r\n"
  },
  {
    "__docId__": 151,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/Givens.js",
    "memberof": null,
    "longname": "src/math/Givens.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\r\n * A collection of matrix rotation utilities.\r\n */\r\n\r\nexport class Givens {\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The target vector.\r\n\t * @param {Object} coefficients - Two coefficients.\r\n\t */\r\n\r\n\tstatic rot01Post(m, coefficients) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m00 = e[0], m01 = e[3];\r\n\t\tconst m10 = e[1], m11 = e[4];\r\n\t\tconst m20 = e[2], m21 = e[5];\r\n\r\n\t\tconst c = coefficients.c;\r\n\t\tconst s = coefficients.s;\r\n\r\n\t\te[0] = c * m00 - s * m01;\r\n\t\te[3] = s * m00 + c * m01;\r\n\t\t// e[6] = m02;\r\n\r\n\t\te[1] = c * m10 - s * m11;\r\n\t\te[4] = s * m10 + c * m11;\r\n\t\t// e[7] = m12;\r\n\r\n\t\te[2] = c * m20 - s * m21;\r\n\t\te[5] = s * m20 + c * m21;\r\n\t\t// e[8] = m22;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The target vector.\r\n\t * @param {Object} coefficients - Two coefficients.\r\n\t */\r\n\r\n\tstatic rot02Post(m, coefficients) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m00 = e[0], m02 = e[6];\r\n\t\tconst m10 = e[1], m12 = e[7];\r\n\t\tconst m20 = e[2], m22 = e[8];\r\n\r\n\t\tconst c = coefficients.c;\r\n\t\tconst s = coefficients.s;\r\n\r\n\t\te[0] = c * m00 - s * m02;\r\n\t\t// e[3] = m01;\r\n\t\te[6] = s * m00 + c * m02;\r\n\r\n\t\te[1] = c * m10 - s * m12;\r\n\t\t// e[4] = m11;\r\n\t\te[7] = s * m10 + c * m12;\r\n\r\n\t\te[2] = c * m20 - s * m22;\r\n\t\t// e[5] = m21;\r\n\t\te[8] = s * m20 + c * m22;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The target vector.\r\n\t * @param {Object} coefficients - Two coefficients.\r\n\t */\r\n\r\n\tstatic rot12Post(m, coefficients) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m01 = e[3], m02 = e[6];\r\n\t\tconst m11 = e[4], m12 = e[7];\r\n\t\tconst m21 = e[5], m22 = e[8];\r\n\r\n\t\tconst c = coefficients.c;\r\n\t\tconst s = coefficients.s;\r\n\r\n\t\t// e[0] = m00;\r\n\t\te[3] = c * m01 - s * m02;\r\n\t\te[6] = s * m01 + c * m02;\r\n\r\n\t\t// e[1] = m10;\r\n\t\te[4] = c * m11 - s * m12;\r\n\t\te[7] = s * m11 + c * m12;\r\n\r\n\t\t// e[2] = m20;\r\n\t\te[5] = c * m21 - s * m22;\r\n\t\te[8] = s * m21 + c * m22;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 152,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Givens",
    "memberof": "src/math/Givens.js",
    "longname": "src/math/Givens.js~Givens",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/math/Givens.js",
    "importStyle": "{Givens}",
    "description": "A collection of matrix rotation utilities.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 153,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot01Post",
    "memberof": "src/math/Givens.js~Givens",
    "longname": "src/math/Givens.js~Givens.rot01Post",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "The target vector."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "coefficients",
        "description": "Two coefficients."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot02Post",
    "memberof": "src/math/Givens.js~Givens",
    "longname": "src/math/Givens.js~Givens.rot02Post",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "The target vector."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "coefficients",
        "description": "Two coefficients."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot12Post",
    "memberof": "src/math/Givens.js~Givens",
    "longname": "src/math/Givens.js~Givens.rot12Post",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "The target vector."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "coefficients",
        "description": "Two coefficients."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/index.js",
    "memberof": null,
    "longname": "src/math/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Mathematical system components.\r\n *\r\n * @module rabbit-hole/math\r\n */\r\n\r\nexport { SingularValueDecomposition } from \"./SingularValueDecomposition.js\";\r\nexport { Givens } from \"./Givens.js\";\r\nexport { Schur } from \"./Schur.js\";\r\n\r\nexport { QEFSolver } from \"./QEFSolver.js\";\r\nexport { QEFData } from \"./QEFData.js\";\r\n"
  },
  {
    "__docId__": 157,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/QEFData.js",
    "memberof": null,
    "longname": "src/math/QEFData.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { SymmetricMatrix3, Vector3 } from \"math-ds\";\r\n\r\n/**\r\n * A data container for the QEF solver.\r\n */\r\n\r\nexport class QEFData {\r\n\r\n\t/**\r\n\t * Constructs a new QEF data container.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * A symmetric matrix.\r\n\t\t *\r\n\t\t * @type {SymmetricMatrix3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.ata = new SymmetricMatrix3();\r\n\r\n\t\tthis.ata.set(\r\n\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0,\r\n\t\t\t0\r\n\r\n\t\t);\r\n\r\n\t\t/**\r\n\t\t * A vector.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.atb = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * Used to calculate the error of the computed position.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.btb = 0;\r\n\r\n\t\t/**\r\n\t\t * An accumulation of the surface intersection points.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.massPoint = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * The amount of accumulated surface intersection points.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.numPoints = 0;\r\n\r\n\t\t/**\r\n\t\t * The dimension of the mass point. This value is used when mass points are\r\n\t\t * accumulated during voxel cell clustering.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.massPointDimension = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the values of this data instance.\r\n\t *\r\n\t * @return {QEFData} This data.\r\n\t */\r\n\r\n\tset(ata, atb, btb, massPoint, numPoints) {\r\n\r\n\t\tthis.ata.copy(ata);\r\n\t\tthis.atb.copy(atb);\r\n\t\tthis.btb = btb;\r\n\r\n\t\tthis.massPoint.copy(massPoint);\r\n\t\tthis.numPoints = numPoints;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies values from a given data instance.\r\n\t *\r\n\t * @return {QEFData} This data.\r\n\t */\r\n\r\n\tcopy(d) {\r\n\r\n\t\treturn this.set(d.ata, d.atb, d.btb, d.massPoint, d.numPoints);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given surface intersection point and normal.\r\n\t *\r\n\t * @param {Vector3} p - An intersection point.\r\n\t * @param {Vector3} n - A surface normal.\r\n\t */\r\n\r\n\tadd(p, n) {\r\n\r\n\t\tconst nx = n.x;\r\n\t\tconst ny = n.y;\r\n\t\tconst nz = n.z;\r\n\r\n\t\tconst dot = n.dot(p);\r\n\r\n\t\tconst ata = this.ata.elements;\r\n\t\tconst atb = this.atb;\r\n\r\n\t\tata[0] += nx * nx; ata[1] += nx * ny; ata[2] += nx * nz;\r\n\t\tata[3] += ny * ny; ata[4] += ny * nz;\r\n\t\tata[5] += nz * nz;\r\n\r\n\t\tatb.x += dot * nx;\r\n\t\tatb.y += dot * ny;\r\n\t\tatb.z += dot * nz;\r\n\r\n\t\tthis.btb += dot * dot;\r\n\r\n\t\tthis.massPoint.add(p);\r\n\r\n\t\t++this.numPoints;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an entire data set.\r\n\t *\r\n\t * @param {QEFData} d - QEF data.\r\n\t */\r\n\r\n\taddData(d) {\r\n\r\n\t\tthis.ata.add(d.ata);\r\n\t\tthis.atb.add(d.atb);\r\n\t\tthis.btb += d.btb;\r\n\r\n\t\tthis.massPoint.add(d.massPoint);\r\n\t\tthis.numPoints += d.numPoints;\r\n\r\n\t\t/* if(this.massPointDimension === d.massPointDimension) {\r\n\r\n\t\t\tthis.massPoint.add(d.massPoint);\r\n\t\t\tthis.numPoints += d.numPoints;\r\n\r\n\t\t} else if(d.massPointDimension > this.massPointDimension) {\r\n\r\n\t\t\t// Adopt the mass point of the higher dimension.\r\n\t\t\tthis.massPoint.copy(d.massPoint);\r\n\t\t\tthis.massPointDimension = d.massPointDimension;\r\n\t\t\tthis.numPoints = d.numPoints;\r\n\r\n\t\t} */\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this data.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tthis.ata.set(\r\n\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0,\r\n\t\t\t0\r\n\r\n\t\t);\r\n\r\n\t\tthis.atb.set(0, 0, 0);\r\n\t\tthis.btb = 0;\r\n\r\n\t\tthis.massPoint.set(0, 0, 0);\r\n\t\tthis.numPoints = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this data.\r\n\t */\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy(this);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 158,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "QEFData",
    "memberof": "src/math/QEFData.js",
    "longname": "src/math/QEFData.js~QEFData",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/math/QEFData.js",
    "importStyle": "{QEFData}",
    "description": "A data container for the QEF solver.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#constructor",
    "access": null,
    "description": "Constructs a new QEF data container.",
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ata",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#ata",
    "access": "private",
    "description": "A symmetric matrix.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "SymmetricMatrix3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "atb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#atb",
    "access": "private",
    "description": "A vector.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "btb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#btb",
    "access": null,
    "description": "Used to calculate the error of the computed position.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "massPoint",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#massPoint",
    "access": "private",
    "description": "An accumulation of the surface intersection points.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "numPoints",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#numPoints",
    "access": null,
    "description": "The amount of accumulated surface intersection points.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "massPointDimension",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#massPointDimension",
    "access": null,
    "description": "The dimension of the mass point. This value is used when mass points are\naccumulated during voxel cell clustering.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#set",
    "access": null,
    "description": "Sets the values of this data instance.",
    "lineNumber": 83,
    "params": [
      {
        "name": "ata",
        "types": [
          "*"
        ]
      },
      {
        "name": "atb",
        "types": [
          "*"
        ]
      },
      {
        "name": "btb",
        "types": [
          "*"
        ]
      },
      {
        "name": "massPoint",
        "types": [
          "*"
        ]
      },
      {
        "name": "numPoints",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "QEFData"
      ],
      "spread": false,
      "description": "This data."
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "btb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#btb",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "numPoints",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#numPoints",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "copy",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#copy",
    "access": null,
    "description": "Copies values from a given data instance.",
    "lineNumber": 102,
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "QEFData"
      ],
      "spread": false,
      "description": "This data."
    },
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#add",
    "access": null,
    "description": "Adds the given surface intersection point and normal.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": "An intersection point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "A surface normal."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "btb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#btb",
    "access": null,
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addData",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#addData",
    "access": null,
    "description": "Adds an entire data set.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "QEFData"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": "QEF data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "btb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#btb",
    "access": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "numPoints",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#numPoints",
    "access": null,
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#clear",
    "access": null,
    "description": "Clears this data.",
    "lineNumber": 177,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 176,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "btb",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#btb",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "numPoints",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#numPoints",
    "access": null,
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "src/math/QEFData.js~QEFData",
    "longname": "src/math/QEFData.js~QEFData#clone",
    "access": null,
    "description": "Clones this data.",
    "lineNumber": 199,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/QEFSolver.js",
    "memberof": null,
    "longname": "src/math/QEFSolver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { SymmetricMatrix3, Vector3 } from \"math-ds\";\r\nimport { SingularValueDecomposition } from \"./SingularValueDecomposition.js\";\r\n\r\n/**\r\n * A Quaratic Error Function solver.\r\n *\r\n * Finds a point inside a voxel that minimises the sum of the squares of the\r\n * distances to the surface intersection planes associated with the voxel.\r\n */\r\n\r\nexport class QEFSolver {\r\n\r\n\t/**\r\n\t * Constructs a new QEF solver.\r\n\t *\r\n\t * @param {Number} [svdThreshold=1e-6] - A threshold for the Singular Value Decomposition error.\r\n\t * @param {Number} [svdSweeps=4] - Number of Singular Value Decomposition sweeps.\r\n\t * @param {Number} [pseudoInverseThreshold=1e-6] - A threshold for the pseudo inverse error.\r\n\t */\r\n\r\n\tconstructor(svdThreshold = 1e-6, svdSweeps = 4, pseudoInverseThreshold = 1e-6) {\r\n\r\n\t\t/**\r\n\t\t * A Singular Value Decomposition error threshold.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default 1e-6\r\n\t\t */\r\n\r\n\t\tthis.svdThreshold = svdThreshold;\r\n\r\n\t\t/**\r\n\t\t * The number of Singular Value Decomposition sweeps.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default 4\r\n\t\t */\r\n\r\n\t\tthis.svdSweeps = svdSweeps;\r\n\r\n\t\t/**\r\n\t\t * A pseudo inverse error threshold.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default 1e-6\r\n\t\t */\r\n\r\n\t\tthis.pseudoInverseThreshold = pseudoInverseThreshold;\r\n\r\n\t\t/**\r\n\t\t * QEF data.\r\n\t\t *\r\n\t\t * @type {QEFData}\r\n\t\t * @private\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.data = null;\r\n\r\n\t\t/**\r\n\t\t * The average of the surface intersection points of a voxel.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.massPoint = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * A symmetric matrix.\r\n\t\t *\r\n\t\t * @type {SymmetricMatrix3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.ata = new SymmetricMatrix3();\r\n\r\n\t\t/**\r\n\t\t * A vector.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.atb = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * A calculated vertex position.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.x = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * Indicates whether this solver has a solution.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\r\n\t\tthis.hasSolution = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the error of the approximated position.\r\n\t *\r\n\t * @return {Number} The QEF error.\r\n\t */\r\n\r\n\tcomputeError() {\r\n\r\n\t\tconst x = this.x;\r\n\r\n\t\tlet error = Infinity;\r\n\t\tlet atax;\r\n\r\n\t\tif(this.hasSolution) {\r\n\r\n\t\t\tatax = this.ata.applyToVector3(x.clone());\r\n\t\t\terror = x.dot(atax) - 2.0 * x.dot(this.atb) + this.data.btb;\r\n\r\n\t\t}\r\n\r\n\t\treturn error;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the QEF data.\r\n\t *\r\n\t * @param {QEFData} d - QEF Data.\r\n\t * @return {QEFSolver} This solver.\r\n\t */\r\n\r\n\tsetData(d) {\r\n\r\n\t\tthis.data = d;\r\n\t\tthis.hasSolution = false;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Solves the Quadratic Error Function.\r\n\t *\r\n\t * @return {Vector3} The calculated vertex position.\r\n\t */\r\n\r\n\tsolve() {\r\n\r\n\t\tconst data = this.data;\r\n\t\tconst massPoint = this.massPoint;\r\n\t\tconst ata = this.ata;\r\n\t\tconst atb = this.atb;\r\n\t\tconst x = this.x;\r\n\r\n\t\tlet mp;\r\n\r\n\t\tif(!this.hasSolution && data !== null && data.numPoints > 0) {\r\n\r\n\t\t\t// The mass point is a sum, so divide it to make it the average.\r\n\t\t\tmassPoint.copy(data.massPoint);\r\n\t\t\tmassPoint.divideScalar(data.numPoints);\r\n\r\n\t\t\tata.copy(data.ata);\r\n\t\t\tatb.copy(data.atb);\r\n\r\n\t\t\tmp = ata.applyToVector3(massPoint.clone());\r\n\t\t\tatb.sub(mp);\r\n\r\n\t\t\tx.set(0, 0, 0);\r\n\r\n\t\t\tdata.massPointDimension = SingularValueDecomposition.solveSymmetric(\r\n\t\t\t\tata, atb, x, this.svdThreshold, this.svdSweeps, this.pseudoInverseThreshold\r\n\t\t\t);\r\n\r\n\t\t\t// svdError = SingularValueDecomposition.calculateError(ata, atb, x);\r\n\r\n\t\t\tx.add(massPoint);\r\n\r\n\t\t\tatb.copy(data.atb);\r\n\r\n\t\t\tthis.hasSolution = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this QEF instance.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\tthis.data = null;\r\n\t\tthis.hasSolution = false;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 180,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "QEFSolver",
    "memberof": "src/math/QEFSolver.js",
    "longname": "src/math/QEFSolver.js~QEFSolver",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/math/QEFSolver.js",
    "importStyle": "{QEFSolver}",
    "description": "A Quaratic Error Function solver.\n\nFinds a point inside a voxel that minimises the sum of the squares of the\ndistances to the surface intersection planes associated with the voxel.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#constructor",
    "access": null,
    "description": "Constructs a new QEF solver.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1e-6",
        "defaultRaw": 0.000001,
        "name": "svdThreshold",
        "description": "A threshold for the Singular Value Decomposition error."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "4",
        "defaultRaw": 4,
        "name": "svdSweeps",
        "description": "Number of Singular Value Decomposition sweeps."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1e-6",
        "defaultRaw": 0.000001,
        "name": "pseudoInverseThreshold",
        "description": "A threshold for the pseudo inverse error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "svdThreshold",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#svdThreshold",
    "access": "private",
    "description": "A Singular Value Decomposition error threshold.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "1e-6"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "svdSweeps",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#svdSweeps",
    "access": "private",
    "description": "The number of Singular Value Decomposition sweeps.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "4"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pseudoInverseThreshold",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#pseudoInverseThreshold",
    "access": "private",
    "description": "A pseudo inverse error threshold.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "1e-6"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#data",
    "access": "private",
    "description": "QEF data.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "QEFData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "massPoint",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#massPoint",
    "access": null,
    "description": "The average of the surface intersection points of a voxel.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ata",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#ata",
    "access": "private",
    "description": "A symmetric matrix.",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "SymmetricMatrix3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "atb",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#atb",
    "access": "private",
    "description": "A vector.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#x",
    "access": "private",
    "description": "A calculated vertex position.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasSolution",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#hasSolution",
    "access": null,
    "description": "Indicates whether this solver has a solution.",
    "lineNumber": 104,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeError",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#computeError",
    "access": null,
    "description": "Computes the error of the approximated position.",
    "lineNumber": 114,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The QEF error."
    },
    "generator": false
  },
  {
    "__docId__": 192,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setData",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#setData",
    "access": null,
    "description": "Sets the QEF data.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "QEFData"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": "QEF Data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "QEFSolver"
      ],
      "spread": false,
      "description": "This solver."
    },
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#data",
    "access": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasSolution",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#hasSolution",
    "access": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "solve",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#solve",
    "access": null,
    "description": "Solves the Quadratic Error Function.",
    "lineNumber": 154,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The calculated vertex position."
    },
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasSolution",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#hasSolution",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#clear",
    "access": null,
    "description": "Clears this QEF instance.",
    "lineNumber": 200,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#data",
    "access": null,
    "description": null,
    "lineNumber": 202,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasSolution",
    "memberof": "src/math/QEFSolver.js~QEFSolver",
    "longname": "src/math/QEFSolver.js~QEFSolver#hasSolution",
    "access": null,
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/Schur.js",
    "memberof": null,
    "longname": "src/math/Schur.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "/**\r\n * Symmetric Givens coefficients.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\nconst coefficients = {\r\n\tc: 0.0,\r\n\ts: 0.0\r\n};\r\n\r\n/**\r\n * Caluclates symmetric coefficients for the Givens post rotation step.\r\n *\r\n * @private\r\n * @param {Number} aPP - PP.\r\n * @param {Number} aPQ - PQ.\r\n * @param {Number} aQQ - QQ.\r\n */\r\n\r\nfunction calculateSymmetricCoefficients(aPP, aPQ, aQQ) {\r\n\r\n\tlet tau, stt, tan;\r\n\r\n\tif(aPQ === 0) {\r\n\r\n\t\tcoefficients.c = 1;\r\n\t\tcoefficients.s = 0;\r\n\r\n\t} else {\r\n\r\n\t\ttau = (aQQ - aPP) / (2.0 * aPQ);\r\n\t\tstt = Math.sqrt(1.0 + tau * tau);\r\n\t\ttan = 1.0 / ((tau >= 0.0) ? (tau + stt) : (tau - stt));\r\n\r\n\t\tcoefficients.c = 1.0 / Math.sqrt(1.0 + tan * tan);\r\n\t\tcoefficients.s = tan * coefficients.c;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A collection of matrix rotation utilities.\r\n */\r\n\r\nexport class Schur {\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {SymmetricMatrix3} m - A symmetric matrix.\r\n\t * @return {Object} The coefficients.\r\n\t */\r\n\r\n\tstatic rot01(m) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m00 = e[0], m01 = e[1], m02 = e[2];\r\n\t\tconst m11 = e[3], m12 = e[4];\r\n\r\n\t\tcalculateSymmetricCoefficients(m00, m01, m11);\r\n\r\n\t\tconst c = coefficients.c, s = coefficients.s;\r\n\t\tconst cc = c * c, ss = s * s;\r\n\r\n\t\tconst mix = 2.0 * c * s * m01;\r\n\r\n\t\te[0] = cc * m00 - mix + ss * m11;\r\n\t\te[1] = 0;\r\n\t\te[2] = c * m02 - s * m12;\r\n\r\n\t\te[3] = ss * m00 + mix + cc * m11;\r\n\t\te[4] = s * m02 + c * m12;\r\n\r\n\t\t// e[5] = m22;\r\n\r\n\t\treturn coefficients;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {SymmetricMatrix3} m - A matrix.\r\n\t * @return {Object} The coefficients.\r\n\t */\r\n\r\n\tstatic rot02(m) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m00 = e[0], m01 = e[1], m02 = e[2];\r\n\t\tconst m12 = e[4];\r\n\t\tconst m22 = e[5];\r\n\r\n\t\tcalculateSymmetricCoefficients(m00, m02, m22);\r\n\r\n\t\tconst c = coefficients.c, s = coefficients.s;\r\n\t\tconst cc = c * c, ss = s * s;\r\n\r\n\t\tconst mix = 2.0 * c * s * m02;\r\n\r\n\t\te[0] = cc * m00 - mix + ss * m22;\r\n\t\te[1] = c * m01 - s * m12;\r\n\t\te[2] = 0;\r\n\r\n\t\t// e[3] = m11;\r\n\t\te[4] = s * m01 + c * m12;\r\n\r\n\t\te[5] = ss * m00 + mix + cc * m22;\r\n\r\n\t\treturn coefficients;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the given matrix.\r\n\t *\r\n\t * @param {SymmetricMatrix3} m - A matrix.\r\n\t * @return {Object} The coefficients.\r\n\t */\r\n\r\n\tstatic rot12(m) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst m01 = e[1], m02 = e[2];\r\n\t\tconst m11 = e[3], m12 = e[4];\r\n\t\tconst m22 = e[5];\r\n\r\n\t\tcalculateSymmetricCoefficients(m11, m12, m22);\r\n\r\n\t\tconst c = coefficients.c, s = coefficients.s;\r\n\t\tconst cc = c * c, ss = s * s;\r\n\r\n\t\tconst mix = 2.0 * c * s * m12;\r\n\r\n\t\t// e[0] = m00;\r\n\t\te[1] = c * m01 - s * m02;\r\n\t\te[2] = s * m01 + c * m02;\r\n\r\n\t\te[3] = cc * m11 - mix + ss * m22;\r\n\t\te[4] = 0;\r\n\r\n\t\te[5] = ss * m11 + mix + cc * m22;\r\n\r\n\t\treturn coefficients;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 201,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "coefficients",
    "memberof": "src/math/Schur.js",
    "longname": "src/math/Schur.js~coefficients",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/Schur.js",
    "importStyle": null,
    "description": "Symmetric Givens coefficients.",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "calculateSymmetricCoefficients",
    "memberof": "src/math/Schur.js",
    "longname": "src/math/Schur.js~calculateSymmetricCoefficients",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/Schur.js",
    "importStyle": null,
    "description": "Caluclates symmetric coefficients for the Givens post rotation step.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aPP",
        "description": "PP."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aPQ",
        "description": "PQ."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aQQ",
        "description": "QQ."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 203,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Schur",
    "memberof": "src/math/Schur.js",
    "longname": "src/math/Schur.js~Schur",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/math/Schur.js",
    "importStyle": "{Schur}",
    "description": "A collection of matrix rotation utilities.",
    "lineNumber": 48,
    "interface": false
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot01",
    "memberof": "src/math/Schur.js~Schur",
    "longname": "src/math/Schur.js~Schur.rot01",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "A symmetric matrix."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The coefficients."
    },
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot02",
    "memberof": "src/math/Schur.js~Schur",
    "longname": "src/math/Schur.js~Schur.rot02",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "A matrix."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The coefficients."
    },
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "rot12",
    "memberof": "src/math/Schur.js~Schur",
    "longname": "src/math/Schur.js~Schur.rot12",
    "access": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "A matrix."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The coefficients."
    },
    "generator": false
  },
  {
    "__docId__": 207,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/math/SingularValueDecomposition.js",
    "memberof": null,
    "longname": "src/math/SingularValueDecomposition.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Matrix3, SymmetricMatrix3 } from \"math-ds\";\r\nimport { Givens } from \"./Givens.js\";\r\nimport { Schur } from \"./Schur.js\";\r\n\r\n/**\r\n * Rotates the given matrix.\r\n *\r\n * @private\r\n * @param {SymmetricMatrix3} vtav - A symmetric matrix.\r\n * @param {Matrix3} v - A matrix.\r\n */\r\n\r\nfunction rotate01(vtav, v) {\r\n\r\n\tconst m01 = vtav.elements[1];\r\n\r\n\tif(m01 !== 0) {\r\n\r\n\t\tGivens.rot01Post(v, Schur.rot01(vtav));\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Rotates the given matrix.\r\n *\r\n * @private\r\n * @param {SymmetricMatrix3} vtav - A symmetric matrix.\r\n * @param {Matrix3} v - A matrix.\r\n */\r\n\r\nfunction rotate02(vtav, v) {\r\n\r\n\tconst m02 = vtav.elements[2];\r\n\r\n\tif(m02 !== 0) {\r\n\r\n\t\tGivens.rot02Post(v, Schur.rot02(vtav));\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Rotates the given matrix.\r\n *\r\n * @private\r\n * @param {SymmetricMatrix3} vtav - A symmetric matrix.\r\n * @param {Matrix3} v - A matrix.\r\n */\r\n\r\nexport function rotate12(vtav, v) {\r\n\r\n\tconst m12 = vtav.elements[4];\r\n\r\n\tif(m12 !== 0) {\r\n\r\n\t\tGivens.rot12Post(v, Schur.rot12(vtav));\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Computes the symmetric Singular Value Decomposition.\r\n *\r\n * @private\r\n * @param {SymmetricMatrix3} a - A symmetric matrix.\r\n * @param {SymmetricMatrix3} vtav - A symmetric matrix.\r\n * @param {Matrix3} v - A matrix.\r\n * @param {Number} threshold - A threshold.\r\n * @param {Number} maxSweeps - The maximum number of sweeps.\r\n */\r\n\r\nfunction getSymmetricSVD(a, vtav, v, threshold, maxSweeps) {\r\n\r\n\tconst delta = threshold * vtav.copy(a).norm();\r\n\r\n\tlet i;\r\n\r\n\tfor(i = 0; i < maxSweeps && vtav.off() > delta; ++i) {\r\n\r\n\t\trotate01(vtav, v);\r\n\t\trotate02(vtav, v);\r\n\t\trotate12(vtav, v);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Computes the pseudo inverse of a given value.\r\n *\r\n * @private\r\n * @param {Number} x - The value to invert.\r\n * @param {Number} threshold - A threshold.\r\n * @return {Number} The inverted value.\r\n */\r\n\r\nfunction pinv(x, threshold) {\r\n\r\n\tconst invX = 1.0 / x;\r\n\r\n\treturn (Math.abs(x) < threshold || Math.abs(invX) < threshold) ? 0.0 : invX;\r\n\r\n}\r\n\r\n/**\r\n * Calculates the pseudo inverse of the given matrix.\r\n *\r\n * @private\r\n * @param {Matrix3} t - The target matrix.\r\n * @param {SymmetricMatrix3} a - A symmetric matrix.\r\n * @param {Matrix3} b - A matrix.\r\n * @param {Number} threshold - A threshold.\r\n * @return {Number} A dimension indicating the amount of truncated singular values.\r\n */\r\n\r\nfunction pseudoInverse(t, a, b, threshold) {\r\n\r\n\tconst te = t.elements;\r\n\tconst ae = a.elements;\r\n\tconst be = b.elements;\r\n\r\n\tconst a00 = ae[0];\r\n\tconst a11 = ae[3];\r\n\tconst a22 = ae[5];\r\n\r\n\tconst a0 = pinv(a00, threshold);\r\n\tconst a1 = pinv(a11, threshold);\r\n\tconst a2 = pinv(a22, threshold);\r\n\r\n\t// Count how many singular values have been truncated.\r\n\tconst truncatedValues = (a0 === 0.0) + (a1 === 0.0) + (a2 === 0.0);\r\n\r\n\t// Compute the feature dimension.\r\n\tconst dimension = 3 - truncatedValues;\r\n\r\n\tconst b00 = be[0], b01 = be[3], b02 = be[6];\r\n\tconst b10 = be[1], b11 = be[4], b12 = be[7];\r\n\tconst b20 = be[2], b21 = be[5], b22 = be[8];\r\n\r\n\tte[0] = b00 * a0 * b00 + b01 * a1 * b01 + b02 * a2 * b02;\r\n\tte[3] = b00 * a0 * b10 + b01 * a1 * b11 + b02 * a2 * b12;\r\n\tte[6] = b00 * a0 * b20 + b01 * a1 * b21 + b02 * a2 * b22;\r\n\r\n\tte[1] = te[3];\r\n\tte[4] = b10 * a0 * b10 + b11 * a1 * b11 + b12 * a2 * b12;\r\n\tte[7] = b10 * a0 * b20 + b11 * a1 * b21 + b12 * a2 * b22;\r\n\r\n\tte[2] = te[6];\r\n\tte[5] = te[7];\r\n\tte[8] = b20 * a0 * b20 + b21 * a1 * b21 + b22 * a2 * b22;\r\n\r\n\treturn dimension;\r\n\r\n}\r\n\r\n/**\r\n * A Singular Value Decomposition solver.\r\n */\r\n\r\nexport class SingularValueDecomposition {\r\n\r\n\t/**\r\n\t * Performs the Singular Value Decomposition.\r\n\t *\r\n\t * @param {SymmetricMatrix3} a - A symmetric matrix.\r\n\t * @param {Vector3} b - A vector.\r\n\t * @param {Vector3} x - A target vector.\r\n\t * @param {Number} svdThreshold - A threshold.\r\n\t * @param {Number} svdSweeps - The maximum number of SVD sweeps.\r\n\t * @param {Number} pseudoInverseThreshold - A threshold.\r\n\t * @return {Number} A dimension indicating the amount of truncated singular values.\r\n\t */\r\n\r\n\tstatic solveSymmetric(a, b, x, svdThreshold, svdSweeps, pseudoInverseThreshold) {\r\n\r\n\t\tconst v = new Matrix3();\r\n\r\n\t\tconst pinv = new Matrix3();\r\n\t\tconst vtav = new SymmetricMatrix3();\r\n\r\n\t\tlet dimension;\r\n\r\n\t\tpinv.set(\r\n\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0, 0\r\n\r\n\t\t);\r\n\r\n\t\tvtav.set(\r\n\r\n\t\t\t0, 0, 0,\r\n\t\t\t0, 0,\r\n\t\t\t0\r\n\r\n\t\t);\r\n\r\n\t\tgetSymmetricSVD(a, vtav, v, svdThreshold, svdSweeps);\r\n\r\n\t\t// Least squares.\r\n\t\tdimension = pseudoInverse(pinv, vtav, v, pseudoInverseThreshold);\r\n\r\n\t\tx.copy(b).applyMatrix3(pinv);\r\n\r\n\t\treturn dimension;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the error of the Singular Value Decomposition.\r\n\t *\r\n\t * @param {SymmetricMatrix3} t - A symmetric matrix.\r\n\t * @param {Vector3} b - A vector.\r\n\t * @param {Vector3} x - The calculated position.\r\n\t * @return {Number} The error.\r\n\t */\r\n\r\n\tstatic calculateError(t, b, x) {\r\n\r\n\t\tconst e = t.elements;\r\n\t\tconst v = x.clone();\r\n\t\tconst a = new Matrix3();\r\n\r\n\t\t// Set symmetrically.\r\n\t\ta.set(\r\n\r\n\t\t\te[0], e[1], e[2],\r\n\t\t\te[1], e[3], e[4],\r\n\t\t\te[2], e[4], e[5]\r\n\r\n\t\t);\r\n\r\n\t\tv.applyMatrix3(a);\r\n\t\tv.subVectors(b, v);\r\n\r\n\t\treturn v.lengthSq();\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 208,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rotate01",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~rotate01",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "vtav",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "A matrix."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rotate02",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~rotate02",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": null,
    "description": "Rotates the given matrix.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "vtav",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "A matrix."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "rotate12",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~rotate12",
    "access": "private",
    "export": true,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": "{rotate12}",
    "description": "Rotates the given matrix.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "vtav",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "A matrix."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 211,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getSymmetricSVD",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~getSymmetricSVD",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": null,
    "description": "Computes the symmetric Singular Value Decomposition.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "vtav",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "A matrix."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "threshold",
        "description": "A threshold."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxSweeps",
        "description": "The maximum number of sweeps."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 212,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pinv",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~pinv",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": null,
    "description": "Computes the pseudo inverse of a given value.",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The value to invert."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "threshold",
        "description": "A threshold."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The inverted value."
    },
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pseudoInverse",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~pseudoInverse",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": null,
    "description": "Calculates the pseudo inverse of the given matrix.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "The target matrix."
      },
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Matrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "A matrix."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "threshold",
        "description": "A threshold."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "A dimension indicating the amount of truncated singular values."
    },
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SingularValueDecomposition",
    "memberof": "src/math/SingularValueDecomposition.js",
    "longname": "src/math/SingularValueDecomposition.js~SingularValueDecomposition",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/math/SingularValueDecomposition.js",
    "importStyle": "{SingularValueDecomposition}",
    "description": "A Singular Value Decomposition solver.",
    "lineNumber": 164,
    "interface": false
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "solveSymmetric",
    "memberof": "src/math/SingularValueDecomposition.js~SingularValueDecomposition",
    "longname": "src/math/SingularValueDecomposition.js~SingularValueDecomposition.solveSymmetric",
    "access": null,
    "description": "Performs the Singular Value Decomposition.",
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "A vector."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "A target vector."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "svdThreshold",
        "description": "A threshold."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "svdSweeps",
        "description": "The maximum number of SVD sweeps."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "pseudoInverseThreshold",
        "description": "A threshold."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "A dimension indicating the amount of truncated singular values."
    },
    "generator": false
  },
  {
    "__docId__": 216,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "calculateError",
    "memberof": "src/math/SingularValueDecomposition.js~SingularValueDecomposition",
    "longname": "src/math/SingularValueDecomposition.js~SingularValueDecomposition.calculateError",
    "access": null,
    "description": "Calculates the error of the Singular Value Decomposition.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "SymmetricMatrix3"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "A symmetric matrix."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "A vector."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The calculated position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The error."
    },
    "generator": false
  },
  {
    "__docId__": 217,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/ConstructiveSolidGeometry.js",
    "memberof": null,
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { PATTERN } from \"sparse-octree\";\r\nimport { Box3, Vector3 } from \"math-ds\";\r\nimport { Material } from \"../Material.js\";\r\nimport { EdgeData } from \"../EdgeData.js\";\r\nimport { HermiteData } from \"../HermiteData.js\";\r\nimport { Edge } from \"../Edge.js\";\r\nimport { OperationType } from \"./OperationType.js\";\r\nimport { Union } from \"./Union.js\";\r\nimport { Difference } from \"./Difference.js\";\r\nimport { Intersection } from \"./Intersection.js\";\r\n\r\n/**\r\n * Finds out which grid points lie inside the area of the given operation.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk.\r\n * @param {Operation} operation - A CSG operation.\r\n * @return {Box3} The index bounds.\r\n */\r\n\r\nfunction computeIndexBounds(chunk, operation) {\r\n\r\n\tconst s = chunk.size;\r\n\tconst n = chunk.resolution;\r\n\r\n\tconst min = new Vector3(0, 0, 0);\r\n\tconst max = new Vector3(n, n, n);\r\n\r\n\tconst region = new Box3(chunk.min, chunk.max);\r\n\r\n\tif(operation.type !== OperationType.INTERSECTION) {\r\n\r\n\t\tif(operation.boundingBox.intersectsBox(region)) {\r\n\r\n\t\t\tmin.copy(operation.boundingBox.min).max(region.min).sub(region.min);\r\n\r\n\t\t\tmin.x = Math.ceil(min.x * n / s);\r\n\t\t\tmin.y = Math.ceil(min.y * n / s);\r\n\t\t\tmin.z = Math.ceil(min.z * n / s);\r\n\r\n\t\t\tmax.copy(operation.boundingBox.max).min(region.max).sub(region.min);\r\n\r\n\t\t\tmax.x = Math.floor(max.x * n / s);\r\n\t\t\tmax.y = Math.floor(max.y * n / s);\r\n\t\t\tmax.z = Math.floor(max.z * n / s);\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// The chunk is unaffected by this operation.\r\n\t\t\tmin.set(n, n, n);\r\n\t\t\tmax.set(0, 0, 0);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn new Box3(min, max);\r\n\r\n}\r\n\r\n/**\r\n * Combines material indices.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk\r\n * @param {Operation} operation - A CSG operation.\r\n * @param {HermiteData} data0 - A target data set.\r\n * @param {HermiteData} data1 - A predominant data set.\r\n * @param {Box3} bounds - Grid iteration limits.\r\n */\r\n\r\nfunction combineMaterialIndices(chunk, operation, data0, data1, bounds) {\r\n\r\n\tconst m = chunk.resolution + 1;\r\n\tconst mm = m * m;\r\n\r\n\tconst X = bounds.max.x;\r\n\tconst Y = bounds.max.y;\r\n\tconst Z = bounds.max.z;\r\n\r\n\tlet x, y, z;\r\n\r\n\tfor(z = bounds.min.z; z <= Z; ++z) {\r\n\r\n\t\tfor(y = bounds.min.y; y <= Y; ++y) {\r\n\r\n\t\t\tfor(x = bounds.min.x; x <= X; ++x) {\r\n\r\n\t\t\t\toperation.updateMaterialIndex((z * mm + y * m + x), data0, data1);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Generates material indices.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk\r\n * @param {DensityFunction} operation - A CSG operation.\r\n * @param {HermiteData} data - A target data set.\r\n * @param {Box3} bounds - Grid iteration limits.\r\n */\r\n\r\nfunction generateMaterialIndices(chunk, operation, data, bounds) {\r\n\r\n\tconst s = chunk.size;\r\n\tconst n = chunk.resolution;\r\n\tconst m = n + 1;\r\n\tconst mm = m * m;\r\n\r\n\tconst materialIndices = data.materialIndices;\r\n\r\n\tconst base = chunk.min;\r\n\tconst offset = new Vector3();\r\n\tconst position = new Vector3();\r\n\r\n\tconst X = bounds.max.x;\r\n\tconst Y = bounds.max.y;\r\n\tconst Z = bounds.max.z;\r\n\r\n\tlet materialIndex;\r\n\tlet materials = 0;\r\n\r\n\tlet x, y, z;\r\n\r\n\tfor(z = bounds.min.z; z <= Z; ++z) {\r\n\r\n\t\toffset.z = z * s / n;\r\n\r\n\t\tfor(y = bounds.min.y; y <= Y; ++y) {\r\n\r\n\t\t\toffset.y = y * s / n;\r\n\r\n\t\t\tfor(x = bounds.min.x; x <= X; ++x) {\r\n\r\n\t\t\t\toffset.x = x * s / n;\r\n\r\n\t\t\t\tmaterialIndex = operation.generateMaterialIndex(position.addVectors(base, offset));\r\n\r\n\t\t\t\tif(materialIndex !== Material.AIR) {\r\n\r\n\t\t\t\t\tmaterialIndices[z * mm + y * m + x] = materialIndex;\r\n\r\n\t\t\t\t\t++materials;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdata.materials = materials;\r\n\r\n}\r\n\r\n/**\r\n * Combines edges.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk\r\n * @param {Operation} operation - A CSG operation.\r\n * @param {HermiteData} data0 - A target data set.\r\n * @param {HermiteData} data1 - A predominant data set.\r\n * @return {Object} The generated edge data.\r\n */\r\n\r\nfunction combineEdges(chunk, operation, data0, data1) {\r\n\r\n\tconst m = chunk.resolution + 1;\r\n\tconst indexOffsets = new Uint32Array([1, m, m * m]);\r\n\r\n\tconst materialIndices = data0.materialIndices;\r\n\r\n\tconst edge1 = new Edge();\r\n\tconst edge0 = new Edge();\r\n\r\n\tconst edgeData1 = data1.edgeData;\r\n\tconst edgeData0 = data0.edgeData;\r\n\r\n\tconst edgeCount = EdgeData.calculate1DEdgeCount(chunk.resolution);\r\n\tconst edgeData = new EdgeData(\r\n\t\tMath.min(edgeCount, edgeData0.edges[0].length + edgeData1.edges[0].length),\r\n\t\tMath.min(edgeCount, edgeData0.edges[1].length + edgeData1.edges[1].length),\r\n\t\tMath.min(edgeCount, edgeData0.edges[2].length + edgeData1.edges[2].length)\r\n\t);\r\n\tconst lengths = new Uint32Array(3);\r\n\r\n\tlet edges1, zeroCrossings1, normals1;\r\n\tlet edges0, zeroCrossings0, normals0;\r\n\tlet edges, zeroCrossings, normals;\r\n\r\n\tlet indexA1, indexB1;\r\n\tlet indexA0, indexB0;\r\n\r\n\tlet m1, m2;\r\n\tlet edge;\r\n\r\n\tlet c, d, i, j, il, jl;\r\n\r\n\t// Process the edges along the X-axis, then Y and finally Z.\r\n\tfor(c = 0, d = 0; d < 3; c = 0, ++d) {\r\n\r\n\t\tedges1 = edgeData1.edges[d];\r\n\t\tedges0 = edgeData0.edges[d];\r\n\t\tedges = edgeData.edges[d];\r\n\r\n\t\tzeroCrossings1 = edgeData1.zeroCrossings[d];\r\n\t\tzeroCrossings0 = edgeData0.zeroCrossings[d];\r\n\t\tzeroCrossings = edgeData.zeroCrossings[d];\r\n\r\n\t\tnormals1 = edgeData1.normals[d];\r\n\t\tnormals0 = edgeData0.normals[d];\r\n\t\tnormals = edgeData.normals[d];\r\n\r\n\t\til = edges1.length;\r\n\t\tjl = edges0.length;\r\n\r\n\t\t// Process all generated edges.\r\n\t\tfor(i = 0, j = 0; i < il; ++i) {\r\n\r\n\t\t\tindexA1 = edges1[i];\r\n\t\t\tindexB1 = indexA1 + indexOffsets[d];\r\n\r\n\t\t\tm1 = materialIndices[indexA1];\r\n\t\t\tm2 = materialIndices[indexB1];\r\n\r\n\t\t\tif(m1 !== m2 && (m1 === Material.AIR || m2 === Material.AIR)) {\r\n\r\n\t\t\t\tedge1.t = zeroCrossings1[i];\r\n\t\t\t\tedge1.n.x = normals1[i * 3];\r\n\t\t\t\tedge1.n.y = normals1[i * 3 + 1];\r\n\t\t\t\tedge1.n.z = normals1[i * 3 + 2];\r\n\r\n\t\t\t\tif(operation.type === OperationType.DIFFERENCE) {\r\n\r\n\t\t\t\t\tedge1.n.negate();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tedge = edge1;\r\n\r\n\t\t\t\t// Process existing edges up to the generated edge.\r\n\t\t\t\twhile(j < jl && edges0[j] <= indexA1) {\r\n\r\n\t\t\t\t\tindexA0 = edges0[j];\r\n\t\t\t\t\tindexB0 = indexA0 + indexOffsets[d];\r\n\r\n\t\t\t\t\tedge0.t = zeroCrossings0[j];\r\n\t\t\t\t\tedge0.n.x = normals0[j * 3];\r\n\t\t\t\t\tedge0.n.y = normals0[j * 3 + 1];\r\n\t\t\t\t\tedge0.n.z = normals0[j * 3 + 2];\r\n\r\n\t\t\t\t\tm1 = materialIndices[indexA0];\r\n\r\n\t\t\t\t\tif(indexA0 < indexA1) {\r\n\r\n\t\t\t\t\t\tm2 = materialIndices[indexB0];\r\n\r\n\t\t\t\t\t\tif(m1 !== m2 && (m1 === Material.AIR || m2 === Material.AIR)) {\r\n\r\n\t\t\t\t\t\t\t// The edge exhibits a material change and there is no conflict.\r\n\t\t\t\t\t\t\tedges[c] = indexA0;\r\n\t\t\t\t\t\t\tzeroCrossings[c] = edge0.t;\r\n\t\t\t\t\t\t\tnormals[c * 3] = edge0.n.x;\r\n\t\t\t\t\t\t\tnormals[c * 3 + 1] = edge0.n.y;\r\n\t\t\t\t\t\t\tnormals[c * 3 + 2] = edge0.n.z;\r\n\r\n\t\t\t\t\t\t\t++c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Resolve the conflict.\r\n\t\t\t\t\t\tedge = operation.selectEdge(edge0, edge1, (m1 === Material.SOLID));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++j;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tedges[c] = indexA1;\r\n\t\t\t\tzeroCrossings[c] = edge.t;\r\n\t\t\t\tnormals[c * 3] = edge.n.x;\r\n\t\t\t\tnormals[c * 3 + 1] = edge.n.y;\r\n\t\t\t\tnormals[c * 3 + 2] = edge.n.z;\r\n\r\n\t\t\t\t++c;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Collect remaining edges.\r\n\t\twhile(j < jl) {\r\n\r\n\t\t\tindexA0 = edges0[j];\r\n\t\t\tindexB0 = indexA0 + indexOffsets[d];\r\n\r\n\t\t\tm1 = materialIndices[indexA0];\r\n\t\t\tm2 = materialIndices[indexB0];\r\n\r\n\t\t\tif(m1 !== m2 && (m1 === Material.AIR || m2 === Material.AIR)) {\r\n\r\n\t\t\t\tedges[c] = indexA0;\r\n\t\t\t\tzeroCrossings[c] = zeroCrossings0[j];\r\n\t\t\t\tnormals[c * 3] = normals0[j * 3];\r\n\t\t\t\tnormals[c * 3 + 1] = normals0[j * 3 + 1];\r\n\t\t\t\tnormals[c * 3 + 2] = normals0[j * 3 + 2];\r\n\r\n\t\t\t\t++c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++j;\r\n\r\n\t\t}\r\n\r\n\t\tlengths[d] = c;\r\n\r\n\t}\r\n\r\n\treturn { edgeData, lengths };\r\n\r\n}\r\n\r\n/**\r\n * Generates edge data.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk\r\n * @param {DensityFunction} operation - A CSG operation.\r\n * @param {HermiteData} data - A target data set.\r\n * @param {Box3} bounds - Grid iteration limits.\r\n * @return {Object} The generated edge data.\r\n */\r\n\r\nfunction generateEdges(chunk, operation, data, bounds) {\r\n\r\n\tconst s = chunk.size;\r\n\tconst n = chunk.resolution;\r\n\tconst m = n + 1;\r\n\tconst mm = m * m;\r\n\r\n\tconst indexOffsets = new Uint32Array([1, m, mm]);\r\n\tconst materialIndices = data.materialIndices;\r\n\r\n\tconst base = chunk.min;\r\n\tconst offsetA = new Vector3();\r\n\tconst offsetB = new Vector3();\r\n\tconst edge = new Edge();\r\n\r\n\tconst edgeData = new EdgeData(EdgeData.calculate1DEdgeCount(n));\r\n\tconst lengths = new Uint32Array(3);\r\n\r\n\tlet edges, zeroCrossings, normals;\r\n\tlet indexA, indexB;\r\n\r\n\tlet minX, minY, minZ;\r\n\tlet maxX, maxY, maxZ;\r\n\r\n\tlet c, d, a, axis;\r\n\tlet x, y, z;\r\n\r\n\t// Process the edges along the X-axis, then Y and finally Z.\r\n\tfor(a = 4, c = 0, d = 0; d < 3; a >>= 1, c = 0, ++d) {\r\n\r\n\t\t// X: [1, 0, 0] Y: [0, 1, 0] Z: [0, 0, 1].\r\n\t\taxis = PATTERN[a];\r\n\r\n\t\tedges = edgeData.edges[d];\r\n\t\tzeroCrossings = edgeData.zeroCrossings[d];\r\n\t\tnormals = edgeData.normals[d];\r\n\r\n\t\tminX = bounds.min.x; maxX = bounds.max.x;\r\n\t\tminY = bounds.min.y; maxY = bounds.max.y;\r\n\t\tminZ = bounds.min.z; maxZ = bounds.max.z;\r\n\r\n\t\t/* Include edges that straddle the bounding box and avoid processing grid\r\n\t\tpoints at chunk borders. */\r\n\t\tswitch(d) {\r\n\r\n\t\t\tcase 0:\r\n\t\t\t\tminX = Math.max(minX - 1, 0);\r\n\t\t\t\tmaxX = Math.min(maxX, n - 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t\tminY = Math.max(minY - 1, 0);\r\n\t\t\t\tmaxY = Math.min(maxY, n - 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tminZ = Math.max(minZ - 1, 0);\r\n\t\t\t\tmaxZ = Math.min(maxZ, n - 1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tfor(z = minZ; z <= maxZ; ++z) {\r\n\r\n\t\t\tfor(y = minY; y <= maxY; ++y) {\r\n\r\n\t\t\t\tfor(x = minX; x <= maxX; ++x) {\r\n\r\n\t\t\t\t\tindexA = z * mm + y * m + x;\r\n\t\t\t\t\tindexB = indexA + indexOffsets[d];\r\n\r\n\t\t\t\t\t// Check if the edge exhibits a material change.\r\n\t\t\t\t\tif(materialIndices[indexA] !== materialIndices[indexB]) {\r\n\r\n\t\t\t\t\t\toffsetA.set(\r\n\t\t\t\t\t\t\tx * s / n,\r\n\t\t\t\t\t\t\ty * s / n,\r\n\t\t\t\t\t\t\tz * s / n\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\toffsetB.set(\r\n\t\t\t\t\t\t\t(x + axis[0]) * s / n,\r\n\t\t\t\t\t\t\t(y + axis[1]) * s / n,\r\n\t\t\t\t\t\t\t(z + axis[2]) * s / n\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tedge.a.addVectors(base, offsetA);\r\n\t\t\t\t\t\tedge.b.addVectors(base, offsetB);\r\n\r\n\t\t\t\t\t\t// Create and store the edge data.\r\n\t\t\t\t\t\toperation.generateEdge(edge);\r\n\r\n\t\t\t\t\t\tedges[c] = indexA;\r\n\t\t\t\t\t\tzeroCrossings[c] = edge.t;\r\n\t\t\t\t\t\tnormals[c * 3] = edge.n.x;\r\n\t\t\t\t\t\tnormals[c * 3 + 1] = edge.n.y;\r\n\t\t\t\t\t\tnormals[c * 3 + 2] = edge.n.z;\r\n\r\n\t\t\t\t\t\t++c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlengths[d] = c;\r\n\r\n\t}\r\n\r\n\treturn { edgeData, lengths };\r\n\r\n}\r\n\r\n/**\r\n * Either generates or combines volume data based on the operation type.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk.\r\n * @param {Operation} operation - A CSG operation.\r\n * @param {HermiteData} data0 - A target data set. May be empty or full.\r\n * @param {HermiteData} [data1] - A predominant data set. Cannot be null.\r\n */\r\n\r\nfunction update(chunk, operation, data0, data1) {\r\n\r\n\tconst bounds = computeIndexBounds(chunk, operation);\r\n\r\n\tlet result, edgeData, lengths, d;\r\n\tlet done = false;\r\n\r\n\tif(operation.type === OperationType.DENSITY_FUNCTION) {\r\n\r\n\t\tgenerateMaterialIndices(chunk, operation, data0, bounds);\r\n\r\n\t} else if(data0.empty) {\r\n\r\n\t\tif(operation.type === OperationType.UNION) {\r\n\r\n\t\t\tdata0.set(data1);\r\n\t\t\tdone = true;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif(!(data0.full && operation.type === OperationType.UNION)) {\r\n\r\n\t\t\tcombineMaterialIndices(chunk, operation, data0, data1, bounds);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif(!done && !data0.empty && !data0.full) {\r\n\r\n\t\tresult = (operation.type === OperationType.DENSITY_FUNCTION) ?\r\n\t\t\tgenerateEdges(chunk, operation, data0, bounds) :\r\n\t\t\tcombineEdges(chunk, operation, data0, data1);\r\n\r\n\t\tedgeData = result.edgeData;\r\n\t\tlengths = result.lengths;\r\n\r\n\t\t// Cut off empty data.\r\n\t\tfor(d = 0; d < 3; ++d) {\r\n\r\n\t\t\tedgeData.edges[d] = edgeData.edges[d].slice(0, lengths[d]);\r\n\t\t\tedgeData.zeroCrossings[d] = edgeData.zeroCrossings[d].slice(0, lengths[d]);\r\n\t\t\tedgeData.normals[d] = edgeData.normals[d].slice(0, lengths[d] * 3);\r\n\r\n\t\t}\r\n\r\n\t\tdata0.edgeData = edgeData;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Executes the given operation.\r\n *\r\n * @private\r\n * @param {Chunk} chunk - A volume chunk.\r\n * @param {Operation} operation - An operation.\r\n * @return {HermiteData} The generated data or null if the data is empty.\r\n */\r\n\r\nfunction execute(chunk, operation) {\r\n\r\n\tconst children = operation.children;\r\n\r\n\tlet result, data;\r\n\tlet i, l;\r\n\r\n\tif(operation.type === OperationType.DENSITY_FUNCTION) {\r\n\r\n\t\t// Create a data target.\r\n\t\tresult = new HermiteData();\r\n\r\n\t\t// Use the density function to generate data.\r\n\t\tupdate(chunk, operation, result);\r\n\r\n\t}\r\n\r\n\t// Union, Difference or Intersection.\r\n\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t// Generate the full result of the child operation recursively.\r\n\t\tdata = execute(chunk, children[i]);\r\n\r\n\t\tif(result === undefined) {\r\n\r\n\t\t\tresult = data;\r\n\r\n\t\t} else if(data !== null) {\r\n\r\n\t\t\tif(result === null) {\r\n\r\n\t\t\t\tif(operation.type === OperationType.UNION) {\r\n\r\n\t\t\t\t\t// Build upon the first non-empty data.\r\n\t\t\t\t\tresult = data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Combine the two data sets.\r\n\t\t\t\tupdate(chunk, operation, result, data);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if(operation.type === OperationType.INTERSECTION) {\r\n\r\n\t\t\t// An intersection with nothing results in nothing.\r\n\t\t\tresult = null;\r\n\r\n\t\t}\r\n\r\n\t\tif(result === null && operation.type !== OperationType.UNION) {\r\n\r\n\t\t\t// Further subtractions and intersections would have no effect.\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (result !== null && result.empty) ? null : result;\r\n\r\n}\r\n\r\n/**\r\n * Constructive Solid Geometry combines Signed Distance Functions by using\r\n * Boolean operators to generate and transform volume data.\r\n */\r\n\r\nexport class ConstructiveSolidGeometry {\r\n\r\n\t/**\r\n\t * Transforms the given chunk of hermite data in two steps:\r\n\t *\r\n\t *  1. Generate data by executing the given SDF\r\n\t *  2. Combine the generated data with the chunk data\r\n\t *\r\n\t * @param {Chunk} chunk - The volume chunk that should be modified.\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tstatic run(chunk, sdf) {\r\n\r\n\t\tif(chunk.data === null) {\r\n\r\n\t\t\tif(sdf.operation === OperationType.UNION) {\r\n\r\n\t\t\t\tchunk.data = new HermiteData();\r\n\t\t\t\tchunk.data.edgeData = new EdgeData(0);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunk.data.decompress();\r\n\r\n\t\t}\r\n\r\n\t\t// Step 1.\r\n\t\tlet operation = sdf.toCSG();\r\n\r\n\t\tconst data = (chunk.data !== null) ? execute(chunk, operation) : null;\r\n\r\n\t\tif(data !== null) {\r\n\r\n\t\t\t// Wrap the operation in a super operation.\r\n\t\t\tswitch(sdf.operation) {\r\n\r\n\t\t\t\tcase OperationType.UNION:\r\n\t\t\t\t\toperation = new Union(operation);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase OperationType.DIFFERENCE:\r\n\t\t\t\t\toperation = new Difference(operation);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase OperationType.INTERSECTION:\r\n\t\t\t\t\toperation = new Intersection(operation);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Step 2.\r\n\t\t\tupdate(chunk, operation, chunk.data, data);\r\n\r\n\t\t\t// Provoke a geometry extraction.\r\n\t\t\tchunk.data.lod = -1;\r\n\r\n\t\t}\r\n\r\n\t\tif(chunk.data !== null) {\r\n\r\n\t\t\tif(chunk.data.empty) {\r\n\r\n\t\t\t\tchunk.data = null;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tchunk.data.compress();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 218,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "computeIndexBounds",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~computeIndexBounds",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Finds out which grid points lie inside the area of the given operation.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The index bounds."
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "combineMaterialIndices",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~combineMaterialIndices",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Combines material indices.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk"
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "A target data set."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data1",
        "description": "A predominant data set."
      },
      {
        "nullable": null,
        "types": [
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "bounds",
        "description": "Grid iteration limits."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "generateMaterialIndices",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~generateMaterialIndices",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Generates material indices.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk"
      },
      {
        "nullable": null,
        "types": [
          "DensityFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A target data set."
      },
      {
        "nullable": null,
        "types": [
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "bounds",
        "description": "Grid iteration limits."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "combineEdges",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~combineEdges",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Combines edges.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk"
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "A target data set."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data1",
        "description": "A predominant data set."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The generated edge data."
    },
    "generator": false
  },
  {
    "__docId__": 222,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "generateEdges",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~generateEdges",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Generates edge data.",
    "lineNumber": 346,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk"
      },
      {
        "nullable": null,
        "types": [
          "DensityFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A target data set."
      },
      {
        "nullable": null,
        "types": [
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "bounds",
        "description": "Grid iteration limits."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The generated edge data."
    },
    "generator": false
  },
  {
    "__docId__": 223,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "update",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~update",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Either generates or combines volume data based on the operation type.",
    "lineNumber": 472,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "A CSG operation."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "A target data set. May be empty or full."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": true,
        "name": "data1",
        "description": "A predominant data set. Cannot be null."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 224,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "execute",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~execute",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": null,
    "description": "Executes the given operation.",
    "lineNumber": 535,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "An operation."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HermiteData"
      ],
      "spread": false,
      "description": "The generated data or null if the data is empty."
    },
    "generator": false
  },
  {
    "__docId__": 225,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ConstructiveSolidGeometry",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~ConstructiveSolidGeometry",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/ConstructiveSolidGeometry.js",
    "importStyle": "{ConstructiveSolidGeometry}",
    "description": "Constructive Solid Geometry combines Signed Distance Functions by using\nBoolean operators to generate and transform volume data.",
    "lineNumber": 605,
    "interface": false
  },
  {
    "__docId__": 226,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "run",
    "memberof": "src/volume/csg/ConstructiveSolidGeometry.js~ConstructiveSolidGeometry",
    "longname": "src/volume/csg/ConstructiveSolidGeometry.js~ConstructiveSolidGeometry.run",
    "access": null,
    "description": "Transforms the given chunk of hermite data in two steps:\n\n 1. Generate data by executing the given SDF\n 2. Combine the generated data with the chunk data",
    "lineNumber": 617,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "The volume chunk that should be modified."
      },
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 227,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/DensityFunction.js",
    "memberof": null,
    "longname": "src/volume/csg/DensityFunction.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Material } from \"../Material.js\";\r\nimport { Operation } from \"./Operation.js\";\r\nimport { OperationType } from \"./OperationType.js\";\r\n\r\n/**\r\n * The isovalue.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nconst ISOVALUE = 0.0;\r\n\r\n/**\r\n * An operation that describes a density field.\r\n */\r\n\r\nexport class DensityFunction extends Operation {\r\n\r\n\t/**\r\n\t * Constructs a new density function operation.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t */\r\n\r\n\tconstructor(sdf) {\r\n\r\n\t\tsuper(OperationType.DENSITY_FUNCTION);\r\n\r\n\t\t/**\r\n\t\t * An SDF.\r\n\t\t *\r\n\t\t * @type {SignedDistanceFunction}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.sdf = sdf;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates a bounding box for this operation.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = this.sdf.computeBoundingBox();\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the material index for the given world position.\r\n\t *\r\n\t * @param {Vector3} position - The world position of the material index.\r\n\t * @return {Number} The material index.\r\n\t */\r\n\r\n\tgenerateMaterialIndex(position) {\r\n\r\n\t\treturn (this.sdf.sample(position) <= ISOVALUE) ? this.sdf.material : Material.AIR;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates surface intersection data for the specified edge.\r\n\t *\r\n\t * @param {Edge} edge - The edge that should be processed.\r\n\t */\r\n\r\n\tgenerateEdge(edge) {\r\n\r\n\t\tedge.approximateZeroCrossing(this.sdf);\r\n\t\tedge.computeSurfaceNormal(this.sdf);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ISOVALUE",
    "memberof": "src/volume/csg/DensityFunction.js",
    "longname": "src/volume/csg/DensityFunction.js~ISOVALUE",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/csg/DensityFunction.js",
    "importStyle": null,
    "description": "The isovalue.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DensityFunction",
    "memberof": "src/volume/csg/DensityFunction.js",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/DensityFunction.js",
    "importStyle": "{DensityFunction}",
    "description": "An operation that describes a density field.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/volume/csg/Operation.js~Operation"
    ]
  },
  {
    "__docId__": 230,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#constructor",
    "access": null,
    "description": "Constructs a new density function operation.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 231,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sdf",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#sdf",
    "access": "private",
    "description": "An SDF.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#computeBoundingBox",
    "access": null,
    "description": "Calculates a bounding box for this operation.",
    "lineNumber": 47,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 233,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#bbox",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateMaterialIndex",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#generateMaterialIndex",
    "access": null,
    "description": "Calculates the material index for the given world position.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The world position of the material index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The material index."
    },
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateEdge",
    "memberof": "src/volume/csg/DensityFunction.js~DensityFunction",
    "longname": "src/volume/csg/DensityFunction.js~DensityFunction#generateEdge",
    "access": null,
    "description": "Generates surface intersection data for the specified edge.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge",
        "description": "The edge that should be processed."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 236,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/Difference.js",
    "memberof": null,
    "longname": "src/volume/csg/Difference.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Material } from \"../Material.js\";\r\nimport { Operation } from \"./Operation.js\";\r\nimport { OperationType } from \"./OperationType.js\";\r\n\r\n/**\r\n * A difference operation.\r\n */\r\n\r\nexport class Difference extends Operation {\r\n\r\n\t/**\r\n\t * Constructs a new difference operation.\r\n\t *\r\n\t * @param {Operation} ...children - Child operations.\r\n\t */\r\n\r\n\tconstructor(...children) {\r\n\r\n\t\tsuper(OperationType.DIFFERENCE, ...children);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the specified material index.\r\n\t *\r\n\t * @param {Number} index - The index of the material index that needs to be updated.\r\n\t * @param {HermiteData} data0 - The target volume data.\r\n\t * @param {HermiteData} data1 - Predominant volume data.\r\n\t */\r\n\r\n\tupdateMaterialIndex(index, data0, data1) {\r\n\r\n\t\tif(data1.materialIndices[index] !== Material.AIR) {\r\n\r\n\t\t\tdata0.setMaterialIndex(index, Material.AIR);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Selects the edge that is closer to the solid grid point.\r\n\t *\r\n\t * @param {Edge} edge0 - An existing edge.\r\n\t * @param {Edge} edge1 - A predominant edge.\r\n\t * @param {Boolean} s - Whether the starting point of the edge is solid.\r\n\t * @return {Edge} The selected edge.\r\n\t */\r\n\r\n\tselectEdge(edge0, edge1, s) {\r\n\r\n\t\treturn s ?\r\n\t\t\t((edge0.t < edge1.t) ? edge0 : edge1) :\r\n\t\t\t((edge0.t > edge1.t) ? edge0 : edge1);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 237,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Difference",
    "memberof": "src/volume/csg/Difference.js",
    "longname": "src/volume/csg/Difference.js~Difference",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/Difference.js",
    "importStyle": "{Difference}",
    "description": "A difference operation.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/csg/Operation.js~Operation"
    ]
  },
  {
    "__docId__": 238,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/csg/Difference.js~Difference",
    "longname": "src/volume/csg/Difference.js~Difference#constructor",
    "access": null,
    "description": "Constructs a new difference operation.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "...children",
        "description": "Child operations."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateMaterialIndex",
    "memberof": "src/volume/csg/Difference.js~Difference",
    "longname": "src/volume/csg/Difference.js~Difference#updateMaterialIndex",
    "access": null,
    "description": "Updates the specified material index.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the material index that needs to be updated."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "The target volume data."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data1",
        "description": "Predominant volume data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectEdge",
    "memberof": "src/volume/csg/Difference.js~Difference",
    "longname": "src/volume/csg/Difference.js~Difference#selectEdge",
    "access": null,
    "description": "Selects the edge that is closer to the solid grid point.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge0",
        "description": "An existing edge."
      },
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge1",
        "description": "A predominant edge."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "Whether the starting point of the edge is solid."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Edge"
      ],
      "spread": false,
      "description": "The selected edge."
    },
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/index.js",
    "memberof": null,
    "longname": "src/volume/csg/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * A collection of Constructive Solid Geometry components.\r\n *\r\n * @module rabbit-hole/volume/csg\r\n */\r\n\r\nexport { ConstructiveSolidGeometry } from \"./ConstructiveSolidGeometry.js\";\r\nexport { DensityFunction } from \"./DensityFunction.js\";\r\nexport { Difference } from \"./Difference.js\";\r\nexport { Intersection } from \"./Intersection.js\";\r\nexport { Operation } from \"./Operation.js\";\r\nexport { OperationType } from \"./OperationType.js\";\r\nexport { Union } from \"./Union.js\";\r\n"
  },
  {
    "__docId__": 242,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/Intersection.js",
    "memberof": null,
    "longname": "src/volume/csg/Intersection.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Material } from \"../Material.js\";\r\nimport { Operation } from \"./Operation.js\";\r\nimport { OperationType } from \"./OperationType.js\";\r\n\r\n/**\r\n * An intersection operation.\r\n */\r\n\r\nexport class Intersection extends Operation {\r\n\r\n\t/**\r\n\t * Constructs a new intersection operation.\r\n\t *\r\n\t * @param {...Operation} children - Child operations.\r\n\t */\r\n\r\n\tconstructor(...children) {\r\n\r\n\t\tsuper(OperationType.INTERSECTION, ...children);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the specified material index.\r\n\t *\r\n\t * @param {Number} index - The index of the material index that needs to be updated.\r\n\t * @param {HermiteData} data0 - The target volume data.\r\n\t * @param {HermiteData} data1 - Predominant volume data.\r\n\t */\r\n\r\n\tupdateMaterialIndex(index, data0, data1) {\r\n\r\n\t\tconst materialIndex = data1.materialIndices[index];\r\n\r\n\t\tdata0.setMaterialIndex(index, (data0.materialIndices[index] !== Material.AIR && materialIndex !== Material.AIR) ? materialIndex : Material.AIR);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Selects the edge that is closer to the solid grid point.\r\n\t *\r\n\t * @param {Edge} edge0 - An existing edge.\r\n\t * @param {Edge} edge1 - A predominant edge.\r\n\t * @param {Boolean} s - Whether the starting point of the edge is solid.\r\n\t * @return {Edge} The selected edge.\r\n\t */\r\n\r\n\tselectEdge(edge0, edge1, s) {\r\n\r\n\t\treturn s ?\r\n\t\t\t((edge0.t < edge1.t) ? edge0 : edge1) :\r\n\t\t\t((edge0.t > edge1.t) ? edge0 : edge1);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 243,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Intersection",
    "memberof": "src/volume/csg/Intersection.js",
    "longname": "src/volume/csg/Intersection.js~Intersection",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/Intersection.js",
    "importStyle": "{Intersection}",
    "description": "An intersection operation.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/csg/Operation.js~Operation"
    ]
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/csg/Intersection.js~Intersection",
    "longname": "src/volume/csg/Intersection.js~Intersection#constructor",
    "access": null,
    "description": "Constructs a new intersection operation.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Operation"
        ],
        "spread": true,
        "optional": false,
        "name": "children",
        "description": "Child operations."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateMaterialIndex",
    "memberof": "src/volume/csg/Intersection.js~Intersection",
    "longname": "src/volume/csg/Intersection.js~Intersection#updateMaterialIndex",
    "access": null,
    "description": "Updates the specified material index.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the material index that needs to be updated."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "The target volume data."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data1",
        "description": "Predominant volume data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 246,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectEdge",
    "memberof": "src/volume/csg/Intersection.js~Intersection",
    "longname": "src/volume/csg/Intersection.js~Intersection#selectEdge",
    "access": null,
    "description": "Selects the edge that is closer to the solid grid point.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge0",
        "description": "An existing edge."
      },
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge1",
        "description": "A predominant edge."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "Whether the starting point of the edge is solid."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Edge"
      ],
      "spread": false,
      "description": "The selected edge."
    },
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/Operation.js",
    "memberof": null,
    "longname": "src/volume/csg/Operation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3 } from \"math-ds\";\r\n\r\n/**\r\n * A CSG operation.\r\n */\r\n\r\nexport class Operation {\r\n\r\n\t/**\r\n\t * Constructs a new operation.\r\n\t *\r\n\t * @param {OperationType} type - The type of this operation.\r\n\t * @param {Operation} ...children - Child operations.\r\n\t */\r\n\r\n\tconstructor(type, ...children) {\r\n\r\n\t\t/**\r\n\t\t * The type of this operation.\r\n\t\t *\r\n\t\t * @type {OperationType}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.type = type;\r\n\r\n\t\t/**\r\n\t\t * A list of operations.\r\n\t\t *\r\n\t\t * Right-hand side operands have precedence, meaning that the result of the\r\n\t\t * first item in the list will be dominated by the result of the second one,\r\n\t\t * etc.\r\n\t\t *\r\n\t\t * @type {Operation[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.children = children;\r\n\r\n\t\t/**\r\n\t\t * The bounding box of this operation.\r\n\t\t *\r\n\t\t * @type {Box3}\r\n\t\t * @private\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.bbox = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The bounding box of this operation.\r\n\t *\r\n\t * @type {Box3}\r\n\t */\r\n\r\n\tget boundingBox() {\r\n\r\n\t\treturn (this.bbox !== null) ? this.bbox : this.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this operation.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tthis.bbox.union(children[i].boundingBox);\r\n\r\n\t\t}\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 248,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Operation",
    "memberof": "src/volume/csg/Operation.js",
    "longname": "src/volume/csg/Operation.js~Operation",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/Operation.js",
    "importStyle": "{Operation}",
    "description": "A CSG operation.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 249,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#constructor",
    "access": null,
    "description": "Constructs a new operation.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "OperationType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of this operation."
      },
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "...children",
        "description": "Child operations."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 250,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#type",
    "access": null,
    "description": "The type of this operation.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "OperationType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "children",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#children",
    "access": "private",
    "description": "A list of operations.\n\nRight-hand side operands have precedence, meaning that the result of the\nfirst item in the list will be dominated by the result of the second one,\netc.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Operation[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#bbox",
    "access": "private",
    "description": "The bounding box of this operation.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 253,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "boundingBox",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#boundingBox",
    "access": null,
    "description": "The bounding box of this operation.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 254,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this operation.",
    "lineNumber": 70,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 255,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/csg/Operation.js~Operation",
    "longname": "src/volume/csg/Operation.js~Operation#bbox",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/OperationType.js",
    "memberof": null,
    "longname": "src/volume/csg/OperationType.js",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "content": "/**\r\n * An enumeration of CSG operation types.\r\n *\r\n * @type {Object}\r\n * @property {String} UNION - Indicates a union of volume data.\r\n * @property {String} DIFFERENCE - Indicates a subtraction of volume data.\r\n * @property {String} INTERSECTION - Indicates an intersection of volume data.\r\n * @property {String} DENSITY_FUNCTION - Indicates volume data generation.\r\n */\r\n\r\nexport const OperationType = {\r\n\r\n\tUNION: \"csg.union\",\r\n\tDIFFERENCE: \"csg.difference\",\r\n\tINTERSECTION: \"csg.intersection\",\r\n\tDENSITY_FUNCTION: \"csg.densityfunction\"\r\n\r\n};\r\n"
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "OperationType",
    "memberof": "src/volume/csg/OperationType.js",
    "longname": "src/volume/csg/OperationType.js~OperationType",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/OperationType.js",
    "importStyle": "{OperationType}",
    "description": "An enumeration of CSG operation types.",
    "lineNumber": 11,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "UNION",
        "description": "Indicates a union of volume data."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "DIFFERENCE",
        "description": "Indicates a subtraction of volume data."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "INTERSECTION",
        "description": "Indicates an intersection of volume data."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "DENSITY_FUNCTION",
        "description": "Indicates volume data generation."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/csg/Union.js",
    "memberof": null,
    "longname": "src/volume/csg/Union.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Material } from \"../Material.js\";\r\nimport { Operation } from \"./Operation.js\";\r\nimport { OperationType } from \"./OperationType.js\";\r\n\r\n/**\r\n * A union operation.\r\n *\r\n * @class Union\r\n * @submodule csg\r\n * @extends Operation\r\n * @constructor\r\n * @param {Operation} ...children - Child operations.\r\n */\r\n\r\nexport class Union extends Operation {\r\n\r\n\t/**\r\n\t * Constructs a new union operation.\r\n\t *\r\n\t * @param {...Operation} children - Child operations.\r\n\t */\r\n\r\n\tconstructor(...children) {\r\n\r\n\t\tsuper(OperationType.UNION, ...children);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the specified material index.\r\n\t *\r\n\t * @param {Number} index - The index of the material index that needs to be updated.\r\n\t * @param {HermiteData} data0 - The target volume data.\r\n\t * @param {HermiteData} data1 - Predominant volume data.\r\n\t */\r\n\r\n\tupdateMaterialIndex(index, data0, data1) {\r\n\r\n\t\tconst materialIndex = data1.materialIndices[index];\r\n\r\n\t\tif(materialIndex !== Material.AIR) {\r\n\r\n\t\t\tdata0.setMaterialIndex(index, materialIndex);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Selects the edge that is closer to the non-solid grid point.\r\n\t *\r\n\t * @param {Edge} edge0 - An existing edge.\r\n\t * @param {Edge} edge1 - A predominant edge.\r\n\t * @param {Boolean} s - Whether the starting point of the edge is solid.\r\n\t * @return {Edge} The selected edge.\r\n\t */\r\n\r\n\tselectEdge(edge0, edge1, s) {\r\n\r\n\t\treturn s ?\r\n\t\t\t((edge0.t > edge1.t) ? edge0 : edge1) :\r\n\t\t\t((edge0.t < edge1.t) ? edge0 : edge1);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 259,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Union",
    "memberof": "src/volume/csg/Union.js",
    "longname": "src/volume/csg/Union.js~Union",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/csg/Union.js",
    "importStyle": "{Union}",
    "description": "A union operation.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Union"
      },
      {
        "tagName": "@submodule",
        "tagValue": "csg"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Operation"
        ],
        "spread": false,
        "optional": false,
        "name": "...children",
        "description": "Child operations."
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/csg/Union.js~Union",
    "longname": "src/volume/csg/Union.js~Union#constructor",
    "access": null,
    "description": "Constructs a new union operation.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Operation"
        ],
        "spread": true,
        "optional": false,
        "name": "children",
        "description": "Child operations."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateMaterialIndex",
    "memberof": "src/volume/csg/Union.js~Union",
    "longname": "src/volume/csg/Union.js~Union#updateMaterialIndex",
    "access": null,
    "description": "Updates the specified material index.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the material index that needs to be updated."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data0",
        "description": "The target volume data."
      },
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data1",
        "description": "Predominant volume data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 262,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectEdge",
    "memberof": "src/volume/csg/Union.js~Union",
    "longname": "src/volume/csg/Union.js~Union#selectEdge",
    "access": null,
    "description": "Selects the edge that is closer to the non-solid grid point.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge0",
        "description": "An existing edge."
      },
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge1",
        "description": "A predominant edge."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "Whether the starting point of the edge is solid."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Edge"
      ],
      "spread": false,
      "description": "The selected edge."
    },
    "generator": false
  },
  {
    "__docId__": 263,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/Edge.js",
    "memberof": null,
    "longname": "src/volume/Edge.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Vector3 } from \"math-ds\";\r\n\r\n/**\r\n * An isovalue bias for the Zero Crossing approximation.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nconst BIAS = 1e-2;\r\n\r\n/**\r\n * An error threshold for the Zero Crossing approximation.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nconst THRESHOLD = 1e-6;\r\n\r\n/**\r\n * A vector.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst ab = new Vector3();\r\n\r\n/**\r\n * A point.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst p = new Vector3();\r\n\r\n/**\r\n * A vector.\r\n *\r\n * @type {Vector3}\r\n * @private\r\n */\r\n\r\nconst v = new Vector3();\r\n\r\n/**\r\n * An edge.\r\n */\r\n\r\nexport class Edge {\r\n\r\n\t/**\r\n\t * Constructs a new edge.\r\n\t *\r\n\t * @param {Vector3} a - A starting point.\r\n\t * @param {Vector3} b - An ending point.\r\n\t */\r\n\r\n\tconstructor(a = new Vector3(), b = new Vector3()) {\r\n\r\n\t\t/**\r\n\t\t * The starting point of the edge.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.a = a;\r\n\r\n\t\t/**\r\n\t\t * The ending point of the edge.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.b = b;\r\n\r\n\t\t/**\r\n\t\t * The Zero Crossing interpolation value.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.t = 0.0;\r\n\r\n\t\t/**\r\n\t\t * The surface normal at the Zero Crossing position.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.n = new Vector3();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Approximates the smallest density along the edge.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - A density field.\r\n\t * @param {Number} [steps=8] - The maximum number of interpolation steps. Cannot be smaller than 2.\r\n\t */\r\n\r\n\tapproximateZeroCrossing(sdf, steps = 8) {\r\n\r\n\t\tconst s = Math.max(1, steps - 1);\r\n\r\n\t\tlet a = 0.0;\r\n\t\tlet b = 1.0;\r\n\t\tlet c = 0.0;\r\n\t\tlet i = 0;\r\n\r\n\t\tlet densityA, densityC;\r\n\r\n\t\t// Compute the vector from a to b.\r\n\t\tab.subVectors(this.b, this.a);\r\n\r\n\t\t// Use bisection to find the root of the SDF.\r\n\t\twhile(i <= s) {\r\n\r\n\t\t\tc = (a + b) / 2;\r\n\r\n\t\t\tp.addVectors(this.a, v.copy(ab).multiplyScalar(c));\r\n\t\t\tdensityC = sdf.sample(p);\r\n\r\n\t\t\tif(Math.abs(densityC) <= BIAS || (b - a) / 2 <= THRESHOLD) {\r\n\r\n\t\t\t\t// Solution found.\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp.addVectors(this.a, v.copy(ab).multiplyScalar(a));\r\n\t\t\t\tdensityA = sdf.sample(p);\r\n\r\n\t\t\t\tif(Math.sign(densityC) === Math.sign(densityA)) {\r\n\r\n\t\t\t\t\ta = c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tb = c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++i;\r\n\r\n\t\t}\r\n\r\n\t\tthis.t = c;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the Zero Crossing position.\r\n\t *\r\n\t * @return {Vector3} The Zero Crossing position. The returned vector is volatile.\r\n\t */\r\n\r\n\tcomputeZeroCrossingPosition() {\r\n\r\n\t\treturn ab.subVectors(this.b, this.a).multiplyScalar(this.t).add(this.a);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the normal of the surface at the edge intersection.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - A density field.\r\n\t * @return {Vector3} The normal.\r\n\t * @todo Use analytical derivation instead of finite differences.\r\n\t */\r\n\r\n\tcomputeSurfaceNormal(sdf) {\r\n\r\n\t\tconst position = this.computeZeroCrossingPosition();\r\n\t\tconst E = 1e-3;\r\n\r\n\t\tconst dx = sdf.sample(p.addVectors(position, v.set(E, 0, 0))) - sdf.sample(p.subVectors(position, v.set(E, 0, 0)));\r\n\t\tconst dy = sdf.sample(p.addVectors(position, v.set(0, E, 0))) - sdf.sample(p.subVectors(position, v.set(0, E, 0)));\r\n\t\tconst dz = sdf.sample(p.addVectors(position, v.set(0, 0, E))) - sdf.sample(p.subVectors(position, v.set(0, 0, E)));\r\n\r\n\t\tthis.n.set(dx, dy, dz).normalize();\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "BIAS",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~BIAS",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": null,
    "description": "An isovalue bias for the Zero Crossing approximation.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "THRESHOLD",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~THRESHOLD",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": null,
    "description": "An error threshold for the Zero Crossing approximation.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 266,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ab",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~ab",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "p",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~p",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": null,
    "description": "A point.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "v",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~v",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Edge",
    "memberof": "src/volume/Edge.js",
    "longname": "src/volume/Edge.js~Edge",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/Edge.js",
    "importStyle": "{Edge}",
    "description": "An edge.",
    "lineNumber": 52,
    "interface": false
  },
  {
    "__docId__": 270,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#constructor",
    "access": null,
    "description": "Constructs a new edge.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "A starting point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "An ending point."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 271,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "a",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#a",
    "access": null,
    "description": "The starting point of the edge.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "b",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#b",
    "access": null,
    "description": "The ending point of the edge.",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "t",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#t",
    "access": null,
    "description": "The Zero Crossing interpolation value.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "n",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#n",
    "access": null,
    "description": "The surface normal at the Zero Crossing position.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "approximateZeroCrossing",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#approximateZeroCrossing",
    "access": null,
    "description": "Approximates the smallest density along the edge.",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "A density field."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "8",
        "defaultRaw": 8,
        "name": "steps",
        "description": "The maximum number of interpolation steps. Cannot be smaller than 2."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "t",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#t",
    "access": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeZeroCrossingPosition",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#computeZeroCrossingPosition",
    "access": null,
    "description": "Calculates the Zero Crossing position.",
    "lineNumber": 162,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The Zero Crossing position. The returned vector is volatile."
    },
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeSurfaceNormal",
    "memberof": "src/volume/Edge.js~Edge",
    "longname": "src/volume/Edge.js~Edge#computeSurfaceNormal",
    "access": null,
    "description": "Computes the normal of the surface at the edge intersection.",
    "lineNumber": 176,
    "todo": [
      "Use analytical derivation instead of finite differences."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "A density field."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "The normal."
    },
    "generator": false
  },
  {
    "__docId__": 279,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/EdgeData.js",
    "memberof": null,
    "longname": "src/volume/EdgeData.js",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "content": "/**\r\n * Stores edge data separately for each dimension.\r\n *\r\n * With a grid resolution N, there are `3 * (N + 1)² * N` edges in total, but\r\n * the number of edges that actually contain the volume's surface is usually\r\n * much lower.\r\n */\r\n\r\nexport class EdgeData {\r\n\r\n\t/**\r\n\t * Constructs new edge data.\r\n\t *\r\n\t * @param {Number} x - The amount of edges along the X-axis.\r\n\t * @param {Number} [y=x] - The amount of edges along the Y-axis. If omitted, this will be the same as x.\r\n\t * @param {Number} [z=x] - The amount of edges along the Z-axis. If omitted, this will be the same as x.\r\n\t */\r\n\r\n\tconstructor(x, y = x, z = x) {\r\n\r\n\t\t/**\r\n\t\t * The edges.\r\n\t\t *\r\n\t\t * Edges are stored as starting grid point indices in ascending order. The\r\n\t\t * ending point indices are implicitly defined through the dimension split:\r\n\t\t *\r\n\t\t * Given a starting point index A, the ending point index B for the X-, Y-\r\n\t\t * and Z-axis is defined as `A + 1`, `A + N` and `A + N²` respectively where\r\n\t\t * N is the grid resolution + 1.\r\n\t\t *\r\n\t\t * @type {Uint32Array[]}\r\n\t\t */\r\n\r\n\t\tthis.edges = [\r\n\t\t\tnew Uint32Array(x),\r\n\t\t\tnew Uint32Array(y),\r\n\t\t\tnew Uint32Array(z)\r\n\t\t];\r\n\r\n\t\t/**\r\n\t\t * The Zero Crossing interpolation values.\r\n\t\t *\r\n\t\t * Each value describes the relative surface intersection position on the\r\n\t\t * respective edge. The values correspond to the order of the edges.\r\n\t\t *\r\n\t\t * @type {Float32Array[]}\r\n\t\t */\r\n\r\n\t\tthis.zeroCrossings = [\r\n\t\t\tnew Float32Array(x),\r\n\t\t\tnew Float32Array(y),\r\n\t\t\tnew Float32Array(z)\r\n\t\t];\r\n\r\n\t\t/**\r\n\t\t * The surface intersection normals.\r\n\t\t *\r\n\t\t * The vectors are stored as [x, y, z] float triples and correspond to the\r\n\t\t * order of the edges.\r\n\t\t *\r\n\t\t * @type {Float32Array[]}\r\n\t\t */\r\n\r\n\t\tthis.normals = [\r\n\t\t\tnew Float32Array(x * 3),\r\n\t\t\tnew Float32Array(y * 3),\r\n\t\t\tnew Float32Array(z * 3)\r\n\t\t];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a list of transferable items.\r\n\t *\r\n\t * @param {Array} [transferList] - An existing list to be filled with transferable items.\r\n\t * @return {Array} A transfer list.\r\n\t */\r\n\r\n\tcreateTransferList(transferList = []) {\r\n\r\n\t\tconst arrays = [\r\n\r\n\t\t\tthis.edges[0],\r\n\t\t\tthis.edges[1],\r\n\t\t\tthis.edges[2],\r\n\r\n\t\t\tthis.zeroCrossings[0],\r\n\t\t\tthis.zeroCrossings[1],\r\n\t\t\tthis.zeroCrossings[2],\r\n\r\n\t\t\tthis.normals[0],\r\n\t\t\tthis.normals[1],\r\n\t\t\tthis.normals[2]\r\n\r\n\t\t];\r\n\r\n\t\tlet array;\r\n\r\n\t\twhile(arrays.length > 0) {\r\n\r\n\t\t\tarray = arrays.pop();\r\n\r\n\t\t\tif(array !== null) {\r\n\r\n\t\t\t\ttransferList.push(array.buffer);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn transferList;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this data.\r\n\t *\r\n\t * @return {Object} The serialised version of the data.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\treturn {\r\n\t\t\tedges: this.edges,\r\n\t\t\tzeroCrossings: this.zeroCrossings,\r\n\t\t\tnormals: this.normals\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adopts the given serialised data.\r\n\t *\r\n\t * @param {Object} object - Serialised edge data.\r\n\t */\r\n\r\n\tdeserialise(object) {\r\n\r\n\t\tthis.edges = object.edges;\r\n\t\tthis.zeroCrossings = object.zeroCrossings;\r\n\t\tthis.normals = object.normals;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the amount of edges for one axis based on a given resolution.\r\n\t *\r\n\t * @param {Number} The grid resolution.\r\n\t * @return {Number} The amount of edges for a single dimension.\r\n\t */\r\n\r\n\tstatic calculate1DEdgeCount(n) {\r\n\r\n\t\treturn Math.pow((n + 1), 2) * n;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 280,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EdgeData",
    "memberof": "src/volume/EdgeData.js",
    "longname": "src/volume/EdgeData.js~EdgeData",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/EdgeData.js",
    "importStyle": "{EdgeData}",
    "description": "Stores edge data separately for each dimension.\n\nWith a grid resolution N, there are `3 * (N + 1)² * N` edges in total, but\nthe number of edges that actually contain the volume's surface is usually\nmuch lower.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 281,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#constructor",
    "access": null,
    "description": "Constructs new edge data.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The amount of edges along the X-axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "x",
        "defaultRaw": "x",
        "name": "y",
        "description": "The amount of edges along the Y-axis. If omitted, this will be the same as x."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "x",
        "defaultRaw": "x",
        "name": "z",
        "description": "The amount of edges along the Z-axis. If omitted, this will be the same as x."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 282,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edges",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#edges",
    "access": null,
    "description": "The edges.\n\nEdges are stored as starting grid point indices in ascending order. The\nending point indices are implicitly defined through the dimension split:\n\nGiven a starting point index A, the ending point index B for the X-, Y-\nand Z-axis is defined as `A + 1`, `A + N` and `A + N²` respectively where\nN is the grid resolution + 1.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Uint32Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 283,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "zeroCrossings",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#zeroCrossings",
    "access": null,
    "description": "The Zero Crossing interpolation values.\n\nEach value describes the relative surface intersection position on the\nrespective edge. The values correspond to the order of the edges.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Float32Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 284,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "normals",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#normals",
    "access": null,
    "description": "The surface intersection normals.\n\nThe vectors are stored as [x, y, z] float triples and correspond to the\norder of the edges.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Float32Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTransferList",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#createTransferList",
    "access": null,
    "description": "Creates a list of transferable items.",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "transferList",
        "description": "An existing list to be filled with transferable items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "A transfer list."
    },
    "generator": false
  },
  {
    "__docId__": 286,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#serialise",
    "access": null,
    "description": "Serialises this data.",
    "lineNumber": 121,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The serialised version of the data."
    },
    "generator": false
  },
  {
    "__docId__": 287,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deserialise",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#deserialise",
    "access": null,
    "description": "Adopts the given serialised data.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "Serialised edge data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 288,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edges",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#edges",
    "access": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "zeroCrossings",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#zeroCrossings",
    "access": null,
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "normals",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData#normals",
    "access": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "calculate1DEdgeCount",
    "memberof": "src/volume/EdgeData.js~EdgeData",
    "longname": "src/volume/EdgeData.js~EdgeData.calculate1DEdgeCount",
    "access": null,
    "description": "Calculates the amount of edges for one axis based on a given resolution.",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "The",
        "description": "grid resolution."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of edges for a single dimension."
    },
    "generator": false
  },
  {
    "__docId__": 292,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/HermiteData.js",
    "memberof": null,
    "longname": "src/volume/HermiteData.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { RunLengthEncoder } from \"../core/RunLengthEncoder.js\";\r\nimport { Material } from \"./Material.js\";\r\nimport { EdgeData } from \"./EdgeData.js\";\r\n\r\n/**\r\n * The material grid resolution.\r\n *\r\n * @type {Number}\r\n * @private\r\n * @default 0\r\n */\r\n\r\nlet resolution = 0;\r\n\r\n/**\r\n * The total amount of grid point indices.\r\n *\r\n * @type {Number}\r\n * @private\r\n * @default 0\r\n */\r\n\r\nlet indexCount = 0;\r\n\r\n/**\r\n * Hermite data.\r\n */\r\n\r\nexport class HermiteData {\r\n\r\n\t/**\r\n\t * Constructs a new set of hermite data.\r\n\t *\r\n\t * @param {Boolean} [initialise=true] - Whether the data should be initialised immediately.\r\n\t */\r\n\r\n\tconstructor(initialise = true) {\r\n\r\n\t\t/**\r\n\t\t * The current level of detail.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default -1\r\n\t\t */\r\n\r\n\t\tthis.lod = -1;\r\n\r\n\t\t/**\r\n\t\t * Indicates whether this data is currently gone.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\r\n\t\tthis.neutered = false;\r\n\r\n\t\t/**\r\n\t\t * Describes how many material indices are currently solid:\r\n\t\t *\r\n\t\t * - The chunk lies outside the volume if there are no solid grid points.\r\n\t\t * - The chunk lies completely inside the volume if all points are solid.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t */\r\n\r\n\t\tthis.materials = 0;\r\n\r\n\t\t/**\r\n\t\t * The grid points.\r\n\t\t *\r\n\t\t * @type {Uint8Array}\r\n\t\t */\r\n\r\n\t\tthis.materialIndices = initialise ? new Uint8Array(indexCount) : null;\r\n\r\n\t\t/**\r\n\t\t * Run-length compression data.\r\n\t\t *\r\n\t\t * @type {Uint32Array}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.runLengths = null;\r\n\r\n\t\t/**\r\n\t\t * The edge data.\r\n\t\t *\r\n\t\t * @type {EdgeData}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.edgeData = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether this data container is empty.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\r\n\tget empty() { return (this.materials === 0); }\r\n\r\n\t/**\r\n\t * Indicates whether this data container is full.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\r\n\tget full() { return (this.materials === indexCount); }\r\n\r\n\t/**\r\n\t * Adopts the given data.\r\n\t *\r\n\t * @param {HermiteData} data - The data to adopt.\r\n\t * @return {HermiteData} This data.\r\n\t */\r\n\r\n\tset(data) {\r\n\r\n\t\tthis.lod = data.lod;\r\n\t\tthis.neutered = data.neutered;\r\n\t\tthis.materials = data.materials;\r\n\t\tthis.materialIndices = data.materialIndices;\r\n\t\tthis.runLengths = data.runLengths;\r\n\t\tthis.edgeData = data.edgeData;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the specified material index.\r\n\t *\r\n\t * @param {Number} index - The index of the material index that should be updated.\r\n\t * @param {Number} value - The new material index.\r\n\t */\r\n\r\n\tsetMaterialIndex(index, value) {\r\n\r\n\t\t// Keep track of how many material indices are solid.\r\n\t\tif(this.materialIndices[index] === Material.AIR) {\r\n\r\n\t\t\tif(value !== Material.AIR) {\r\n\r\n\t\t\t\t++this.materials;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if(value === Material.AIR) {\r\n\r\n\t\t\t--this.materials;\r\n\r\n\t\t}\r\n\r\n\t\tthis.materialIndices[index] = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Compresses this data.\r\n\t *\r\n\t * @return {HermiteData} This data.\r\n\t */\r\n\r\n\tcompress() {\r\n\r\n\t\tlet encoding;\r\n\r\n\t\tif(this.runLengths === null) {\r\n\r\n\t\t\t// Note: empty sets will never be compressed. They are not worth keeping.\r\n\t\t\tif(this.full) {\r\n\r\n\t\t\t\tencoding = {\r\n\t\t\t\t\trunLengths: [this.materialIndices.length],\r\n\t\t\t\t\tdata: [Material.SOLID]\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tencoding = RunLengthEncoder.encode(this.materialIndices);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.runLengths = new Uint32Array(encoding.runLengths);\r\n\t\t\tthis.materialIndices = new Uint8Array(encoding.data);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decompresses this data.\r\n\t *\r\n\t * @return {HermiteData} This data.\r\n\t */\r\n\r\n\tdecompress() {\r\n\r\n\t\tif(this.runLengths !== null) {\r\n\r\n\t\t\tthis.materialIndices = RunLengthEncoder.decode(\r\n\t\t\t\tthis.runLengths, this.materialIndices, new Uint8Array(indexCount)\r\n\t\t\t);\r\n\r\n\t\t\tthis.runLengths = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a list of transferable items.\r\n\t *\r\n\t * @param {Array} [transferList] - An existing list to be filled with transferable items.\r\n\t * @return {Array} A transfer list.\r\n\t */\r\n\r\n\tcreateTransferList(transferList = []) {\r\n\r\n\t\tif(this.edgeData !== null) { this.edgeData.createTransferList(transferList); }\r\n\r\n\t\ttransferList.push(this.materialIndices.buffer);\r\n\t\ttransferList.push(this.runLengths.buffer);\r\n\r\n\t\treturn transferList;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this data.\r\n\t *\r\n\t * @return {Object} The serialised version of the data.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tthis.neutered = true;\r\n\r\n\t\treturn {\r\n\t\t\tlod: this.lod,\r\n\t\t\tmaterials: this.materials,\r\n\t\t\tmaterialIndices: this.materialIndices,\r\n\t\t\trunLengths: this.runLengths,\r\n\t\t\tedgeData: (this.edgeData !== null) ? this.edgeData.serialise() : null\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adopts the given serialised data.\r\n\t *\r\n\t * @param {Object} object - Serialised hermite data.\r\n\t */\r\n\r\n\tdeserialise(object) {\r\n\r\n\t\tthis.lod = object.lod;\r\n\t\tthis.materials = object.materials;\r\n\r\n\t\tthis.materialIndices = object.materialIndices;\r\n\t\tthis.runLengths = object.runLengths;\r\n\r\n\t\tif(object.edgeData !== null) {\r\n\r\n\t\t\tif(this.edgeData === null) {\r\n\r\n\t\t\t\tthis.edgeData = new EdgeData(0);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.edgeData.deserialise(object.edgeData);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.edgeData = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.neutered = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The material grid resolution.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tstatic get resolution() { return resolution; }\r\n\r\n\t/**\r\n\t * This value can only be set once.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tstatic set resolution(x) {\r\n\r\n\t\tif(resolution === 0) {\r\n\r\n\t\t\tresolution = Math.max(1, Math.min(256, x));\r\n\t\t\tindexCount = Math.pow((resolution + 1), 3);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/HermiteData.js",
    "longname": "src/volume/HermiteData.js~resolution",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/HermiteData.js",
    "importStyle": null,
    "description": "The material grid resolution.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "indexCount",
    "memberof": "src/volume/HermiteData.js",
    "longname": "src/volume/HermiteData.js~indexCount",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/HermiteData.js",
    "importStyle": null,
    "description": "The total amount of grid point indices.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HermiteData",
    "memberof": "src/volume/HermiteData.js",
    "longname": "src/volume/HermiteData.js~HermiteData",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/HermiteData.js",
    "importStyle": "{HermiteData}",
    "description": "Hermite data.",
    "lineNumber": 29,
    "interface": false
  },
  {
    "__docId__": 296,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#constructor",
    "access": null,
    "description": "Constructs a new set of hermite data.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "initialise",
        "description": "Whether the data should be initialised immediately."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 297,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lod",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#lod",
    "access": null,
    "description": "The current level of detail.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 298,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#neutered",
    "access": null,
    "description": "Indicates whether this data is currently gone.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 299,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materials",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materials",
    "access": null,
    "description": "Describes how many material indices are currently solid:\n\n- The chunk lies outside the volume if there are no solid grid points.\n- The chunk lies completely inside the volume if all points are solid.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materialIndices",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materialIndices",
    "access": null,
    "description": "The grid points.",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "runLengths",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#runLengths",
    "access": null,
    "description": "Run-length compression data.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Uint32Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeData",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#edgeData",
    "access": null,
    "description": "The edge data.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "EdgeData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "empty",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#empty",
    "access": null,
    "description": "Indicates whether this data container is empty.",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "full",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#full",
    "access": null,
    "description": "Indicates whether this data container is full.",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 305,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#set",
    "access": null,
    "description": "Adopts the given data.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "HermiteData"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to adopt."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HermiteData"
      ],
      "spread": false,
      "description": "This data."
    },
    "generator": false
  },
  {
    "__docId__": 306,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lod",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#lod",
    "access": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#neutered",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materials",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materials",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materialIndices",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materialIndices",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "runLengths",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#runLengths",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeData",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#edgeData",
    "access": null,
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setMaterialIndex",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#setMaterialIndex",
    "access": null,
    "description": "Sets the specified material index.",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the material index that should be updated."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The new material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "compress",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#compress",
    "access": null,
    "description": "Compresses this data.",
    "lineNumber": 167,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HermiteData"
      ],
      "spread": false,
      "description": "This data."
    },
    "generator": false
  },
  {
    "__docId__": 314,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "runLengths",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#runLengths",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materialIndices",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materialIndices",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "decompress",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#decompress",
    "access": null,
    "description": "Decompresses this data.",
    "lineNumber": 202,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "HermiteData"
      ],
      "spread": false,
      "description": "This data."
    },
    "generator": false
  },
  {
    "__docId__": 317,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materialIndices",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materialIndices",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "runLengths",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#runLengths",
    "access": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTransferList",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#createTransferList",
    "access": null,
    "description": "Creates a list of transferable items.",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "transferList",
        "description": "An existing list to be filled with transferable items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "A transfer list."
    },
    "generator": false
  },
  {
    "__docId__": 320,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#serialise",
    "access": null,
    "description": "Serialises this data.",
    "lineNumber": 242,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The serialised version of the data."
    },
    "generator": false
  },
  {
    "__docId__": 321,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#neutered",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deserialise",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#deserialise",
    "access": null,
    "description": "Adopts the given serialised data.",
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "Serialised hermite data."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 323,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lod",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#lod",
    "access": null,
    "description": null,
    "lineNumber": 264,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materials",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materials",
    "access": null,
    "description": null,
    "lineNumber": 265,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materialIndices",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#materialIndices",
    "access": null,
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "runLengths",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#runLengths",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeData",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#edgeData",
    "access": null,
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeData",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#edgeData",
    "access": null,
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "neutered",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData#neutered",
    "access": null,
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData.resolution",
    "access": null,
    "description": "The material grid resolution.",
    "lineNumber": 296,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 331,
    "kind": "set",
    "static": true,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/HermiteData.js~HermiteData",
    "longname": "src/volume/HermiteData.js~HermiteData.resolution",
    "access": null,
    "description": "This value can only be set once.",
    "lineNumber": 304,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 332,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/index.js",
    "memberof": null,
    "longname": "src/volume/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Volume management components.\r\n *\r\n * @module rabbit-hole/volume\r\n */\r\n\r\nexport { Material } from \"./Material.js\";\r\nexport { Edge } from \"./Edge.js\";\r\nexport { EdgeData } from \"./EdgeData.js\";\r\nexport { HermiteData } from \"./HermiteData.js\";\r\nexport { Voxel } from \"./Voxel.js\";\r\n\r\nexport {\r\n\tChunk,\r\n\tVolume,\r\n\tVoxelBlock,\r\n\tVoxelCell\r\n} from \"./octree\";\r\n\r\nexport {\r\n\tConstructiveSolidGeometry,\r\n\tDensityFunction,\r\n\tDifference,\r\n\tIntersection,\r\n\tOperation,\r\n\tOperationType,\r\n\tUnion\r\n} from \"./csg\";\r\n\r\nexport {\r\n\tBox,\r\n\tHeightfield,\r\n\tPlane,\r\n\tSDFType,\r\n\tSignedDistanceFunction,\r\n\tSphere,\r\n\tTorus\r\n} from \"./sdf\";\r\n"
  },
  {
    "__docId__": 333,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/Material.js",
    "memberof": null,
    "longname": "src/volume/Material.js",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "content": "/**\r\n * An enumeration of material constants.\r\n *\r\n * @type {Object}\r\n * @property {Number} AIR - Indicates empty space.\r\n * @property {Number} SOLID - Indicates solid material.\r\n */\r\n\r\nexport const Material = {\r\n\r\n\tAIR: 0,\r\n\tSOLID: 1\r\n\r\n};\r\n"
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Material",
    "memberof": "src/volume/Material.js",
    "longname": "src/volume/Material.js~Material",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/Material.js",
    "importStyle": "{Material}",
    "description": "An enumeration of material constants.",
    "lineNumber": 9,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "AIR",
        "description": "Indicates empty space."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "SOLID",
        "description": "Indicates solid material."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 335,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/octree/Chunk.js",
    "memberof": null,
    "longname": "src/volume/octree/Chunk.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { CubicOctant } from \"sparse-octree\";\r\nimport { HermiteData } from \"../HermiteData.js\";\r\n\r\n/**\r\n * A cubic volume chunk.\r\n */\r\n\r\nexport class Chunk extends CubicOctant {\r\n\r\n\t/**\r\n\t * Constructs a new volume chunk.\r\n\t *\r\n\t * @param {Vector3} min - The lower bounds.\r\n\t * @param {Vector3} max - The size.\r\n\t */\r\n\r\n\tconstructor(min, size) {\r\n\r\n\t\tsuper(min, size);\r\n\r\n\t\t/**\r\n\t\t * Hermite data.\r\n\t\t *\r\n\t\t * @type {HermiteData}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.data = null;\r\n\r\n\t\t/**\r\n\t\t * A CSG operation queue.\r\n\t\t *\r\n\t\t * @type {Queue}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.csg = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The material grid resolution of all volume chunks. The upper limit is 256.\r\n\t *\r\n\t * The effective resolution of a chunk is the distance between two adjacent\r\n\t * grid points in global coordinates.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tget resolution() { return HermiteData.resolution; }\r\n\r\n\t/**\r\n\t * This value can only be set once.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tset resolution(x) { HermiteData.resolution = x; }\r\n\r\n\t/**\r\n\t * Creates a list of transferable items.\r\n\t *\r\n\t * @param {Array} [transferList] - An existing list to be filled with transferable items.\r\n\t * @return {Array} A transfer list.\r\n\t */\r\n\r\n\tcreateTransferList(transferList = []) {\r\n\r\n\t\treturn (this.data !== null) ? this.data.createTransferList(transferList) : transferList;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this chunk.\r\n\t *\r\n\t * @return {Object} A serialised description of this chunk.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\treturn {\r\n\t\t\tresolution: this.resolution,\r\n\t\t\tmin: this.min.toArray(),\r\n\t\t\tsize: this.size,\r\n\t\t\tdata: (this.data !== null) ? this.data.serialise() : null\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adopts the given serialised data.\r\n\t *\r\n\t * @param {Object} object - A serialised chunk description.\r\n\t */\r\n\r\n\tdeserialise(object) {\r\n\r\n\t\tthis.resolution = object.resolution;\r\n\t\tthis.min.fromArray(object.min);\r\n\t\tthis.size = object.size;\r\n\r\n\t\tif(object.data !== null) {\r\n\r\n\t\t\tif(this.data === null) {\r\n\r\n\t\t\t\tthis.data = new HermiteData(false);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.data.deserialise(object.data);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.data = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 336,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Chunk",
    "memberof": "src/volume/octree/Chunk.js",
    "longname": "src/volume/octree/Chunk.js~Chunk",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/octree/Chunk.js",
    "importStyle": "{Chunk}",
    "description": "A cubic volume chunk.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "sparse-octree~CubicOctant"
    ]
  },
  {
    "__docId__": 337,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#constructor",
    "access": null,
    "description": "Constructs a new volume chunk.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "The size."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 338,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#data",
    "access": null,
    "description": "Hermite data.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HermiteData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "csg",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#csg",
    "access": null,
    "description": "A CSG operation queue.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Queue"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#resolution",
    "access": null,
    "description": "The material grid resolution of all volume chunks. The upper limit is 256.\n\nThe effective resolution of a chunk is the distance between two adjacent\ngrid points in global coordinates.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 341,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#resolution",
    "access": null,
    "description": "This value can only be set once.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 342,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTransferList",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#createTransferList",
    "access": null,
    "description": "Creates a list of transferable items.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "transferList",
        "description": "An existing list to be filled with transferable items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "A transfer list."
    },
    "generator": false
  },
  {
    "__docId__": 343,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#serialise",
    "access": null,
    "description": "Serialises this chunk.",
    "lineNumber": 79,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this chunk."
    },
    "generator": false
  },
  {
    "__docId__": 344,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deserialise",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#deserialise",
    "access": null,
    "description": "Adopts the given serialised data.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "A serialised chunk description."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 345,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#resolution",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#size",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#data",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/volume/octree/Chunk.js~Chunk",
    "longname": "src/volume/octree/Chunk.js~Chunk#data",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/octree/index.js",
    "memberof": null,
    "longname": "src/volume/octree/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Space partitioning components.\r\n *\r\n * @module rabbit-hole/volume/octree\r\n */\r\n\r\nexport { Chunk } from \"./Chunk.js\";\r\nexport { Volume } from \"./Volume.js\";\r\n\r\nexport { VoxelBlock } from \"./VoxelBlock.js\";\r\nexport { VoxelCell } from \"./VoxelCell.js\";\r\n"
  },
  {
    "__docId__": 350,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/octree/Volume.js",
    "memberof": null,
    "longname": "src/volume/octree/Volume.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Octree } from \"sparse-octree\";\r\nimport { Box3 } from \"math-ds\";\r\nimport { OperationType } from \"../csg/OperationType.js\";\r\nimport { Chunk } from \"./Chunk.js\";\r\n\r\n/**\r\n * A computation helper.\r\n *\r\n * @type {Box3}\r\n * @private\r\n */\r\n\r\nconst box3 = new Box3();\r\n\r\n/**\r\n * Rounds the given number up to the next power of two.\r\n *\r\n * @private\r\n * @param {Number} n - A number.\r\n * @return {Number} The next power of two.\r\n */\r\n\r\nfunction ceil2(n) { return Math.pow(2, Math.max(0, Math.ceil(Math.log2(n)))); }\r\n\r\n/**\r\n * A cubic octree that maintains volume chunks.\r\n */\r\n\r\nexport class Volume extends Octree {\r\n\r\n\t/**\r\n\t * Constructs a new volume octree.\r\n\t *\r\n\t * @param {Number} [chunkSize=32] - The size of leaf chunks. Will be rounded up to the next power of two.\r\n\t * @param {Number} [resolution=32] - The data resolution of leaf chunks. Will be rounded up to the next power of two. The upper limit is 256.\r\n\t */\r\n\r\n\tconstructor(chunkSize = 32, resolution = 32) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The root octant.\r\n\t\t */\r\n\r\n\t\tthis.root = new Chunk();\r\n\r\n\t\t/**\r\n\t\t * The size of a volume chunk.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default 32\r\n\t\t */\r\n\r\n\t\tthis.chunkSize = Math.max(1, ceil2(chunkSize));\r\n\r\n\t\tthis.min.subScalar(this.chunkSize * 2);\r\n\t\tthis.size = this.chunkSize * 4;\r\n\r\n\t\tthis.root.resolution = ceil2(resolution);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the root octant.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tget size() { return this.root.size; }\r\n\r\n\t/**\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tset size(x) { this.root.size = x; }\r\n\r\n\t/**\r\n\t * The resolution of the volume data.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tget resolution() { return this.root.resolution; }\r\n\r\n\t/**\r\n\t * Creates leaf octants in the specified region and returns them together with\r\n\t * existing ones.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} octant - An octant.\r\n\t * @param {Frustum|Box3} region - A region.\r\n\t * @param {Number} size - A leaf octant target size.\r\n\t * @param {Array} result - A list to be filled with octants that intersect with the region.\r\n\t */\r\n\r\n\tgrow(octant, region, size, result) {\r\n\r\n\t\tlet children = octant.children;\r\n\t\tlet i, l;\r\n\r\n\t\tbox3.min = octant.min;\r\n\t\tbox3.max = octant.max;\r\n\r\n\t\tif(region.intersectsBox(box3)) {\r\n\r\n\t\t\tif(children === null && octant.size > size) {\r\n\r\n\t\t\t\toctant.split();\r\n\t\t\t\tchildren = octant.children;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(children !== null) {\r\n\r\n\t\t\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\t\t\tthis.grow(children[i], region, size, result);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult.push(octant);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Edits this volume.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t * @return {Array} The chunks that lie inside the operation's region, including newly created ones.\r\n\t */\r\n\r\n\tedit(sdf) {\r\n\r\n\t\tconst region = sdf.completeBoundingBox;\r\n\r\n\t\tlet result = [];\r\n\r\n\t\tif(sdf.operation === OperationType.UNION) {\r\n\r\n\t\t\t// Find and create leaf octants.\r\n\t\t\tthis.expand(region);\r\n\t\t\tthis.grow(this.root, region, this.chunkSize, result);\r\n\r\n\t\t} else if(sdf.operation === OperationType.DIFFERENCE) {\r\n\r\n\t\t\t// Chunks that don't exist can't become more empty.\r\n\t\t\tresult = this.leaves(region);\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Intersections affect all chunks.\r\n\t\t\tresult = this.leaves();\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands the volume to include the given region.\r\n\t *\r\n\t * @private\r\n\t * @param {Box3} region - A region.\r\n\t */\r\n\r\n\texpand(region) {\r\n\r\n\t\tconst min = region.min;\r\n\t\tconst max = region.max;\r\n\r\n\t\tconst m = Math.max(\r\n\t\t\tMath.max(Math.max(Math.abs(min.x), Math.abs(min.y)), Math.abs(min.z)),\r\n\t\t\tMath.max(Math.max(Math.abs(max.x), Math.abs(max.y)), Math.abs(max.z))\r\n\t\t);\r\n\r\n\t\tlet s = this.size / 2;\r\n\t\tlet originalChildren = this.children;\r\n\r\n\t\tlet n, i;\r\n\r\n\t\tif(m > s) {\r\n\r\n\t\t\t// Find an appropriate target size.\r\n\t\t\tn = ceil2(Math.ceil(m / this.chunkSize) * this.chunkSize);\r\n\r\n\t\t\tif(originalChildren === null) {\r\n\r\n\t\t\t\t// Expand the root's boundaries.\r\n\t\t\t\tthis.min.set(-n, -n, -n);\r\n\t\t\t\tthis.size = 2 * n;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Repeatedly double the octree size and create intermediate octants.\r\n\t\t\t\twhile(s < n) {\r\n\r\n\t\t\t\t\ts = this.size;\r\n\r\n\t\t\t\t\tthis.min.multiplyScalar(2);\r\n\t\t\t\t\tthis.size *= 2;\r\n\r\n\t\t\t\t\t// Create new children.\r\n\t\t\t\t\tthis.root.split();\r\n\r\n\t\t\t\t\t// Connect them with the old children.\r\n\t\t\t\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\t\t\t\t// But only if they actually contain deeper structures.\r\n\t\t\t\t\t\tif(originalChildren[i].children !== null) {\r\n\r\n\t\t\t\t\t\t\tthis.children[i].split([originalChildren[i]]);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toriginalChildren = this.children;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given chunk and shrinks the volume if possible.\r\n\t *\r\n\t * @param {Chunk} chunk - A chunk to remove.\r\n\t * @todo\r\n\t */\r\n\r\n\tprune(chunk) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a volume.\r\n\t *\r\n\t * @param {String} data - The volume data to import.\r\n\t */\r\n\r\n\tload(data) {\r\n\r\n\t\tChunk.resolution = data.resolution;\r\n\t\tthis.chunkSize = data.chunkSize;\r\n\t\tthis.root = data.root;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a compact representation of the current volume data.\r\n\t *\r\n\t * @return {Object} A concise representation of this volume.\r\n\t */\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn {\r\n\t\t\tresolution: Chunk.resolution,\r\n\t\t\tchunkSize: this.chunkSize,\r\n\t\t\troot: this.root\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 351,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "box3",
    "memberof": "src/volume/octree/Volume.js",
    "longname": "src/volume/octree/Volume.js~box3",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/Volume.js",
    "importStyle": null,
    "description": "A computation helper.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 352,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ceil2",
    "memberof": "src/volume/octree/Volume.js",
    "longname": "src/volume/octree/Volume.js~ceil2",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/Volume.js",
    "importStyle": null,
    "description": "Rounds the given number up to the next power of two.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "A number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The next power of two."
    },
    "generator": false
  },
  {
    "__docId__": 353,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Volume",
    "memberof": "src/volume/octree/Volume.js",
    "longname": "src/volume/octree/Volume.js~Volume",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/octree/Volume.js",
    "importStyle": "{Volume}",
    "description": "A cubic octree that maintains volume chunks.",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "sparse-octree~Octree"
    ]
  },
  {
    "__docId__": 354,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#constructor",
    "access": null,
    "description": "Constructs a new volume octree.",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "chunkSize",
        "description": "The size of leaf chunks. Will be rounded up to the next power of two."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "resolution",
        "description": "The data resolution of leaf chunks. Will be rounded up to the next power of two. The upper limit is 256."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 355,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#root",
    "access": null,
    "description": "The root octant.",
    "lineNumber": 46,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunkSize",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#chunkSize",
    "access": "private",
    "description": "The size of a volume chunk.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "32"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#size",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#size",
    "access": null,
    "description": "The size of the root octant.",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 359,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#size",
    "access": null,
    "description": "",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 360,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "resolution",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#resolution",
    "access": null,
    "description": "The resolution of the volume data.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 361,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "grow",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#grow",
    "access": "private",
    "description": "Creates leaf octants in the specified region and returns them together with\nexisting ones.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "A leaf octant target size."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "A list to be filled with octants that intersect with the region."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 362,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "edit",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#edit",
    "access": null,
    "description": "Edits this volume.",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "The chunks that lie inside the operation's region, including newly created ones."
    },
    "generator": false
  },
  {
    "__docId__": 363,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "expand",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#expand",
    "access": "private",
    "description": "Expands the volume to include the given region.",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 364,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#size",
    "access": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#size",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prune",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#prune",
    "access": null,
    "description": "Removes the given chunk and shrinks the volume if possible.",
    "lineNumber": 243,
    "todo": [
      ""
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A chunk to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 367,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#load",
    "access": null,
    "description": "Loads a volume.",
    "lineNumber": 253,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The volume data to import."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 368,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunkSize",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#chunkSize",
    "access": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#root",
    "access": null,
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/volume/octree/Volume.js~Volume",
    "longname": "src/volume/octree/Volume.js~Volume#toJSON",
    "access": null,
    "description": "Creates a compact representation of the current volume data.",
    "lineNumber": 267,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A concise representation of this volume."
    },
    "generator": false
  },
  {
    "__docId__": 371,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/octree/VoxelBlock.js",
    "memberof": null,
    "longname": "src/volume/octree/VoxelBlock.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Octree, PATTERN, EDGES } from \"sparse-octree\";\r\nimport { Vector3 } from \"math-ds\";\r\nimport { QEFData } from \"../../math/QEFData.js\";\r\nimport { QEFSolver } from \"../../math/QEFSolver.js\";\r\nimport { Material } from \"../Material.js\";\r\nimport { Edge } from \"../Edge.js\";\r\nimport { Voxel } from \"../Voxel.js\";\r\nimport { VoxelCell } from \"./VoxelCell.js\";\r\n\r\n/**\r\n * Creates a voxel and builds a material configuration code from the materials\r\n * in the voxel corners.\r\n *\r\n * @private\r\n * @param {Number} n - The grid resolution.\r\n * @param {Number} x - A local grid point X-coordinate.\r\n * @param {Number} y - A local grid point Y-coordinate.\r\n * @param {Number} z - A local grid point Z-coordinate.\r\n * @param {Uint8Array} materialIndices - The material indices.\r\n * @return {Voxel} A voxel.\r\n */\r\n\r\nfunction createVoxel(n, x, y, z, materialIndices) {\r\n\r\n\tconst m = n + 1;\r\n\tconst mm = m * m;\r\n\r\n\tconst voxel = new Voxel();\r\n\r\n\tlet materials, edgeCount;\r\n\tlet material, offset, index;\r\n\tlet c1, c2, m1, m2;\r\n\r\n\tlet i;\r\n\r\n\t// Pack the material information of the eight corners into a single byte.\r\n\tfor(materials = 0, i = 0; i < 8; ++i) {\r\n\r\n\t\t// Translate the coordinates into a one-dimensional grid point index.\r\n\t\toffset = PATTERN[i];\r\n\t\tindex = (z + offset[2]) * mm + (y + offset[1]) * m + (x + offset[0]);\r\n\r\n\t\t// Convert the identified material index into a binary value.\r\n\t\tmaterial = Math.min(materialIndices[index], Material.SOLID);\r\n\r\n\t\t// Store the value in bit i.\r\n\t\tmaterials |= (material << i);\r\n\r\n\t}\r\n\r\n\t// Find out how many edges intersect with the implicit surface.\r\n\tfor(edgeCount = 0, i = 0; i < 12; ++i) {\r\n\r\n\t\tc1 = EDGES[i][0];\r\n\t\tc2 = EDGES[i][1];\r\n\r\n\t\tm1 = (materials >> c1) & 1;\r\n\t\tm2 = (materials >> c2) & 1;\r\n\r\n\t\t// Check if there is a material change on the edge.\r\n\t\tif(m1 !== m2) {\r\n\r\n\t\t\t++edgeCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvoxel.materials = materials;\r\n\tvoxel.edgeCount = edgeCount;\r\n\tvoxel.qefData = new QEFData();\r\n\r\n\treturn voxel;\r\n\r\n}\r\n\r\n/**\r\n * A cubic voxel octree.\r\n */\r\n\r\nexport class VoxelBlock extends Octree {\r\n\r\n\t/**\r\n\t * Constructs a new voxel octree.\r\n\t *\r\n\t * @param {Chunk} chunk - A volume chunk.\r\n\t */\r\n\r\n\tconstructor(chunk) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The root octant.\r\n\t\t */\r\n\r\n\t\tthis.root = new VoxelCell(chunk.min, chunk.size);\r\n\t\tthis.root.lod = chunk.data.lod;\r\n\r\n\t\t/**\r\n\t\t * The amount of voxels in this block.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\r\n\t\tthis.voxelCount = 0;\r\n\r\n\t\t// Create voxel cells from Hermite data and apply level of detail.\r\n\t\tthis.construct(chunk);\r\n\t\tthis.simplify();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to simplify the octree by clustering voxels.\r\n\t *\r\n\t * @private\r\n\t */\r\n\r\n\tsimplify() {\r\n\r\n\t\tthis.voxelCount -= this.root.collapse();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates intermediate voxel cells down to the leaf octant that is described\r\n\t * by the given local grid coordinates and returns it.\r\n\t *\r\n\t * @private\r\n\t * @param {Number} n - The grid resolution.\r\n\t * @param {Number} x - A local grid point X-coordinate.\r\n\t * @param {Number} y - A local grid point Y-coordinate.\r\n\t * @param {Number} z - A local grid point Z-coordinate.\r\n\t * @return {VoxelCell} A leaf voxel cell.\r\n\t */\r\n\r\n\tgetCell(n, x, y, z) {\r\n\r\n\t\tlet cell = this.root;\r\n\t\tlet i = 0;\r\n\r\n\t\tfor(n = n >> 1; n > 0; n >>= 1, i = 0) {\r\n\r\n\t\t\t// Identify the next octant by the grid coordinates.\r\n\t\t\tif(x >= n) { i += 4; x -= n; } // YZ.\r\n\t\t\tif(y >= n) { i += 2; y -= n; } // XZ.\r\n\t\t\tif(z >= n) { i += 1; z -= n; } // XY.\r\n\r\n\t\t\tif(cell.children === null) {\r\n\r\n\t\t\t\tcell.split();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcell = cell.children[i];\r\n\r\n\t\t}\r\n\r\n\t\treturn cell;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs voxel cells from volume data.\r\n\t *\r\n\t * @private\r\n\t * @param {Chunk} chunk - A volume chunk.\r\n\t */\r\n\r\n\tconstruct(chunk) {\r\n\r\n\t\tconst s = chunk.size;\r\n\t\tconst n = chunk.resolution;\r\n\t\tconst m = n + 1;\r\n\t\tconst mm = m * m;\r\n\r\n\t\tconst data = chunk.data;\r\n\t\tconst edgeData = data.edgeData;\r\n\t\tconst materialIndices = data.materialIndices;\r\n\r\n\t\tconst qefSolver = new QEFSolver();\r\n\r\n\t\tconst base = chunk.min;\r\n\t\tconst offsetA = new Vector3();\r\n\t\tconst offsetB = new Vector3();\r\n\t\tconst intersection = new Vector3();\r\n\t\tconst edge = new Edge();\r\n\r\n\t\tconst sequences = [\r\n\t\t\tnew Uint8Array([0, 1, 2, 3]),\r\n\t\t\tnew Uint8Array([0, 1, 4, 5]),\r\n\t\t\tnew Uint8Array([0, 2, 4, 6])\r\n\t\t];\r\n\r\n\t\tlet voxelCount = 0;\r\n\r\n\t\tlet edges, zeroCrossings, normals;\r\n\t\tlet sequence, offset;\r\n\t\tlet voxel, position;\r\n\t\tlet axis, cell;\r\n\r\n\t\tlet a, d, i, j, l;\r\n\t\tlet x2, y2, z2;\r\n\t\tlet x, y, z;\r\n\r\n\t\tlet index;\r\n\r\n\t\tfor(a = 4, d = 0; d < 3; ++d, a >>= 1) {\r\n\r\n\t\t\taxis = PATTERN[a];\r\n\r\n\t\t\tedges = edgeData.edges[d];\r\n\t\t\tzeroCrossings = edgeData.zeroCrossings[d];\r\n\t\t\tnormals = edgeData.normals[d];\r\n\r\n\t\t\tsequence = sequences[d];\r\n\r\n\t\t\tfor(i = 0, l = edges.length; i < l; ++i) {\r\n\r\n\t\t\t\t// Each edge is uniquely described by its starting grid point index.\r\n\t\t\t\tindex = edges[i];\r\n\r\n\t\t\t\t// Calculate the local grid coordinates from the one-dimensional index.\r\n\t\t\t\tx = index % m;\r\n\t\t\t\ty = Math.trunc((index % mm) / m);\r\n\t\t\t\tz = Math.trunc(index / mm);\r\n\r\n\t\t\t\toffsetA.set(\r\n\t\t\t\t\tx * s / n,\r\n\t\t\t\t\ty * s / n,\r\n\t\t\t\t\tz * s / n\r\n\t\t\t\t);\r\n\r\n\t\t\t\toffsetB.set(\r\n\t\t\t\t\t(x + axis[0]) * s / n,\r\n\t\t\t\t\t(y + axis[1]) * s / n,\r\n\t\t\t\t\t(z + axis[2]) * s / n\r\n\t\t\t\t);\r\n\r\n\t\t\t\tedge.a.addVectors(base, offsetA);\r\n\t\t\t\tedge.b.addVectors(base, offsetB);\r\n\r\n\t\t\t\tedge.t = zeroCrossings[i];\r\n\t\t\t\tedge.n.fromArray(normals, i * 3);\r\n\r\n\t\t\t\tintersection.copy(edge.computeZeroCrossingPosition());\r\n\r\n\t\t\t\t// Each edge can belong to up to four voxel cells.\r\n\t\t\t\tfor(j = 0; j < 4; ++j) {\r\n\r\n\t\t\t\t\t// Rotate around the edge.\r\n\t\t\t\t\toffset = PATTERN[sequence[j]];\r\n\r\n\t\t\t\t\tx2 = x - offset[0];\r\n\t\t\t\t\ty2 = y - offset[1];\r\n\t\t\t\t\tz2 = z - offset[2];\r\n\r\n\t\t\t\t\t// Check if the adjusted coordinates still lie inside the grid bounds.\r\n\t\t\t\t\tif(x2 >= 0 && y2 >= 0 && z2 >= 0 && x2 < n && y2 < n && z2 < n) {\r\n\r\n\t\t\t\t\t\tcell = this.getCell(n, x2, y2, z2);\r\n\r\n\t\t\t\t\t\tif(cell.voxel === null) {\r\n\r\n\t\t\t\t\t\t\t// The existence of the edge guarantees that the voxel contains the surface.\r\n\t\t\t\t\t\t\tcell.voxel = createVoxel(n, x2, y2, z2, materialIndices);\r\n\r\n\t\t\t\t\t\t\t++voxelCount;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add the edge data to the voxel.\r\n\t\t\t\t\t\tvoxel = cell.voxel;\r\n\t\t\t\t\t\tvoxel.normal.add(edge.n);\r\n\t\t\t\t\t\tvoxel.qefData.add(intersection, edge.n);\r\n\r\n\t\t\t\t\t\tif(voxel.qefData.numPoints === voxel.edgeCount) {\r\n\r\n\t\t\t\t\t\t\t// Finalise the voxel by solving the accumulated data.\r\n\t\t\t\t\t\t\tposition = qefSolver.setData(voxel.qefData).solve();\r\n\r\n\t\t\t\t\t\t\tvoxel.position.copy(cell.contains(position) ? position : qefSolver.massPoint);\r\n\t\t\t\t\t\t\tvoxel.normal.normalize();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.voxelCount = voxelCount;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 372,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createVoxel",
    "memberof": "src/volume/octree/VoxelBlock.js",
    "longname": "src/volume/octree/VoxelBlock.js~createVoxel",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/VoxelBlock.js",
    "importStyle": null,
    "description": "Creates a voxel and builds a material configuration code from the materials\nin the voxel corners.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The grid resolution."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "A local grid point X-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "A local grid point Y-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "A local grid point Z-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Uint8Array"
        ],
        "spread": false,
        "optional": false,
        "name": "materialIndices",
        "description": "The material indices."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Voxel"
      ],
      "spread": false,
      "description": "A voxel."
    },
    "generator": false
  },
  {
    "__docId__": 373,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VoxelBlock",
    "memberof": "src/volume/octree/VoxelBlock.js",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/octree/VoxelBlock.js",
    "importStyle": "{VoxelBlock}",
    "description": "A cubic voxel octree.",
    "lineNumber": 81,
    "interface": false,
    "extends": [
      "sparse-octree~Octree"
    ]
  },
  {
    "__docId__": 374,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#constructor",
    "access": null,
    "description": "Constructs a new voxel octree.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 375,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#root",
    "access": null,
    "description": "The root octant.",
    "lineNumber": 97,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "voxelCount",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#voxelCount",
    "access": null,
    "description": "The amount of voxels in this block.",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "simplify",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#simplify",
    "access": "private",
    "description": "Attempts to simplify the octree by clustering voxels.",
    "lineNumber": 120,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 378,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "voxelCount",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#voxelCount",
    "access": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCell",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#getCell",
    "access": "private",
    "description": "Creates intermediate voxel cells down to the leaf octant that is described\nby the given local grid coordinates and returns it.",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The grid resolution."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "A local grid point X-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "A local grid point Y-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "A local grid point Z-coordinate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VoxelCell"
      ],
      "spread": false,
      "description": "A leaf voxel cell."
    },
    "generator": false
  },
  {
    "__docId__": 380,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "construct",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#construct",
    "access": "private",
    "description": "Constructs voxel cells from volume data.",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 381,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "voxelCount",
    "memberof": "src/volume/octree/VoxelBlock.js~VoxelBlock",
    "longname": "src/volume/octree/VoxelBlock.js~VoxelBlock#voxelCount",
    "access": null,
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/octree/VoxelCell.js",
    "memberof": null,
    "longname": "src/volume/octree/VoxelCell.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { CubicOctant } from \"sparse-octree\";\r\nimport { QEFData } from \"../../math/QEFData.js\";\r\nimport { QEFSolver } from \"../../math/QEFSolver.js\";\r\nimport { Voxel } from \"../Voxel.js\";\r\n\r\n/**\r\n * A bias for boundary checks.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nconst BIAS = 1e-6;\r\n\r\n/**\r\n * The base QEF error threshold.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nconst THRESHOLD = 1e-2;\r\n\r\n/**\r\n * A QEF error threshold for voxel clustering.\r\n *\r\n * @type {Number}\r\n * @private\r\n */\r\n\r\nlet threshold = 0.0;\r\n\r\n/**\r\n * A voxel octant.\r\n */\r\n\r\nexport class VoxelCell extends CubicOctant {\r\n\r\n\t/**\r\n\t * Constructs a new voxel octant.\r\n\t *\r\n\t * @param {Vector3} [min] - The lower bounds.\r\n\t * @param {Number} [size] - The size of the octant.\r\n\t */\r\n\r\n\tconstructor(min, size) {\r\n\r\n\t\tsuper(min, size);\r\n\r\n\t\t/**\r\n\t\t * A voxel that contains draw information.\r\n\t\t *\r\n\t\t * @type {Voxel}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.voxel = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The level of detail.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tget lod() { return threshold; }\r\n\r\n\t/**\r\n\t * @type {Number}\r\n\t */\r\n\r\n\tset lod(lod) {\r\n\r\n\t\tthreshold = THRESHOLD + (lod * lod * lod);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the given point lies inside this cell's boundaries.\r\n\t *\r\n\t * @param {Vector3} p - A point.\r\n\t * @return {Boolean} Whether the given point lies inside this cell.\r\n\t */\r\n\r\n\tcontains(p) {\r\n\r\n\t\tconst min = this.min;\r\n\t\tconst size = this.size;\r\n\r\n\t\treturn (\r\n\t\t\tp.x >= min.x - BIAS &&\r\n\t\t\tp.y >= min.y - BIAS &&\r\n\t\t\tp.z >= min.z - BIAS &&\r\n\t\t\tp.x <= min.x + size + BIAS &&\r\n\t\t\tp.y <= min.y + size + BIAS &&\r\n\t\t\tp.z <= min.z + size + BIAS\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to simplify this cell.\r\n\t *\r\n\t * @return {Number} The amount of removed voxels.\r\n\t */\r\n\r\n\tcollapse() {\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tconst signs = new Int16Array([\r\n\t\t\t-1, -1, -1, -1,\r\n\t\t\t-1, -1, -1, -1\r\n\t\t]);\r\n\r\n\t\tlet midSign = -1;\r\n\t\tlet collapsible = (children !== null);\r\n\r\n\t\tlet removedVoxels = 0;\r\n\r\n\t\tlet qefData, qefSolver;\r\n\t\tlet child, sign, voxel;\r\n\t\tlet position;\r\n\r\n\t\tlet v, i;\r\n\r\n\t\tif(collapsible) {\r\n\r\n\t\t\tqefData = new QEFData();\r\n\r\n\t\t\tfor(v = 0, i = 0; i < 8; ++i) {\r\n\r\n\t\t\t\tchild = children[i];\r\n\r\n\t\t\t\tremovedVoxels += child.collapse();\r\n\r\n\t\t\t\tvoxel = child.voxel;\r\n\r\n\t\t\t\tif(child.children !== null) {\r\n\r\n\t\t\t\t\t// Couldn't simplify the child.\r\n\t\t\t\t\tcollapsible = false;\r\n\r\n\t\t\t\t} else if(voxel !== null) {\r\n\r\n\t\t\t\t\tqefData.addData(voxel.qefData);\r\n\r\n\t\t\t\t\tmidSign = (voxel.materials >> (7 - i)) & 1;\r\n\t\t\t\t\tsigns[i] = (voxel.materials >> i) & 1;\r\n\r\n\t\t\t\t\t++v;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif(collapsible) {\r\n\r\n\t\t\t\tqefSolver = new QEFSolver();\r\n\t\t\t\tposition = qefSolver.setData(qefData).solve();\r\n\r\n\t\t\t\tif(qefSolver.computeError() <= threshold) {\r\n\r\n\t\t\t\t\tvoxel = new Voxel();\r\n\t\t\t\t\tvoxel.position.copy(this.contains(position) ? position : qefSolver.massPoint);\r\n\r\n\t\t\t\t\tfor(i = 0; i < 8; ++i) {\r\n\r\n\t\t\t\t\t\tsign = signs[i];\r\n\t\t\t\t\t\tchild = children[i];\r\n\r\n\t\t\t\t\t\tif(sign === -1) {\r\n\r\n\t\t\t\t\t\t\t// Undetermined, use mid sign instead.\r\n\t\t\t\t\t\t\tvoxel.materials |= (midSign << i);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvoxel.materials |= (sign << i);\r\n\r\n\t\t\t\t\t\t\t// Accumulate normals.\r\n\t\t\t\t\t\t\tvoxel.normal.add(child.voxel.normal);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvoxel.normal.normalize();\r\n\t\t\t\t\tvoxel.qefData = qefData;\r\n\r\n\t\t\t\t\tthis.voxel = voxel;\r\n\t\t\t\t\tthis.children = null;\r\n\r\n\t\t\t\t\t// Removed existing voxels and created a new one.\r\n\t\t\t\t\tremovedVoxels += v - 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn removedVoxels;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 383,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "BIAS",
    "memberof": "src/volume/octree/VoxelCell.js",
    "longname": "src/volume/octree/VoxelCell.js~BIAS",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/VoxelCell.js",
    "importStyle": null,
    "description": "A bias for boundary checks.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "THRESHOLD",
    "memberof": "src/volume/octree/VoxelCell.js",
    "longname": "src/volume/octree/VoxelCell.js~THRESHOLD",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/VoxelCell.js",
    "importStyle": null,
    "description": "The base QEF error threshold.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 385,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "threshold",
    "memberof": "src/volume/octree/VoxelCell.js",
    "longname": "src/volume/octree/VoxelCell.js~threshold",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/volume/octree/VoxelCell.js",
    "importStyle": null,
    "description": "A QEF error threshold for voxel clustering.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 386,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VoxelCell",
    "memberof": "src/volume/octree/VoxelCell.js",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/octree/VoxelCell.js",
    "importStyle": "{VoxelCell}",
    "description": "A voxel octant.",
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "sparse-octree~CubicOctant"
    ]
  },
  {
    "__docId__": 387,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#constructor",
    "access": null,
    "description": "Constructs a new voxel octant.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "size",
        "description": "The size of the octant."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 388,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "voxel",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#voxel",
    "access": null,
    "description": "A voxel that contains draw information.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Voxel"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 389,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "lod",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#lod",
    "access": null,
    "description": "The level of detail.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 390,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "lod",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#lod",
    "access": null,
    "description": "",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 391,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contains",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#contains",
    "access": null,
    "description": "Checks if the given point lies inside this cell's boundaries.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the given point lies inside this cell."
    },
    "generator": false
  },
  {
    "__docId__": 392,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "collapse",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#collapse",
    "access": null,
    "description": "Attempts to simplify this cell.",
    "lineNumber": 108,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of removed voxels."
    },
    "generator": false
  },
  {
    "__docId__": 393,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "voxel",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#voxel",
    "access": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "children",
    "memberof": "src/volume/octree/VoxelCell.js~VoxelCell",
    "longname": "src/volume/octree/VoxelCell.js~VoxelCell#children",
    "access": null,
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/Box.js",
    "memberof": null,
    "longname": "src/volume/sdf/Box.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, Vector3 } from \"math-ds\";\r\nimport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nimport { SDFType } from \"./SDFType.js\";\r\n\r\n/**\r\n * A Signed Distance Function that describes a box.\r\n */\r\n\r\nexport class Box extends SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new box SDF.\r\n\t *\r\n\t * @param {Object} parameters - The parameters.\r\n\t * @param {Array} parameters.origin - The origin [x, y, z].\r\n\t * @param {Array} parameters.halfDimensions - The half size [x, y, z].\r\n\t * @param {Number} [material] - A material index.\r\n\t */\r\n\r\n\tconstructor(parameters = {}, material) {\r\n\r\n\t\tsuper(SDFType.BOX, material);\r\n\r\n\t\t/**\r\n\t\t * The origin.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.origin = new Vector3(...parameters.origin);\r\n\r\n\t\t/**\r\n\t\t * The halfDimensions.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.halfDimensions = new Vector3(...parameters.halfDimensions);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this density field.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\tthis.bbox.min.subVectors(this.origin, this.halfDimensions);\r\n\t\tthis.bbox.max.addVectors(this.origin, this.halfDimensions);\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\tconst origin = this.origin;\r\n\t\tconst halfDimensions = this.halfDimensions;\r\n\r\n\t\t// Compute the distance to the hull.\r\n\t\tconst dx = Math.abs(position.x - origin.x) - halfDimensions.x;\r\n\t\tconst dy = Math.abs(position.y - origin.y) - halfDimensions.y;\r\n\t\tconst dz = Math.abs(position.z - origin.z) - halfDimensions.z;\r\n\r\n\t\tconst m = Math.max(dx, Math.max(dy, dz));\r\n\r\n\t\tconst mx0 = Math.max(dx, 0);\r\n\t\tconst my0 = Math.max(dy, 0);\r\n\t\tconst mz0 = Math.max(dz, 0);\r\n\r\n\t\tconst length = Math.sqrt(mx0 * mx0 + my0 * my0 + mz0 * mz0);\r\n\r\n\t\treturn Math.min(m, 0) + length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A serialised description of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = super.serialise();\r\n\r\n\t\tresult.parameters = {\r\n\t\t\torigin: this.origin.toArray(),\r\n\t\t\thalfDimensions: this.halfDimensions.toArray()\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 396,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Box",
    "memberof": "src/volume/sdf/Box.js",
    "longname": "src/volume/sdf/Box.js~Box",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/Box.js",
    "importStyle": "{Box}",
    "description": "A Signed Distance Function that describes a box.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction"
    ]
  },
  {
    "__docId__": 397,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#constructor",
    "access": null,
    "description": "Constructs a new box SDF.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "The parameters."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.origin",
        "description": "The origin [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.halfDimensions",
        "description": "The half size [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "material",
        "description": "A material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 398,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "origin",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#origin",
    "access": "private",
    "description": "The origin.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 399,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "halfDimensions",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#halfDimensions",
    "access": "private",
    "description": "The halfDimensions.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this density field.",
    "lineNumber": 50,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 401,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#bbox",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The euclidean distance to the surface."
    },
    "generator": false
  },
  {
    "__docId__": 403,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/Box.js~Box",
    "longname": "src/volume/sdf/Box.js~Box#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 96,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 404,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/Heightfield.js",
    "memberof": null,
    "longname": "src/volume/sdf/Heightfield.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, Vector3 } from \"math-ds\";\r\nimport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nimport { SDFType } from \"./SDFType.js\";\r\n\r\n/**\r\n * A Signed Distance Function that describes a heightfield.\r\n */\r\n\r\nexport class Heightfield extends SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new heightfield SDF.\r\n\t *\r\n\t * @param {Object} parameters - The parameters.\r\n\t * @param {Array} parameters.min - The min position [x, y, z].\r\n\t * @param {Array} parameters.dimensions - The dimensions [x, y, z].\r\n\t * @param {Uint8ClampedArray} parameters.data - The heightmap data.\r\n\t * @param {Number} [material] - A material index.\r\n\t */\r\n\r\n\tconstructor(parameters = {}, material) {\r\n\r\n\t\tsuper(SDFType.HEIGHTFIELD, material);\r\n\r\n\t\t/**\r\n\t\t * The position.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.min = new Vector3(...parameters.min);\r\n\r\n\t\t/**\r\n\t\t * The dimensions.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.dimensions = new Vector3(...parameters.size);\r\n\r\n\t\t/**\r\n\t\t * The height data.\r\n\t\t *\r\n\t\t * @type {Uint8ClampedArray}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.data = parameters.data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this density field.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\tthis.bbox.min.copy(this.min);\r\n\t\tthis.bbox.max.addVectors(this.min, this.dimensions);\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\tconst min = this.min;\r\n\t\tconst dimensions = this.dimensions;\r\n\r\n\t\tconst x = Math.max(min.x, Math.min(min.x + dimensions.x, position.x - min.x));\r\n\t\tconst z = Math.max(min.z, Math.min(min.z + dimensions.z, position.z - min.z));\r\n\r\n\t\tconst y = position.y - min.y;\r\n\r\n\t\treturn y - (this.data[z * dimensions.x + x] / 255) * dimensions.y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A serialised description of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = super.serialise();\r\n\r\n\t\tresult.parameters = {\r\n\t\t\tmin: this.min.toArray(),\r\n\t\t\tdimensions: this.dimensions.toArray(),\r\n\t\t\tdata: this.data\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 405,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Heightfield",
    "memberof": "src/volume/sdf/Heightfield.js",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/Heightfield.js",
    "importStyle": "{Heightfield}",
    "description": "A Signed Distance Function that describes a heightfield.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction"
    ]
  },
  {
    "__docId__": 406,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#constructor",
    "access": null,
    "description": "Constructs a new heightfield SDF.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "The parameters."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.min",
        "description": "The min position [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.dimensions",
        "description": "The dimensions [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Uint8ClampedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.data",
        "description": "The heightmap data."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "material",
        "description": "A material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 407,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "min",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#min",
    "access": "private",
    "description": "The position.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 408,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dimensions",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#dimensions",
    "access": "private",
    "description": "The dimensions.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 409,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#data",
    "access": "private",
    "description": "The height data.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Uint8ClampedArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 410,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this density field.",
    "lineNumber": 60,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 411,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#bbox",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The euclidean distance to the surface."
    },
    "generator": false
  },
  {
    "__docId__": 413,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/Heightfield.js~Heightfield",
    "longname": "src/volume/sdf/Heightfield.js~Heightfield#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 98,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 414,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/index.js",
    "memberof": null,
    "longname": "src/volume/sdf/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * A collection of Signed Distance Function components.\r\n *\r\n * @module rabbit-hole/volume/sdf\r\n */\r\n\r\nexport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nexport { SDFType } from \"./SDFType.js\";\r\nexport { SDFReviver } from \"./SDFReviver.js\";\r\n\r\nexport { Heightfield } from \"./Heightfield.js\";\r\nexport { Sphere } from \"./Sphere.js\";\r\nexport { Torus } from \"./Torus.js\";\r\nexport { Plane } from \"./Plane.js\";\r\nexport { Box } from \"./Box.js\";\r\n"
  },
  {
    "__docId__": 415,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/Plane.js",
    "memberof": null,
    "longname": "src/volume/sdf/Plane.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, Vector3 } from \"math-ds\";\r\nimport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nimport { SDFType } from \"./SDFType.js\";\r\n\r\n/**\r\n * A Signed Distance Function that describes a plane.\r\n */\r\n\r\nexport class Plane extends SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new plane SDF.\r\n\t *\r\n\t * @param {Object} parameters - The parameters.\r\n\t * @param {Array} parameters.normal - The normal [x, y, z].\r\n\t * @param {Number} parameters.constant - The constant.\r\n\t * @param {Number} [material] - A material index.\r\n\t */\r\n\r\n\tconstructor(parameters = {}, material) {\r\n\r\n\t\tsuper(SDFType.PLANE, material);\r\n\r\n\t\t/**\r\n\t\t * The normal.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.normal = new Vector3(...parameters.normal);\r\n\r\n\t\t/**\r\n\t\t * The constant.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.constant = parameters.constant;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this density field.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t * @todo\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\treturn this.normal.dot(position) + this.constant;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A serialised description of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = super.serialise();\r\n\r\n\t\tresult.parameters = {\r\n\t\t\tnormal: this.normal.toArray(),\r\n\t\t\tconstant: this.constant\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 416,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Plane",
    "memberof": "src/volume/sdf/Plane.js",
    "longname": "src/volume/sdf/Plane.js~Plane",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/Plane.js",
    "importStyle": "{Plane}",
    "description": "A Signed Distance Function that describes a plane.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction"
    ]
  },
  {
    "__docId__": 417,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#constructor",
    "access": null,
    "description": "Constructs a new plane SDF.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "The parameters."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.normal",
        "description": "The normal [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.constant",
        "description": "The constant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "material",
        "description": "A material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 418,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "normal",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#normal",
    "access": "private",
    "description": "The normal.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 419,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "constant",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#constant",
    "access": "private",
    "description": "The constant.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 420,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this density field.",
    "lineNumber": 51,
    "todo": [
      ""
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 421,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#bbox",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The euclidean distance to the surface."
    },
    "generator": false
  },
  {
    "__docId__": 423,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/Plane.js~Plane",
    "longname": "src/volume/sdf/Plane.js~Plane#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 78,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 424,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/SDFReviver.js",
    "memberof": null,
    "longname": "src/volume/sdf/SDFReviver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { SDFType } from \"../sdf/SDFType.js\";\r\nimport { Sphere } from \"../sdf/Sphere.js\";\r\nimport { Box } from \"../sdf/Box.js\";\r\nimport { Plane } from \"../sdf/Plane.js\";\r\nimport { Torus } from \"../sdf/Torus.js\";\r\nimport { Heightfield } from \"../sdf/Heightfield.js\";\r\n\r\n/**\r\n * An SDF reviver.\r\n */\r\n\r\nexport class SDFReviver {\r\n\r\n\t/**\r\n\t * Creates an SDF from the given serialised description.\r\n\t *\r\n\t * @param {Object} description - A serialised SDF.\r\n\t * @return {SignedDistanceFunction} An SDF.\r\n\t */\r\n\r\n\tstatic reviveSDF(description) {\r\n\r\n\t\tlet sdf, i, l;\r\n\r\n\t\tswitch(description.type) {\r\n\r\n\t\t\tcase SDFType.SPHERE:\r\n\t\t\t\tsdf = new Sphere(description.parameters, description.material);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SDFType.BOX:\r\n\t\t\t\tsdf = new Box(description.parameters, description.material);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SDFType.TORUS:\r\n\t\t\t\tsdf = new Torus(description.parameters, description.material);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SDFType.PLANE:\r\n\t\t\t\tsdf = new Plane(description.parameters, description.material);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SDFType.HEIGHTFIELD:\r\n\t\t\t\tsdf = new Heightfield(description.parameters, description.material);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsdf.operation = description.operation;\r\n\r\n\t\tfor(i = 0, l = description.children.length; i < l; ++i) {\r\n\r\n\t\t\tsdf.children.push(this.reviveSDF(description.children[i]));\r\n\r\n\t\t}\r\n\r\n\t\treturn sdf;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 425,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SDFReviver",
    "memberof": "src/volume/sdf/SDFReviver.js",
    "longname": "src/volume/sdf/SDFReviver.js~SDFReviver",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/SDFReviver.js",
    "importStyle": "{SDFReviver}",
    "description": "An SDF reviver.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 426,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "reviveSDF",
    "memberof": "src/volume/sdf/SDFReviver.js~SDFReviver",
    "longname": "src/volume/sdf/SDFReviver.js~SDFReviver.reviveSDF",
    "access": null,
    "description": "Creates an SDF from the given serialised description.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "A serialised SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "An SDF."
    },
    "generator": false
  },
  {
    "__docId__": 427,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/SDFType.js",
    "memberof": null,
    "longname": "src/volume/sdf/SDFType.js",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "content": "/**\r\n * An enumeration of SDF types.\r\n *\r\n * @type {Object}\r\n * @property {String} SPHERE - A sphere description.\r\n * @property {String} BOX - A box description.\r\n * @property {String} TORUS - A torus description.\r\n * @property {String} PLANE - A plane description.\r\n * @property {String} HEIGHTFIELD - A heightfield description.\r\n */\r\n\r\nexport const SDFType = {\r\n\r\n\tSPHERE: \"sdf.sphere\",\r\n\tBOX: \"sdf.box\",\r\n\tTORUS: \"sdf.torus\",\r\n\tPLANE: \"sdf.plane\",\r\n\tHEIGHTFIELD: \"sdf.heightfield\"\r\n\r\n};\r\n"
  },
  {
    "__docId__": 428,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SDFType",
    "memberof": "src/volume/sdf/SDFType.js",
    "longname": "src/volume/sdf/SDFType.js~SDFType",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/SDFType.js",
    "importStyle": "{SDFType}",
    "description": "An enumeration of SDF types.",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "SPHERE",
        "description": "A sphere description."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "BOX",
        "description": "A box description."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "TORUS",
        "description": "A torus description."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "PLANE",
        "description": "A plane description."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "HEIGHTFIELD",
        "description": "A heightfield description."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 429,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/SignedDistanceFunction.js",
    "memberof": null,
    "longname": "src/volume/sdf/SignedDistanceFunction.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { OperationType } from \"../csg/OperationType.js\";\r\nimport { Union } from \"../csg/Union.js\";\r\nimport { Difference } from \"../csg/Difference.js\";\r\nimport { Intersection } from \"../csg/Intersection.js\";\r\nimport { DensityFunction } from \"../csg/DensityFunction.js\";\r\nimport { Material } from \"../Material.js\";\r\n\r\n/**\r\n * An abstract Signed Distance Function.\r\n *\r\n * An SDF describes the signed Euclidean distance to the surface of an object,\r\n * effectively describing its density at every point in 3D space. It yields\r\n * negative values for points that lie inside the volume and positive values\r\n * for points outside. The value is zero at the exact boundary of the object.\r\n */\r\n\r\nexport class SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new base SDF.\r\n\t *\r\n\t * @param {SDFType} type - The type of the SDF.\r\n\t * @param {Number} [material=Material.SOLID] - A material index. Must be an integer in the range of 1 to 255.\r\n\t */\r\n\r\n\tconstructor(type, material = Material.SOLID) {\r\n\r\n\t\t/**\r\n\t\t * The type of this SDF.\r\n\t\t *\r\n\t\t * @type {SDFType}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.type = type;\r\n\r\n\t\t/**\r\n\t\t * The operation type.\r\n\t\t *\r\n\t\t * @type {OperationType}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.operation = null;\r\n\r\n\t\t/**\r\n\t\t * A material index.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t * @default Material.SOLID\r\n\t\t */\r\n\r\n\t\tthis.material = Math.min(255, Math.max(Material.SOLID, Math.trunc(material)));\r\n\r\n\t\t/**\r\n\t\t * A list of SDFs.\r\n\t\t *\r\n\t\t * SDFs can be chained to build CSG expressions.\r\n\t\t *\r\n\t\t * @type {SignedDistanceFunction[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.children = [];\r\n\r\n\t\t/**\r\n\t\t * The bounding box of this SDF.\r\n\t\t *\r\n\t\t * @type {Box3}\r\n\t\t * @private\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.bbox = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The bounding box of this SDF.\r\n\t *\r\n\t * @type {Box3}\r\n\t */\r\n\r\n\tget boundingBox() {\r\n\r\n\t\treturn (this.bbox !== null) ? this.bbox : this.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The complete bounding box of this SDF.\r\n\t *\r\n\t * @type {Box3}\r\n\t */\r\n\r\n\tget completeBoundingBox() {\r\n\r\n\t\tconst children = this.children;\r\n\t\tconst bbox = this.boundingBox.clone();\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tbbox.union(children[i].completeBoundingBox);\r\n\r\n\t\t}\r\n\r\n\t\treturn bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given SDF to this one.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t * @return {SignedDistanceFunction} This SDF.\r\n\t */\r\n\r\n\tunion(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.UNION;\r\n\t\tthis.children.push(sdf);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given SDF from this one.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t * @return {SignedDistanceFunction} This SDF.\r\n\t */\r\n\r\n\tsubtract(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.DIFFERENCE;\r\n\t\tthis.children.push(sdf);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Intersects the given SDF with this one.\r\n\t *\r\n\t * @param {SignedDistanceFunction} sdf - An SDF.\r\n\t * @return {SignedDistanceFunction} This SDF.\r\n\t */\r\n\r\n\tintersect(sdf) {\r\n\r\n\t\tsdf.operation = OperationType.INTERSECTION;\r\n\t\tthis.children.push(sdf);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A serialised description of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = {\r\n\t\t\ttype: this.type,\r\n\t\t\toperation: this.operation,\r\n\t\t\tmaterial: this.material,\r\n\t\t\tparameters: null,\r\n\t\t\tchildren: []\r\n\t\t};\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tresult.children.push(children[i].serialise());\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translates this SDF into a CSG expression.\r\n\t *\r\n\t * @return {Operation} A CSG operation.\r\n\t * @example a.union(b.intersect(c)).union(d).subtract(e) => Difference(Union(a, Intersection(b, c), d), e)\r\n\t */\r\n\r\n\ttoCSG() {\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tlet operation = new DensityFunction(this);\r\n\t\tlet operationType;\r\n\t\tlet child;\r\n\t\tlet i, l;\r\n\r\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\r\n\r\n\t\t\tchild = children[i];\r\n\r\n\t\t\tif(operationType !== child.operation) {\r\n\r\n\t\t\t\toperationType = child.operation;\r\n\r\n\t\t\t\tswitch(operationType) {\r\n\r\n\t\t\t\t\tcase OperationType.UNION:\r\n\t\t\t\t\t\toperation = new Union(operation);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase OperationType.DIFFERENCE:\r\n\t\t\t\t\t\toperation = new Difference(operation);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase OperationType.INTERSECTION:\r\n\t\t\t\t\t\toperation = new Intersection(operation);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toperation.children.push(child.toCSG());\r\n\r\n\t\t}\r\n\r\n\t\treturn operation;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this SDF.\r\n\t *\r\n\t * @throws {Error} An error is thrown if the method is not overridden.\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthrow new Error(\"SDF: bounding box method not implemented!\");\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @throws {Error} An error is thrown if the method is not overridden.\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The Euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\tthrow new Error(\"SDF: sample method not implemented!\");\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 430,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SignedDistanceFunction",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/SignedDistanceFunction.js",
    "importStyle": "{SignedDistanceFunction}",
    "description": "An abstract Signed Distance Function.\n\nAn SDF describes the signed Euclidean distance to the surface of an object,\neffectively describing its density at every point in 3D space. It yields\nnegative values for points that lie inside the volume and positive values\nfor points outside. The value is zero at the exact boundary of the object.",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 431,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#constructor",
    "access": null,
    "description": "Constructs a new base SDF.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "SDFType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the SDF."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Material.SOLID",
        "defaultRaw": "Material.SOLID",
        "name": "material",
        "description": "A material index. Must be an integer in the range of 1 to 255."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 432,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#type",
    "access": null,
    "description": "The type of this SDF.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "SDFType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 433,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operation",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#operation",
    "access": null,
    "description": "The operation type.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "OperationType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 434,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "material",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#material",
    "access": "private",
    "description": "A material index.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "Material.SOLID"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 435,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "children",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#children",
    "access": "private",
    "description": "A list of SDFs.\n\nSDFs can be chained to build CSG expressions.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 436,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#bbox",
    "access": "private",
    "description": "The bounding box of this SDF.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 437,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "boundingBox",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#boundingBox",
    "access": null,
    "description": "The bounding box of this SDF.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 438,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "completeBoundingBox",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#completeBoundingBox",
    "access": null,
    "description": "The complete bounding box of this SDF.",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 439,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "union",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#union",
    "access": null,
    "description": "Adds the given SDF to this one.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "This SDF."
    },
    "generator": false
  },
  {
    "__docId__": 440,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "subtract",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#subtract",
    "access": null,
    "description": "Subtracts the given SDF from this one.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "This SDF."
    },
    "generator": false
  },
  {
    "__docId__": 441,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "intersect",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#intersect",
    "access": null,
    "description": "Intersects the given SDF with this one.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "SignedDistanceFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "An SDF."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SignedDistanceFunction"
      ],
      "spread": false,
      "description": "This SDF."
    },
    "generator": false
  },
  {
    "__docId__": 442,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 168,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 443,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toCSG",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#toCSG",
    "access": null,
    "description": "Translates this SDF into a CSG expression.",
    "examples": [
      "a.union(b.intersect(c)).union(d).subtract(e) => Difference(Union(a, Intersection(b, c), d), e)"
    ],
    "lineNumber": 199,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Operation"
      ],
      "spread": false,
      "description": "A CSG operation."
    },
    "generator": false
  },
  {
    "__docId__": 444,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this SDF.",
    "lineNumber": 249,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "An error is thrown if the method is not overridden."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 445,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction",
    "longname": "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The Euclidean distance to the surface."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "An error is thrown if the method is not overridden."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 446,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/Sphere.js",
    "memberof": null,
    "longname": "src/volume/sdf/Sphere.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, Vector3 } from \"math-ds\";\r\nimport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nimport { SDFType } from \"./SDFType.js\";\r\n\r\n/**\r\n * A Signed Distance Function that describes a sphere.\r\n */\r\n\r\nexport class Sphere extends SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new sphere SDF.\r\n\t *\r\n\t * @param {Object} parameters - The parameters.\r\n\t * @param {Array} parameters.origin - The origin [x, y, z].\r\n\t * @param {Number} parameters.radius - The radius.\r\n\t * @param {Number} [material] - A material index.\r\n\t */\r\n\r\n\tconstructor(parameters = {}, material) {\r\n\r\n\t\tsuper(SDFType.SPHERE, material);\r\n\r\n\t\t/**\r\n\t\t * The origin.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.origin = new Vector3(...parameters.origin);\r\n\r\n\t\t/**\r\n\t\t * The radius.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.radius = parameters.radius;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this density field.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\tthis.bbox.min.copy(this.origin).subScalar(this.radius);\r\n\t\tthis.bbox.max.copy(this.origin).addScalar(this.radius);\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tconst dx = position.x - origin.x;\r\n\t\tconst dy = position.y - origin.y;\r\n\t\tconst dz = position.z - origin.z;\r\n\r\n\t\tconst length = Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n\r\n\t\treturn length - this.radius;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A concise representation of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = super.serialise();\r\n\r\n\t\tresult.parameters = {\r\n\t\t\torigin: this.origin.toArray(),\r\n\t\t\tradius: this.radius\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 447,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Sphere",
    "memberof": "src/volume/sdf/Sphere.js",
    "longname": "src/volume/sdf/Sphere.js~Sphere",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/Sphere.js",
    "importStyle": "{Sphere}",
    "description": "A Signed Distance Function that describes a sphere.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction"
    ]
  },
  {
    "__docId__": 448,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#constructor",
    "access": null,
    "description": "Constructs a new sphere SDF.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "The parameters."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.origin",
        "description": "The origin [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.radius",
        "description": "The radius."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "material",
        "description": "A material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 449,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "origin",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#origin",
    "access": "private",
    "description": "The origin.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "radius",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#radius",
    "access": "private",
    "description": "The radius.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this density field.",
    "lineNumber": 50,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 452,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#bbox",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The euclidean distance to the surface."
    },
    "generator": false
  },
  {
    "__docId__": 454,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/Sphere.js~Sphere",
    "longname": "src/volume/sdf/Sphere.js~Sphere#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 88,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A concise representation of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 455,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/sdf/Torus.js",
    "memberof": null,
    "longname": "src/volume/sdf/Torus.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Box3, Vector3 } from \"math-ds\";\r\nimport { SignedDistanceFunction } from \"./SignedDistanceFunction.js\";\r\nimport { SDFType } from \"./SDFType.js\";\r\n\r\n/**\r\n * A Signed Distance Function that describes a torus.\r\n */\r\n\r\nexport class Torus extends SignedDistanceFunction {\r\n\r\n\t/**\r\n\t * Constructs a new torus SDF.\r\n\t *\r\n\t * @param {Object} parameters - The parameters.\r\n\t * @param {Array} parameters.origin - The origin [x, y, z].\r\n\t * @param {Number} parameters.R - The distance from the center to the tube.\r\n\t * @param {Number} parameters.r - The radius of the tube.\r\n\t * @param {Number} [material] - A material index.\r\n\t */\r\n\r\n\tconstructor(parameters = {}, material) {\r\n\r\n\t\tsuper(SDFType.TORUS, material);\r\n\r\n\t\t/**\r\n\t\t * The origin.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.origin = new Vector3(...parameters.origin);\r\n\r\n\t\t/**\r\n\t\t * The distance from the center to the tube.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.R = parameters.R;\r\n\r\n\t\t/**\r\n\t\t * The radius of the tube.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.r = parameters.r;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the bounding box of this density field.\r\n\t *\r\n\t * @return {Box3} The bounding box.\r\n\t */\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tthis.bbox = new Box3();\r\n\r\n\t\tthis.bbox.min.copy(this.origin).subScalar(this.R).subScalar(this.r);\r\n\t\tthis.bbox.max.copy(this.origin).addScalar(this.R).addScalar(this.r);\r\n\r\n\t\treturn this.bbox;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Samples the volume's density at the given point in space.\r\n\t *\r\n\t * @param {Vector3} position - A position.\r\n\t * @return {Number} The euclidean distance to the surface.\r\n\t */\r\n\r\n\tsample(position) {\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tconst dx = position.x - origin.x;\r\n\t\tconst dy = position.y - origin.y;\r\n\t\tconst dz = position.z - origin.z;\r\n\r\n\t\tconst q = Math.sqrt(dx * dx + dz * dz) - this.R;\r\n\t\tconst length = Math.sqrt(q * q + dy * dy);\r\n\r\n\t\treturn length - this.r;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serialises this SDF.\r\n\t *\r\n\t * @return {Object} A serialised description of this SDF.\r\n\t */\r\n\r\n\tserialise() {\r\n\r\n\t\tconst result = super.serialise();\r\n\r\n\t\tresult.parameters = {\r\n\t\t\torigin: this.origin.toArray(),\r\n\t\t\tR: this.R,\r\n\t\t\tr: this.r\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 456,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Torus",
    "memberof": "src/volume/sdf/Torus.js",
    "longname": "src/volume/sdf/Torus.js~Torus",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/sdf/Torus.js",
    "importStyle": "{Torus}",
    "description": "A Signed Distance Function that describes a torus.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/volume/sdf/SignedDistanceFunction.js~SignedDistanceFunction"
    ]
  },
  {
    "__docId__": 457,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#constructor",
    "access": null,
    "description": "Constructs a new torus SDF.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "The parameters."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.origin",
        "description": "The origin [x, y, z]."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.R",
        "description": "The distance from the center to the tube."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters.r",
        "description": "The radius of the tube."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "material",
        "description": "A material index."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 458,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "origin",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#origin",
    "access": "private",
    "description": "The origin.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 459,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "R",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#R",
    "access": "private",
    "description": "The distance from the center to the tube.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "r",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#r",
    "access": "private",
    "description": "The radius of the tube.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 461,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "computeBoundingBox",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#computeBoundingBox",
    "access": null,
    "description": "Calculates the bounding box of this density field.",
    "lineNumber": 60,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "The bounding box."
    },
    "generator": false
  },
  {
    "__docId__": 462,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bbox",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#bbox",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sample",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#sample",
    "access": null,
    "description": "Samples the volume's density at the given point in space.",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The euclidean distance to the surface."
    },
    "generator": false
  },
  {
    "__docId__": 464,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serialise",
    "memberof": "src/volume/sdf/Torus.js~Torus",
    "longname": "src/volume/sdf/Torus.js~Torus#serialise",
    "access": null,
    "description": "Serialises this SDF.",
    "lineNumber": 99,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A serialised description of this SDF."
    },
    "generator": false
  },
  {
    "__docId__": 465,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/volume/Voxel.js",
    "memberof": null,
    "longname": "src/volume/Voxel.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Vector3 } from \"math-ds\";\r\n\r\n/**\r\n * A cubic voxel that holds information about the surface of a volume.\r\n */\r\n\r\nexport class Voxel {\r\n\r\n\t/**\r\n\t * Constructs a new voxel.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * Holds binary material information about all eight corners of this voxel.\r\n\t\t *\r\n\t\t * A value of 0 means that this voxel is completely outside of the volume,\r\n\t\t * whereas a value of 255 means that it's fully inside of it. Any other\r\n\t\t * value indicates a material change which implies that the voxel contains\r\n\t\t * the surface.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t */\r\n\r\n\t\tthis.materials = 0;\r\n\r\n\t\t/**\r\n\t\t * The amount of edges that exhibit a material change in this voxel.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t */\r\n\r\n\t\tthis.edgeCount = 0;\r\n\r\n\t\t/**\r\n\t\t * A generated index for this voxel's vertex. Used during the construction\r\n\t\t * of the final polygons.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default -1\r\n\t\t */\r\n\r\n\t\tthis.index = -1;\r\n\r\n\t\t/**\r\n\t\t * The vertex that lies inside this voxel.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.position = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * The normal of the vertex that lies inside this voxel.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\r\n\t\tthis.normal = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * A QEF data construct. Used to calculate the vertex position.\r\n\t\t *\r\n\t\t * @type {QEFData}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.qefData = null;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 466,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Voxel",
    "memberof": "src/volume/Voxel.js",
    "longname": "src/volume/Voxel.js~Voxel",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/volume/Voxel.js",
    "importStyle": "{Voxel}",
    "description": "A cubic voxel that holds information about the surface of a volume.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 467,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#constructor",
    "access": null,
    "description": "Constructs a new voxel.",
    "lineNumber": 13,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 468,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "materials",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#materials",
    "access": null,
    "description": "Holds binary material information about all eight corners of this voxel.\n\nA value of 0 means that this voxel is completely outside of the volume,\nwhereas a value of 255 means that it's fully inside of it. Any other\nvalue indicates a material change which implies that the voxel contains\nthe surface.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeCount",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#edgeCount",
    "access": null,
    "description": "The amount of edges that exhibit a material change in this voxel.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "0"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "index",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#index",
    "access": null,
    "description": "A generated index for this voxel's vertex. Used during the construction\nof the final polygons.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "-1"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "position",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#position",
    "access": null,
    "description": "The vertex that lies inside this voxel.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "normal",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#normal",
    "access": null,
    "description": "The normal of the vertex that lies inside this voxel.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "qefData",
    "memberof": "src/volume/Voxel.js~Voxel",
    "longname": "src/volume/Voxel.js~Voxel#qefData",
    "access": null,
    "description": "A QEF data construct. Used to calculate the vertex position.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "QEFData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 474,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/Action.js",
    "memberof": null,
    "longname": "src/worker/Action.js",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "content": "/**\r\n * An enumeration of worker actions.\r\n *\r\n * @type {Object}\r\n * @property {String} EXTRACT - Isosurface extraction signal.\r\n * @property {String} MODIFY - Data modification signal.\r\n * @property {String} CLOSE - Thread termination signal.\r\n */\r\n\r\nexport const Action = {\r\n\r\n\tEXTRACT: \"worker.extract\",\r\n\tMODIFY: \"worker.modify\",\r\n\tCLOSE: \"worker.close\"\r\n\r\n};\r\n"
  },
  {
    "__docId__": 475,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Action",
    "memberof": "src/worker/Action.js",
    "longname": "src/worker/Action.js~Action",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/Action.js",
    "importStyle": "{Action}",
    "description": "An enumeration of worker actions.",
    "lineNumber": 10,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "EXTRACT",
        "description": "Isosurface extraction signal."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "MODIFY",
        "description": "Data modification signal."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "CLOSE",
        "description": "Thread termination signal."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 476,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/index.js",
    "memberof": null,
    "longname": "src/worker/index.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "/**\r\n * Multithreading components.\r\n *\r\n * @module rabbit-hole/worker\r\n */\r\n\r\nexport { Action } from \"./Action.js\";\r\nexport { ThreadPool } from \"./ThreadPool.js\";\r\nexport { WorkerTask } from \"./WorkerTask.js\";\r\n"
  },
  {
    "__docId__": 477,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/SurfaceExtractor.js",
    "memberof": null,
    "longname": "src/worker/SurfaceExtractor.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { DualContouring } from \"../isosurface\";\r\nimport { Chunk } from \"../volume/octree/Chunk.js\";\r\nimport { Action } from \"./Action.js\";\r\n\r\n/**\r\n * A surface extractor that generates triangles from hermite data.\r\n */\r\n\r\nexport class SurfaceExtractor {\r\n\r\n\t/**\r\n\t * Constructs a new surface extractor.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * An empty chunk of hermite data.\r\n\t\t *\r\n\t\t * @type {Chunk}\r\n\t\t */\r\n\r\n\t\tthis.chunk = new Chunk();\r\n\r\n\t\t/**\r\n\t\t * A container for the data that will be returned to the main thread.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @property {Action} action - The worker action.\r\n\t\t * @property {Object} chunk - A serialised volume chunk.\r\n\t\t * @property {Float32Array} positions - Generated vertices.\r\n\t\t * @property {Float32Array} normals - Generated vertices.\r\n\t\t * @property {Uint16Array} indices - Generated indices.\r\n\t\t */\r\n\r\n\t\tthis.message = {\r\n\t\t\taction: Action.EXTRACT,\r\n\t\t\tchunk: null,\r\n\t\t\tpositions: null,\r\n\t\t\tnormals: null,\r\n\t\t\tindices: null\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * A list of transferable objects.\r\n\t\t *\r\n\t\t * @type {ArrayBuffer[]}\r\n\t\t */\r\n\r\n\t\tthis.transferList = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a surface from the given hermite data.\r\n\t *\r\n\t * @param {Object} chunk - A serialised volume chunk.\r\n\t */\r\n\r\n\textract(chunk) {\r\n\r\n\t\tconst message = this.message;\r\n\t\tconst transferList = [];\r\n\r\n\t\t// Adopt the provided chunk data.\r\n\t\tthis.chunk.deserialise(chunk);\r\n\t\tthis.chunk.data.decompress();\r\n\r\n\t\tconst result = DualContouring.run(this.chunk);\r\n\r\n\t\tif(result !== null) {\r\n\r\n\t\t\tmessage.indices = result.indices;\r\n\t\t\tmessage.positions = result.positions;\r\n\t\t\tmessage.normals = result.normals;\r\n\r\n\t\t\ttransferList.push(message.indices.buffer);\r\n\t\t\ttransferList.push(message.positions.buffer);\r\n\t\t\ttransferList.push(message.normals.buffer);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage.indices = null;\r\n\t\t\tmessage.positions = null;\r\n\t\t\tmessage.normals = null;\r\n\r\n\t\t}\r\n\r\n\t\t// Simply send the already compressed and serialised chunk back.\r\n\t\tthis.chunk.deserialise(chunk);\r\n\t\tmessage.chunk = this.chunk.serialise();\r\n\t\tthis.transferList = this.chunk.createTransferList(transferList);\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 478,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SurfaceExtractor",
    "memberof": "src/worker/SurfaceExtractor.js",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/SurfaceExtractor.js",
    "importStyle": "{SurfaceExtractor}",
    "description": "A surface extractor that generates triangles from hermite data.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 479,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#constructor",
    "access": null,
    "description": "Constructs a new surface extractor.",
    "lineNumber": 15,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 480,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunk",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#chunk",
    "access": null,
    "description": "An empty chunk of hermite data.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Chunk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "message",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#message",
    "access": null,
    "description": "A container for the data that will be returned to the main thread.",
    "lineNumber": 36,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Action"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The worker action."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A serialised volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "positions",
        "description": "Generated vertices."
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "normals",
        "description": "Generated vertices."
      },
      {
        "nullable": null,
        "types": [
          "Uint16Array"
        ],
        "spread": false,
        "optional": false,
        "name": "indices",
        "description": "Generated indices."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transferList",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#transferList",
    "access": null,
    "description": "A list of transferable objects.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "ArrayBuffer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "extract",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#extract",
    "access": null,
    "description": "Extracts a surface from the given hermite data.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A serialised volume chunk."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 484,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transferList",
    "memberof": "src/worker/SurfaceExtractor.js~SurfaceExtractor",
    "longname": "src/worker/SurfaceExtractor.js~SurfaceExtractor#transferList",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/thread-pool-events.js",
    "memberof": null,
    "longname": "src/worker/thread-pool-events.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { WorkerEvent } from \"../events/WorkerEvent.js\";\r\n\r\n/**\r\n * A worker message event.\r\n *\r\n * This event is dispatched by {@link ThreadPool}.\r\n *\r\n * @type {WorkerEvent}\r\n * @example threadPool.addEventListener(\"message\", myListener);\r\n */\r\n\r\nexport const message = new WorkerEvent(\"message\");\r\n"
  },
  {
    "__docId__": 486,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "message",
    "memberof": "src/worker/thread-pool-events.js",
    "longname": "src/worker/thread-pool-events.js~message",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/thread-pool-events.js",
    "importStyle": "{message}",
    "description": "A worker message event.\n\nThis event is dispatched by {@link ThreadPool}.",
    "examples": [
      "threadPool.addEventListener(\"message\", myListener);"
    ],
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "WorkerEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 487,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/ThreadPool.js",
    "memberof": null,
    "longname": "src/worker/ThreadPool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { EventTarget } from \"synthetic-event\";\r\nimport { Action } from \"./Action.js\";\r\nimport * as events from \"./thread-pool-events.js\";\r\n\r\nimport worker from \"./worker.tmp\";\r\n\r\n/**\r\n * Manages worker threads.\r\n *\r\n * @implements {EventListener}\r\n */\r\n\r\nexport class ThreadPool extends EventTarget {\r\n\r\n\t/**\r\n\t * Constructs a new thread pool.\r\n\t *\r\n\t * @param {Number} [maxWorkers] - Limits the amount of active workers. The default limit is the amount of logical processors.\r\n\t */\r\n\r\n\tconstructor(maxWorkers = navigator.hardwareConcurrency) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * An object URL that points to the worker program.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.workerURL = URL.createObjectURL(new Blob([worker], { type: \"text/javascript\" }));\r\n\r\n\t\t/**\r\n\t\t * The maximum number of active worker threads.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default navigator.hardwareConcurrency\r\n\t\t */\r\n\r\n\t\tthis.maxWorkers = Math.min(navigator.hardwareConcurrency, Math.max(maxWorkers, 1));\r\n\r\n\t\t/**\r\n\t\t * A list of existing workers.\r\n\t\t *\r\n\t\t * @type {Worker[]}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.workers = [];\r\n\r\n\t\t/**\r\n\t\t * Keeps track of workers that are currently busy.\r\n\t\t *\r\n\t\t * @type {WeakSet}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis.busyWorkers = new WeakSet();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles events.\r\n\t *\r\n\t * @param {Event} event - An event.\r\n\t */\r\n\r\n\thandleEvent(event) {\r\n\r\n\t\tswitch(event.type) {\r\n\r\n\t\t\tcase \"message\":\r\n\t\t\t\tthis.busyWorkers.delete(event.target);\r\n\t\t\t\tevents.message.worker = event.target;\r\n\t\t\t\tevents.message.data = event.data;\r\n\t\t\t\tthis.dispatchEvent(events.message);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"error\":\r\n\t\t\t\t// Errors are being handled in the worker.\r\n\t\t\t\tconsole.error(\"Encountered an unexpected error.\", event.message);\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes a worker.\r\n\t *\r\n\t * @param {Worker} worker - The worker to close.\r\n\t */\r\n\r\n\tcloseWorker(worker) {\r\n\r\n\t\tconst index = this.workers.indexOf(worker);\r\n\r\n\t\tif(this.busyWorkers.has(worker)) {\r\n\r\n\t\t\tthis.busyWorkers.delete(worker);\r\n\t\t\tworker.terminate();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tworker.postMessage({\r\n\t\t\t\taction: Action.CLOSE\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tworker.removeEventListener(\"message\", this);\r\n\t\tworker.removeEventListener(\"error\", this);\r\n\r\n\t\tif(index >= 0) {\r\n\r\n\t\t\tthis.workers.splice(index, 1);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new worker.\r\n\t *\r\n\t * @private\r\n\t * @return {Worker} The worker.\r\n\t */\r\n\r\n\tcreateWorker() {\r\n\r\n\t\tconst worker = new Worker(this.workerURL);\r\n\r\n\t\tthis.workers.push(worker);\r\n\r\n\t\tworker.addEventListener(\"message\", this);\r\n\t\tworker.addEventListener(\"error\", this);\r\n\r\n\t\treturn worker;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Polls an available worker and returns it. The worker will be excluded from\r\n\t * subsequent polls until it finishes its task and sends a message back.\r\n\t *\r\n\t * @return {Worker} A worker or null if all resources are currently exhausted.\r\n\t */\r\n\r\n\tgetWorker() {\r\n\r\n\t\tlet worker = null;\r\n\r\n\t\tlet i, l;\r\n\r\n\t\t// Check if an existing worker is available.\r\n\t\tfor(i = 0, l = this.workers.length; i < l; ++i) {\r\n\r\n\t\t\tif(!this.busyWorkers.has(this.workers[i])) {\r\n\r\n\t\t\t\tworker = this.workers[i];\r\n\t\t\t\tthis.busyWorkers.add(worker);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Try to create a new worker if all existing ones are busy.\r\n\t\tif(worker === null && this.workers.length < this.maxWorkers) {\r\n\r\n\t\t\tif(this.workerURL !== null) {\r\n\r\n\t\t\t\tworker = this.createWorker();\r\n\t\t\t\tthis.busyWorkers.add(worker);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn worker;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets this thread pool by closing all workers.\r\n\t */\r\n\r\n\tclear() {\r\n\r\n\t\twhile(this.workers.length > 0) {\r\n\r\n\t\t\tthis.closeWorker(this.workers.pop());\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all active workers and releases the worker program blob.\r\n\t */\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.clear();\r\n\t\tURL.revokeObjectURL(this.workerURL);\r\n\t\tthis.workerURL = null;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 488,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ThreadPool",
    "memberof": "src/worker/ThreadPool.js",
    "longname": "src/worker/ThreadPool.js~ThreadPool",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/ThreadPool.js",
    "importStyle": "{ThreadPool}",
    "description": "Manages worker threads.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "synthetic-event~EventTarget"
    ],
    "implements": [
      "EventListener"
    ]
  },
  {
    "__docId__": 489,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#constructor",
    "access": null,
    "description": "Constructs a new thread pool.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "maxWorkers",
        "description": "Limits the amount of active workers. The default limit is the amount of logical processors."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 490,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "workerURL",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#workerURL",
    "access": "private",
    "description": "An object URL that points to the worker program.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 491,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "maxWorkers",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#maxWorkers",
    "access": null,
    "description": "The maximum number of active worker threads.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "navigator.hardwareConcurrency"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 492,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "workers",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#workers",
    "access": "private",
    "description": "A list of existing workers.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Worker[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 493,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "busyWorkers",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#busyWorkers",
    "access": "private",
    "description": "Keeps track of workers that are currently busy.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "WeakSet"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 494,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleEvent",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#handleEvent",
    "access": null,
    "description": "Handles events.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "An event."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 495,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "closeWorker",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#closeWorker",
    "access": null,
    "description": "Closes a worker.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Worker"
        ],
        "spread": false,
        "optional": false,
        "name": "worker",
        "description": "The worker to close."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 496,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createWorker",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#createWorker",
    "access": "private",
    "description": "Creates a new worker.",
    "lineNumber": 130,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Worker"
      ],
      "spread": false,
      "description": "The worker."
    },
    "generator": false
  },
  {
    "__docId__": 497,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getWorker",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#getWorker",
    "access": null,
    "description": "Polls an available worker and returns it. The worker will be excluded from\nsubsequent polls until it finishes its task and sends a message back.",
    "lineNumber": 150,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Worker"
      ],
      "spread": false,
      "description": "A worker or null if all resources are currently exhausted."
    },
    "generator": false
  },
  {
    "__docId__": 498,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#clear",
    "access": null,
    "description": "Resets this thread pool by closing all workers.",
    "lineNumber": 190,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 499,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispose",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#dispose",
    "access": null,
    "description": "Removes all active workers and releases the worker program blob.",
    "lineNumber": 204,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 500,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "workerURL",
    "memberof": "src/worker/ThreadPool.js~ThreadPool",
    "longname": "src/worker/ThreadPool.js~ThreadPool#workerURL",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/VolumeModifier.js",
    "memberof": null,
    "longname": "src/worker/VolumeModifier.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Chunk } from \"../volume/octree/Chunk.js\";\r\nimport { ConstructiveSolidGeometry } from \"../volume/csg/ConstructiveSolidGeometry.js\";\r\nimport { SDFReviver } from \"../volume/sdf/SDFReviver.js\";\r\nimport { Action } from \"./Action.js\";\r\n\r\n/**\r\n * A hermite data modifier that applies CSG operations to volume chunks.\r\n */\r\n\r\nexport class VolumeModifier {\r\n\r\n\t/**\r\n\t * Constructs a new hermite data modifier.\r\n\t */\r\n\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * An empty chunk of hermite data.\r\n\t\t *\r\n\t\t * @type {Chunk}\r\n\t\t */\r\n\r\n\t\tthis.chunk = new Chunk();\r\n\r\n\t\t/**\r\n\t\t * A container for the data that will be returned to the main thread.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @property {Action} action - The worker action.\r\n\t\t * @property {Object} chunk - A serialised volume chunk.\r\n\t\t */\r\n\r\n\t\tthis.message = {\r\n\t\t\taction: Action.MODIFY,\r\n\t\t\tchunk: null\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * A list of transferable objects.\r\n\t\t *\r\n\t\t * @type {ArrayBuffer[]}\r\n\t\t */\r\n\r\n\t\tthis.transferList = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the given hermite data.\r\n\t *\r\n\t * @param {Chunk} chunk - A volume chunk.\r\n\t * @param {Object} sdf - A serialised SDF.\r\n\t */\r\n\r\n\tmodify(chunk, sdf) {\r\n\r\n\t\t// Adopt the provided chunk data.\r\n\t\tthis.chunk.deserialise(chunk);\r\n\r\n\t\t// Revive the SDF and execute it.\r\n\t\tConstructiveSolidGeometry.run(this.chunk, SDFReviver.reviveSDF(sdf));\r\n\r\n\t\tthis.message.chunk = this.chunk.serialise();\r\n\t\tthis.transferList = this.chunk.createTransferList();\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 502,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VolumeModifier",
    "memberof": "src/worker/VolumeModifier.js",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/VolumeModifier.js",
    "importStyle": "{VolumeModifier}",
    "description": "A hermite data modifier that applies CSG operations to volume chunks.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 503,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#constructor",
    "access": null,
    "description": "Constructs a new hermite data modifier.",
    "lineNumber": 16,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 504,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunk",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#chunk",
    "access": null,
    "description": "An empty chunk of hermite data.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Chunk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 505,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "message",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#message",
    "access": null,
    "description": "A container for the data that will be returned to the main thread.",
    "lineNumber": 34,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Action"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The worker action."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A serialised volume chunk."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 506,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transferList",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#transferList",
    "access": null,
    "description": "A list of transferable objects.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "ArrayBuffer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 507,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "modify",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#modify",
    "access": null,
    "description": "Modifies the given hermite data.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "A serialised SDF."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 508,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transferList",
    "memberof": "src/worker/VolumeModifier.js~VolumeModifier",
    "longname": "src/worker/VolumeModifier.js~VolumeModifier#transferList",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/worker.js",
    "memberof": null,
    "longname": "src/worker/worker.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { SurfaceExtractor } from \"./SurfaceExtractor.js\";\r\nimport { VolumeModifier } from \"./VolumeModifier.js\";\r\nimport { Action } from \"./Action.js\";\r\n\r\n/**\r\n * A surface extractor.\r\n *\r\n * @type {SurfaceExtractor}\r\n * @private\r\n */\r\n\r\nconst surfaceExtractor = new SurfaceExtractor();\r\n\r\n/**\r\n * A volume modifier.\r\n *\r\n * @type {VolumeModifier}\r\n * @private\r\n */\r\n\r\nconst volumeModifier = new VolumeModifier();\r\n\r\n/**\r\n * Receives and handles messages from the main thread.\r\n *\r\n * @private\r\n * @param {Event} event - A message event containing data from the main thread.\r\n */\r\n\r\nself.addEventListener(\"message\", function onMessage(event) {\r\n\r\n\tconst data = event.data;\r\n\r\n\tswitch(data.action) {\r\n\r\n\t\tcase Action.EXTRACT:\r\n\t\t\tsurfaceExtractor.extract(data.chunk);\r\n\t\t\tpostMessage(surfaceExtractor.message, surfaceExtractor.transferList);\r\n\t\t\tbreak;\r\n\r\n\t\tcase Action.MODIFY:\r\n\t\t\tvolumeModifier.modify(data.chunk, data.sdf);\r\n\t\t\tpostMessage(volumeModifier.message, volumeModifier.transferList);\r\n\t\t\tbreak;\r\n\r\n\t\tcase Action.CLOSE:\r\n\t\tdefault:\r\n\t\t\tclose();\r\n\r\n\t}\r\n\r\n});\r\n\r\n/**\r\n * Returns all data to the main thread and closes the worker.\r\n *\r\n * @private\r\n * @param {Event} event - An error event.\r\n */\r\n\r\nself.addEventListener(\"error\", function onError(event) {\r\n\r\n\tconst message = {\r\n\t\taction: Action.CLOSE,\r\n\t\terror: event.message,\r\n\t\tchunk: null\r\n\t};\r\n\r\n\tconst transferList = [];\r\n\tconst chunks = [surfaceExtractor.chunk, volumeModifier.chunk];\r\n\r\n\t// Find out which operator has the data.\r\n\tconst chunk = (chunks[0].data !== null && !chunks[0].data.neutered) ?\r\n\t\tchunk[0] : (chunks[1].data !== null && !chunks[1].data.neutered) ?\r\n\t\t\tchunk[1] : null;\r\n\r\n\tif(chunk !== null) {\r\n\r\n\t\tmessage.chunk = chunk.serialise();\r\n\t\tchunk.createTransferList(transferList);\r\n\r\n\t}\r\n\r\n\tpostMessage(message, transferList);\r\n\tclose();\r\n\r\n});\r\n"
  },
  {
    "__docId__": 510,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "surfaceExtractor",
    "memberof": "src/worker/worker.js",
    "longname": "src/worker/worker.js~surfaceExtractor",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/worker/worker.js",
    "importStyle": null,
    "description": "A surface extractor.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "SurfaceExtractor"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 511,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "volumeModifier",
    "memberof": "src/worker/worker.js",
    "longname": "src/worker/worker.js~volumeModifier",
    "access": "private",
    "export": false,
    "importPath": "rabbit-hole/src/worker/worker.js",
    "importStyle": null,
    "description": "A volume modifier.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "VolumeModifier"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 512,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/worker/WorkerTask.js",
    "memberof": null,
    "longname": "src/worker/WorkerTask.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Task } from \"../core/Task.js\";\r\n\r\n/**\r\n * A worker task.\r\n */\r\n\r\nexport class WorkerTask extends Task {\r\n\r\n\t/**\r\n\t * Constructs a new worker task.\r\n\t *\r\n\t * @param {Action} action - A worker action.\r\n\t * @param {Chunk} chunk - A volume chunk.\r\n\t * @param {Number} [priority] - The priority.\r\n\t */\r\n\r\n\tconstructor(action, chunk, priority) {\r\n\r\n\t\tsuper(priority);\r\n\r\n\t\t/**\r\n\t\t * A worker action.\r\n\t\t *\r\n\t\t * @type {Action}\r\n\t\t * @default null\r\n\t\t */\r\n\r\n\t\tthis.action = action;\r\n\r\n\t\t/**\r\n\t\t * A volume chunk.\r\n\t\t *\r\n\t\t * @type {Chunk}\r\n\t\t */\r\n\r\n\t\tthis.chunk = chunk;\r\n\r\n\t}\r\n\r\n}\r\n"
  },
  {
    "__docId__": 513,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WorkerTask",
    "memberof": "src/worker/WorkerTask.js",
    "longname": "src/worker/WorkerTask.js~WorkerTask",
    "access": null,
    "export": true,
    "importPath": "rabbit-hole/src/worker/WorkerTask.js",
    "importStyle": "{WorkerTask}",
    "description": "A worker task.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/core/Task.js~Task"
    ]
  },
  {
    "__docId__": 514,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/worker/WorkerTask.js~WorkerTask",
    "longname": "src/worker/WorkerTask.js~WorkerTask#constructor",
    "access": null,
    "description": "Constructs a new worker task.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Action"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "A worker action."
      },
      {
        "nullable": null,
        "types": [
          "Chunk"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A volume chunk."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "priority",
        "description": "The priority."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 515,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "action",
    "memberof": "src/worker/WorkerTask.js~WorkerTask",
    "longname": "src/worker/WorkerTask.js~WorkerTask#action",
    "access": null,
    "description": "A worker action.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Action"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 516,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunk",
    "memberof": "src/worker/WorkerTask.js~WorkerTask",
    "longname": "src/worker/WorkerTask.js~WorkerTask#chunk",
    "access": null,
    "description": "A volume chunk.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Chunk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 518,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 519,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 520,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 521,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 522,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 523,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 524,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 525,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 526,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 527,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 528,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 529,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 530,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 531,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 532,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 533,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 534,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 535,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 536,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 537,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 538,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 539,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 540,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 541,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 542,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 543,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 544,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 545,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 546,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 547,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 548,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 549,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 550,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 551,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 552,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 553,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 554,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 555,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 556,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 557,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 558,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 559,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 560,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 561,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 562,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 563,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 564,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 566,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 567,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 568,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 569,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 570,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 571,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 572,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 573,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]